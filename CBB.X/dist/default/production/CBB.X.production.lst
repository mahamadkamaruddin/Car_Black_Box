

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 25 21:06:57 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Generated 22/03/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     0006                     	;# 
    89     0007                     	;# 
    90     0008                     	;# 
    91     0009                     	;# 
    92     000A                     	;# 
    93     000B                     	;# 
    94     000C                     	;# 
    95     000D                     	;# 
    96     000E                     	;# 
    97     000E                     	;# 
    98     000F                     	;# 
    99     0010                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0013                     	;# 
   103     0014                     	;# 
   104     0015                     	;# 
   105     0015                     	;# 
   106     0016                     	;# 
   107     0017                     	;# 
   108     0018                     	;# 
   109     0019                     	;# 
   110     001A                     	;# 
   111     001B                     	;# 
   112     001B                     	;# 
   113     001C                     	;# 
   114     001D                     	;# 
   115     001E                     	;# 
   116     001F                     	;# 
   117     0081                     	;# 
   118     0085                     	;# 
   119     0086                     	;# 
   120     0087                     	;# 
   121     0088                     	;# 
   122     0089                     	;# 
   123     008C                     	;# 
   124     008D                     	;# 
   125     008E                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0094                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     010E                     	;# 
   139     010F                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001B                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     0088                     	;# 
   182     0089                     	;# 
   183     008C                     	;# 
   184     008D                     	;# 
   185     008E                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     010C                     	;# 
   197     010D                     	;# 
   198     010E                     	;# 
   199     010F                     	;# 
   200     018C                     	;# 
   201     018D                     	;# 
   202     0000                     	;# 
   203     0001                     	;# 
   204     0002                     	;# 
   205     0003                     	;# 
   206     0004                     	;# 
   207     0005                     	;# 
   208     0006                     	;# 
   209     0007                     	;# 
   210     0008                     	;# 
   211     0009                     	;# 
   212     000A                     	;# 
   213     000B                     	;# 
   214     000C                     	;# 
   215     000D                     	;# 
   216     000E                     	;# 
   217     000E                     	;# 
   218     000F                     	;# 
   219     0010                     	;# 
   220     0011                     	;# 
   221     0012                     	;# 
   222     0013                     	;# 
   223     0014                     	;# 
   224     0015                     	;# 
   225     0015                     	;# 
   226     0016                     	;# 
   227     0017                     	;# 
   228     0018                     	;# 
   229     0019                     	;# 
   230     001A                     	;# 
   231     001B                     	;# 
   232     001B                     	;# 
   233     001C                     	;# 
   234     001D                     	;# 
   235     001E                     	;# 
   236     001F                     	;# 
   237     0081                     	;# 
   238     0085                     	;# 
   239     0086                     	;# 
   240     0087                     	;# 
   241     0088                     	;# 
   242     0089                     	;# 
   243     008C                     	;# 
   244     008D                     	;# 
   245     008E                     	;# 
   246     0091                     	;# 
   247     0092                     	;# 
   248     0093                     	;# 
   249     0094                     	;# 
   250     0098                     	;# 
   251     0099                     	;# 
   252     009C                     	;# 
   253     009D                     	;# 
   254     009E                     	;# 
   255     009F                     	;# 
   256     010C                     	;# 
   257     010D                     	;# 
   258     010E                     	;# 
   259     010F                     	;# 
   260     018C                     	;# 
   261     018D                     	;# 
   262     0000                     	;# 
   263     0001                     	;# 
   264     0002                     	;# 
   265     0003                     	;# 
   266     0004                     	;# 
   267     0005                     	;# 
   268     0006                     	;# 
   269     0007                     	;# 
   270     0008                     	;# 
   271     0009                     	;# 
   272     000A                     	;# 
   273     000B                     	;# 
   274     000C                     	;# 
   275     000D                     	;# 
   276     000E                     	;# 
   277     000E                     	;# 
   278     000F                     	;# 
   279     0010                     	;# 
   280     0011                     	;# 
   281     0012                     	;# 
   282     0013                     	;# 
   283     0014                     	;# 
   284     0015                     	;# 
   285     0015                     	;# 
   286     0016                     	;# 
   287     0017                     	;# 
   288     0018                     	;# 
   289     0019                     	;# 
   290     001A                     	;# 
   291     001B                     	;# 
   292     001B                     	;# 
   293     001C                     	;# 
   294     001D                     	;# 
   295     001E                     	;# 
   296     001F                     	;# 
   297     0081                     	;# 
   298     0085                     	;# 
   299     0086                     	;# 
   300     0087                     	;# 
   301     0088                     	;# 
   302     0089                     	;# 
   303     008C                     	;# 
   304     008D                     	;# 
   305     008E                     	;# 
   306     0091                     	;# 
   307     0092                     	;# 
   308     0093                     	;# 
   309     0094                     	;# 
   310     0098                     	;# 
   311     0099                     	;# 
   312     009C                     	;# 
   313     009D                     	;# 
   314     009E                     	;# 
   315     009F                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     010F                     	;# 
   320     018C                     	;# 
   321     018D                     	;# 
   322     0000                     	;# 
   323     0001                     	;# 
   324     0002                     	;# 
   325     0003                     	;# 
   326     0004                     	;# 
   327     0005                     	;# 
   328     0006                     	;# 
   329     0007                     	;# 
   330     0008                     	;# 
   331     0009                     	;# 
   332     000A                     	;# 
   333     000B                     	;# 
   334     000C                     	;# 
   335     000D                     	;# 
   336     000E                     	;# 
   337     000E                     	;# 
   338     000F                     	;# 
   339     0010                     	;# 
   340     0011                     	;# 
   341     0012                     	;# 
   342     0013                     	;# 
   343     0014                     	;# 
   344     0015                     	;# 
   345     0015                     	;# 
   346     0016                     	;# 
   347     0017                     	;# 
   348     0018                     	;# 
   349     0019                     	;# 
   350     001A                     	;# 
   351     001B                     	;# 
   352     001B                     	;# 
   353     001C                     	;# 
   354     001D                     	;# 
   355     001E                     	;# 
   356     001F                     	;# 
   357     0081                     	;# 
   358     0085                     	;# 
   359     0086                     	;# 
   360     0087                     	;# 
   361     0088                     	;# 
   362     0089                     	;# 
   363     008C                     	;# 
   364     008D                     	;# 
   365     008E                     	;# 
   366     0091                     	;# 
   367     0092                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0098                     	;# 
   371     0099                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     010C                     	;# 
   377     010D                     	;# 
   378     010E                     	;# 
   379     010F                     	;# 
   380     018C                     	;# 
   381     018D                     	;# 
   382     0000                     	;# 
   383     0001                     	;# 
   384     0002                     	;# 
   385     0003                     	;# 
   386     0004                     	;# 
   387     0005                     	;# 
   388     0006                     	;# 
   389     0007                     	;# 
   390     0008                     	;# 
   391     0009                     	;# 
   392     000A                     	;# 
   393     000B                     	;# 
   394     000C                     	;# 
   395     000D                     	;# 
   396     000E                     	;# 
   397     000E                     	;# 
   398     000F                     	;# 
   399     0010                     	;# 
   400     0011                     	;# 
   401     0012                     	;# 
   402     0013                     	;# 
   403     0014                     	;# 
   404     0015                     	;# 
   405     0015                     	;# 
   406     0016                     	;# 
   407     0017                     	;# 
   408     0018                     	;# 
   409     0019                     	;# 
   410     001A                     	;# 
   411     001B                     	;# 
   412     001B                     	;# 
   413     001C                     	;# 
   414     001D                     	;# 
   415     001E                     	;# 
   416     001F                     	;# 
   417     0081                     	;# 
   418     0085                     	;# 
   419     0086                     	;# 
   420     0087                     	;# 
   421     0088                     	;# 
   422     0089                     	;# 
   423     008C                     	;# 
   424     008D                     	;# 
   425     008E                     	;# 
   426     0091                     	;# 
   427     0092                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0098                     	;# 
   431     0099                     	;# 
   432     009C                     	;# 
   433     009D                     	;# 
   434     009E                     	;# 
   435     009F                     	;# 
   436     010C                     	;# 
   437     010D                     	;# 
   438     010E                     	;# 
   439     010F                     	;# 
   440     018C                     	;# 
   441     018D                     	;# 
   442     0000                     	;# 
   443     0001                     	;# 
   444     0002                     	;# 
   445     0003                     	;# 
   446     0004                     	;# 
   447     0005                     	;# 
   448     0006                     	;# 
   449     0007                     	;# 
   450     0008                     	;# 
   451     0009                     	;# 
   452     000A                     	;# 
   453     000B                     	;# 
   454     000C                     	;# 
   455     000D                     	;# 
   456     000E                     	;# 
   457     000E                     	;# 
   458     000F                     	;# 
   459     0010                     	;# 
   460     0011                     	;# 
   461     0012                     	;# 
   462     0013                     	;# 
   463     0014                     	;# 
   464     0015                     	;# 
   465     0015                     	;# 
   466     0016                     	;# 
   467     0017                     	;# 
   468     0018                     	;# 
   469     0019                     	;# 
   470     001A                     	;# 
   471     001B                     	;# 
   472     001B                     	;# 
   473     001C                     	;# 
   474     001D                     	;# 
   475     001E                     	;# 
   476     001F                     	;# 
   477     0081                     	;# 
   478     0085                     	;# 
   479     0086                     	;# 
   480     0087                     	;# 
   481     0088                     	;# 
   482     0089                     	;# 
   483     008C                     	;# 
   484     008D                     	;# 
   485     008E                     	;# 
   486     0091                     	;# 
   487     0092                     	;# 
   488     0093                     	;# 
   489     0094                     	;# 
   490     0098                     	;# 
   491     0099                     	;# 
   492     009C                     	;# 
   493     009D                     	;# 
   494     009E                     	;# 
   495     009F                     	;# 
   496     010C                     	;# 
   497     010D                     	;# 
   498     010E                     	;# 
   499     010F                     	;# 
   500     018C                     	;# 
   501     018D                     	;# 
   502     0000                     	;# 
   503     0001                     	;# 
   504     0002                     	;# 
   505     0003                     	;# 
   506     0004                     	;# 
   507     0005                     	;# 
   508     0006                     	;# 
   509     0007                     	;# 
   510     0008                     	;# 
   511     0009                     	;# 
   512     000A                     	;# 
   513     000B                     	;# 
   514     000C                     	;# 
   515     000D                     	;# 
   516     000E                     	;# 
   517     000E                     	;# 
   518     000F                     	;# 
   519     0010                     	;# 
   520     0011                     	;# 
   521     0012                     	;# 
   522     0013                     	;# 
   523     0014                     	;# 
   524     0015                     	;# 
   525     0015                     	;# 
   526     0016                     	;# 
   527     0017                     	;# 
   528     0018                     	;# 
   529     0019                     	;# 
   530     001A                     	;# 
   531     001B                     	;# 
   532     001B                     	;# 
   533     001C                     	;# 
   534     001D                     	;# 
   535     001E                     	;# 
   536     001F                     	;# 
   537     0081                     	;# 
   538     0085                     	;# 
   539     0086                     	;# 
   540     0087                     	;# 
   541     0088                     	;# 
   542     0089                     	;# 
   543     008C                     	;# 
   544     008D                     	;# 
   545     008E                     	;# 
   546     0091                     	;# 
   547     0092                     	;# 
   548     0093                     	;# 
   549     0094                     	;# 
   550     0098                     	;# 
   551     0099                     	;# 
   552     009C                     	;# 
   553     009D                     	;# 
   554     009E                     	;# 
   555     009F                     	;# 
   556     010C                     	;# 
   557     010D                     	;# 
   558     010E                     	;# 
   559     010F                     	;# 
   560     018C                     	;# 
   561     018D                     	;# 
   562                           
   563                           	psect	idataBANK0
   564     03F0                     __pidataBANK0:
   565                           
   566                           ;initializer for displayheader@F1007
   567     03F0  3420               	retlw	32
   568     03F1  3420               	retlw	32
   569     03F2  3454               	retlw	84
   570     03F3  3449               	retlw	73
   571     03F4  344D               	retlw	77
   572     03F5  3445               	retlw	69
   573     03F6  3420               	retlw	32
   574     03F7  3420               	retlw	32
   575     03F8  3420               	retlw	32
   576     03F9  3420               	retlw	32
   577     03FA  3420               	retlw	32
   578     03FB  3445               	retlw	69
   579     03FC  3420               	retlw	32
   580     03FD  3420               	retlw	32
   581     03FE  3453               	retlw	83
   582     03FF  3450               	retlw	80
   583     0400  3400               	retlw	0
   584                           
   585                           ;initializer for read_digital_keypad@once
   586     0401  3401               	retlw	1
   587     001E                     _ADRESH	set	30
   588     0013                     _SSPBUF	set	19
   589     0006                     _PORTB	set	6
   590     0008                     _PORTD	set	8
   591     00FA                     _nDONE	set	250
   592     00FA                     _GO	set	250
   593     00F8                     _ADON	set	248
   594     00A5                     _SSPEN	set	165
   595     00A3                     _SSPM3	set	163
   596     0049                     _RE1	set	73
   597     004A                     _RE2	set	74
   598     009E                     _ADRESL	set	158
   599     0091                     _SSPCON2	set	145
   600     0093                     _SSPADD	set	147
   601     0086                     _TRISB	set	134
   602     0088                     _TRISD	set	136
   603     04FF                     _ADFM	set	1279
   604     048E                     _ACKSTAT	set	1166
   605     048C                     _ACKEN	set	1164
   606     048D                     _ACKDT	set	1165
   607     048B                     _RCEN	set	1163
   608     048A                     _PEN	set	1162
   609     0488                     _SEN	set	1160
   610     04A2                     _R_nW	set	1186
   611     0449                     _TRISE1	set	1097
   612     044A                     _TRISE2	set	1098
   613                           
   614                           	psect	strings
   615     0003                     __pstrings:
   616     0003                     stringtab:
   617     0003                     __stringtab:
   618     0003                     stringcode:	
   619                           ;	String table - string pointers are 1 byte each
   620                           
   621     0003                     stringdir:
   622     0003  3000               	movlw	high stringdir
   623     0004  008A               	movwf	10
   624     0005  0804               	movf	4,w
   625     0006  0A84               	incf	4,f
   626     0007  0782               	addwf	2,f
   627     0008                     __stringbase:
   628     0008  3400               	retlw	0
   629     0009                     __end_of__stringtab:
   630     0009                     STR_1:
   631     0009  344F               	retlw	79	;'O'
   632     000A  3446               	retlw	70	;'F'
   633     000B  3400               	retlw	0
   634                           
   635                           	psect	cinit
   636     07E6                     start_initialization:	
   637                           ; #config settings
   638                           
   639     07E6                     __initialization:
   640                           
   641                           ; Initialize objects allocated to BANK0
   642     07E6  1383               	bcf	3,7	;select IRP bank0
   643     07E7  3032               	movlw	low (__pdataBANK0+18)
   644     07E8  00FD               	movwf	btemp+-1
   645     07E9  3003               	movlw	high __pidataBANK0
   646     07EA  00FE               	movwf	btemp
   647     07EB  30F0               	movlw	low __pidataBANK0
   648     07EC  00FF               	movwf	btemp+1
   649     07ED  3020               	movlw	low __pdataBANK0
   650     07EE  0084               	movwf	4
   651     07EF  120A  118A  2419  120A  118A  	fcall	init_ram0
   652                           
   653                           ; Clear objects allocated to BANK0
   654     07F4  3044               	movlw	low __pbssBANK0
   655     07F5  0084               	movwf	4
   656     07F6  3055               	movlw	low (__pbssBANK0+17)
   657     07F7  120A  118A  236D  120A  118A  	fcall	clear_ram0
   658     07FC                     end_of_initialization:	
   659                           ;End of C runtime variable initialization code
   660                           
   661     07FC                     __end_of__initialization:
   662     07FC  0183               	clrf	3
   663     07FD  120A  118A  2C95   	ljmp	_main	;jump to C main() function
   664                           
   665                           	psect	bssBANK0
   666     0044                     __pbssBANK0:
   667     0044                     _clocktime:
   668     0044                     	ds	3
   669     0047                     _key:
   670     0047                     	ds	1
   671     0048                     _time:
   672     0048                     	ds	9
   673     0051                     _speed:
   674     0051                     	ds	2
   675     0053                     _event:
   676     0053                     	ds	2
   677                           
   678                           	psect	dataBANK0
   679     0020                     __pdataBANK0:
   680     0020                     displayheader@F1007:
   681     0020                     	ds	17
   682     0031                     read_digital_keypad@once:
   683     0031                     	ds	1
   684                           
   685                           	psect	inittext
   686     0415                     init_fetch0:	
   687                           ;	Called with low address in FSR and high address in W
   688                           
   689     0415  087E               	movf	btemp,w
   690     0416  008A               	movwf	10
   691     0417  087F               	movf	btemp+1,w
   692     0418  0082               	movwf	2
   693     0419                     init_ram0:	
   694                           ;Called with:
   695                           ;	high address of idata address in btemp 
   696                           ;	low address of idata address in btemp+1 
   697                           ;	low address of data in FSR
   698                           ;	high address + 1 of data in btemp-1
   699                           
   700     0419  120A  118A  2415  120A  118A  	fcall	init_fetch0
   701     041E  0080               	movwf	0
   702     041F  0A84               	incf	4,f
   703     0420  0804               	movf	4,w
   704     0421  067D               	xorwf	btemp+-1,w
   705     0422  1903               	btfsc	3,2
   706     0423  3400               	retlw	0
   707     0424  0AFF               	incf	btemp+1,f
   708     0425  1903               	btfsc	3,2
   709     0426  0AFE               	incf	btemp,f
   710     0427  2C19               	goto	init_ram0
   711                           
   712                           	psect	clrtext
   713     036D                     clear_ram0:	
   714                           ;	Called with FSR containing the base address, and
   715                           ;	W with the last address+1
   716                           
   717     036D  0064               	clrwdt	;clear the watchdog before getting into this loop
   718     036E                     clrloop0:
   719     036E  0180               	clrf	0	;clear RAM location pointed to by FSR
   720     036F  0A84               	incf	4,f	;increment pointer
   721     0370  0604               	xorwf	4,w	;XOR with final address
   722     0371  1903               	btfsc	3,2	;have we reached the end yet?
   723     0372  3400               	retlw	0	;all done for this memory range, return
   724     0373  0604               	xorwf	4,w	;XOR again to restore value
   725     0374  2B6E               	goto	clrloop0	;do the next byte
   726                           
   727                           	psect	cstackCOMMON
   728     0070                     __pcstackCOMMON:
   729     0070                     ?_read_ds1307:
   730     0070                     ?_i2c_start:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ??_i2c_start:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ??_i2c_write:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_i2c_rep_start:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ??_i2c_rep_start:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_i2c_read:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ??_i2c_read:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_i2c_stop:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ??_i2c_stop:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_strcpy:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_clcd_write:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_init_display_controller:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ?_init_clcd:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0070                     ?_init_digital_keypad:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0070                     ??_init_digital_keypad:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0070                     ?_read_digital_keypad:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ??_read_digital_keypad:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_init_ds1307:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ?_i2c_wait_for_idle:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ??_i2c_wait_for_idle:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_init_adc:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ??_init_adc:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ?_init_config:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?_getdata:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_main:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_displayheader:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_gettime:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ?_displaytime:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ?_displayevent:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?_displayspeed:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?_i2c_write:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     ?_read_adc:	
   824                           ; 2 bytes @ 0x0
   825                           
   826     0070                     ?___awdiv:	
   827                           ; 2 bytes @ 0x0
   828                           
   829     0070                     ?___awmod:	
   830                           ; 2 bytes @ 0x0
   831                           
   832     0070                     ?___lldiv:	
   833                           ; 2 bytes @ 0x0
   834                           
   835     0070                     clcd_write@mode:	
   836                           ; 4 bytes @ 0x0
   837                           
   838     0070                     i2c_read@ack:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     i2c_write@data:	
   842                           ; 1 bytes @ 0x0
   843                           
   844     0070                     strcpy@from:	
   845                           ; 1 bytes @ 0x0
   846                           
   847     0070                     ___awdiv@divisor:	
   848                           ; 1 bytes @ 0x0
   849                           
   850     0070                     ___awmod@divisor:	
   851                           ; 2 bytes @ 0x0
   852                           
   853     0070                     ___lldiv@divisor:	
   854                           ; 2 bytes @ 0x0
   855                           
   856                           
   857                           ; 4 bytes @ 0x0
   858     0070                     	ds	1
   859     0071                     ?_write_ds1307:
   860     0071                     ??_strcpy:	
   861                           ; 1 bytes @ 0x1
   862                           
   863     0071                     ??_clcd_write:	
   864                           ; 1 bytes @ 0x1
   865                           
   866     0071                     read_digital_keypad@mode:	
   867                           ; 1 bytes @ 0x1
   868                           
   869     0071                     write_ds1307@data:	
   870                           ; 1 bytes @ 0x1
   871                           
   872     0071                     i2c_read@data:	
   873                           ; 1 bytes @ 0x1
   874                           
   875     0071                     strcpy@to:	
   876                           ; 1 bytes @ 0x1
   877                           
   878                           
   879                           ; 1 bytes @ 0x1
   880     0071                     	ds	1
   881     0072                     ??_read_ds1307:
   882     0072                     ??_write_ds1307:	
   883                           ; 1 bytes @ 0x2
   884                           
   885     0072                     ??_read_adc:	
   886                           ; 1 bytes @ 0x2
   887                           
   888     0072                     read_ds1307@addr:	
   889                           ; 1 bytes @ 0x2
   890                           
   891     0072                     write_ds1307@addr:	
   892                           ; 1 bytes @ 0x2
   893                           
   894     0072                     strcpy@cp:	
   895                           ; 1 bytes @ 0x2
   896                           
   897     0072                     read_adc@adc_reg_val:	
   898                           ; 1 bytes @ 0x2
   899                           
   900     0072                     ___awdiv@dividend:	
   901                           ; 2 bytes @ 0x2
   902                           
   903     0072                     ___awmod@dividend:	
   904                           ; 2 bytes @ 0x2
   905                           
   906                           
   907                           ; 2 bytes @ 0x2
   908     0072                     	ds	1
   909     0073                     clcd_write@byte:
   910     0073                     read_ds1307@data:	
   911                           ; 1 bytes @ 0x3
   912                           
   913                           
   914                           ; 1 bytes @ 0x3
   915     0073                     	ds	1
   916     0074                     ??_init_display_controller:
   917     0074                     ?_clcd_print:	
   918                           ; 1 bytes @ 0x4
   919                           
   920     0074                     ??_init_ds1307:	
   921                           ; 1 bytes @ 0x4
   922                           
   923     0074                     ??_getdata:	
   924                           ; 1 bytes @ 0x4
   925                           
   926     0074                     ??_gettime:	
   927                           ; 1 bytes @ 0x4
   928                           
   929     0074                     ??___awdiv:	
   930                           ; 1 bytes @ 0x4
   931                           
   932     0074                     ??___awmod:	
   933                           ; 1 bytes @ 0x4
   934                           
   935     0074                     clcd_print@addr:	
   936                           ; 1 bytes @ 0x4
   937                           
   938     0074                     init_ds1307@dummy:	
   939                           ; 1 bytes @ 0x4
   940                           
   941     0074                     ___awdiv@counter:	
   942                           ; 1 bytes @ 0x4
   943                           
   944     0074                     ___awmod@counter:	
   945                           ; 1 bytes @ 0x4
   946                           
   947     0074                     ___lldiv@dividend:	
   948                           ; 1 bytes @ 0x4
   949                           
   950                           
   951                           ; 4 bytes @ 0x4
   952     0074                     	ds	1
   953     0075                     ??_clcd_print:
   954     0075                     clcd_print@str:	
   955                           ; 1 bytes @ 0x5
   956                           
   957     0075                     ___awdiv@sign:	
   958                           ; 1 bytes @ 0x5
   959                           
   960     0075                     ___awmod@sign:	
   961                           ; 1 bytes @ 0x5
   962                           
   963                           
   964                           ; 1 bytes @ 0x5
   965     0075                     	ds	1
   966     0076                     ??_init_clcd:
   967     0076                     ??_displayheader:	
   968                           ; 1 bytes @ 0x6
   969                           
   970     0076                     ??_displaytime:	
   971                           ; 1 bytes @ 0x6
   972                           
   973     0076                     ??_displayevent:	
   974                           ; 1 bytes @ 0x6
   975                           
   976     0076                     displayevent@event:	
   977                           ; 1 bytes @ 0x6
   978                           
   979     0076                     ___awdiv@quotient:	
   980                           ; 1 bytes @ 0x6
   981                           
   982                           
   983                           ; 2 bytes @ 0x6
   984     0076                     	ds	2
   985     0078                     ?_clcd_putch:
   986     0078                     ??___lldiv:	
   987                           ; 1 bytes @ 0x8
   988                           
   989     0078                     clcd_putch@addr:	
   990                           ; 1 bytes @ 0x8
   991                           
   992                           
   993                           ; 1 bytes @ 0x8
   994     0078                     	ds	1
   995     0079                     ??_clcd_putch:
   996     0079                     clcd_putch@data:	
   997                           ; 1 bytes @ 0x9
   998                           
   999     0079                     ___lldiv@quotient:	
  1000                           ; 1 bytes @ 0x9
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0x9
  1004     0079                     	ds	1
  1005     007A                     ??_displayspeed:
  1006                           
  1007                           ; 1 bytes @ 0xA
  1008     007A                     	ds	2
  1009     007C                     displayspeed@speed:
  1010                           
  1011                           ; 1 bytes @ 0xC
  1012     007C                     	ds	1
  1013     007D                     ?_display_dashboard:
  1014     007D                     display_dashboard@speed:	
  1015                           ; 1 bytes @ 0xD
  1016                           
  1017     007D                     ___lldiv@counter:	
  1018                           ; 1 bytes @ 0xD
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0xD
  1022     007D                     	ds	1
  1023     007E                     ??_display_dashboard:
  1024     007E                     ??_init_config:	
  1025                           ; 1 bytes @ 0xE
  1026                           
  1027     007E                     ??_main:	
  1028                           ; 1 bytes @ 0xE
  1029                           
  1030                           
  1031                           	psect	cstackBANK0
  1032     0032                     __pcstackBANK0:	
  1033                           ; 1 bytes @ 0xE
  1034                           
  1035     0032                     ?_init_i2c:
  1036     0032                     init_i2c@baud:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0032                     displayheader@header:	
  1040                           ; 4 bytes @ 0x0
  1041                           
  1042                           
  1043                           ; 17 bytes @ 0x0
  1044     0032                     	ds	4
  1045     0036                     ??_init_i2c:
  1046                           
  1047                           ; 1 bytes @ 0x4
  1048     0036                     	ds	13
  1049     0043                     display_dashboard@event:
  1050                           
  1051                           ; 1 bytes @ 0x11
  1052     0043                     	ds	1
  1053                           
  1054                           	psect	maintext
  1055     0495                     __pmaintext:	
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 34 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : B00/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0
  1078 ;;      Totals:         0       0       0       0       0
  1079 ;;Total ram usage:        0 bytes
  1080 ;; Hardware stack levels required when called: 7
  1081 ;; This function calls:
  1082 ;;		_display_dashboard
  1083 ;;		_getdata
  1084 ;;		_init_config
  1085 ;;		_strcpy
  1086 ;; This function is called by:
  1087 ;;		Startup code after reset
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091     0495                     _main:	
  1092                           ;psect for function _main
  1093                           
  1094     0495                     l1433:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1097                           
  1098     0495  120A  118A  2533  120A  118A  	fcall	_init_config
  1099     049A                     l1435:
  1100     049A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1101     049B  00F0               	movwf	strcpy@from
  1102     049C  3053               	movlw	(low (_event| 0))& (0+255)
  1103     049D  120A  118A  24B3  120A  118A  	fcall	_strcpy
  1104     04A2                     l1437:
  1105     04A2  120A  118A  2428  120A  118A  	fcall	_getdata
  1106     04A7                     l1439:
  1107     04A7  3051               	movlw	(low (_speed| 0))& (0+255)
  1108     04A8  00FD               	movwf	display_dashboard@speed
  1109     04A9  3053               	movlw	(low (_event| 0))& (0+255)
  1110     04AA  120A  118A  243D  120A  118A  	fcall	_display_dashboard
  1111     04AF  2CA2               	goto	l1437
  1112     04B0  120A  118A  2800   	ljmp	start
  1113     04B3                     __end_of_main:
  1114                           
  1115                           	psect	text1
  1116     04B3                     __ptext1:	
  1117 ;; *************** function _strcpy *****************
  1118 ;; Defined at:
  1119 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcpy.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  to              1    wreg     PTR unsigned char 
  1122 ;;		 -> event(2), 
  1123 ;;  from            1    0[COMMON] PTR const unsigned char 
  1124 ;;		 -> STR_1(3), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  to              1    1[COMMON] PTR unsigned char 
  1127 ;;		 -> event(2), 
  1128 ;;  cp              1    2[COMMON] PTR unsigned char 
  1129 ;;		 -> event(2), 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      PTR unsigned char 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         1       0       0       0       0
  1140 ;;      Locals:         2       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         3       0       0       0       0
  1143 ;;Total ram usage:        3 bytes
  1144 ;; Hardware stack levels used: 2
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152     04B3                     _strcpy:	
  1153                           ;psect for function _strcpy
  1154                           
  1155                           
  1156                           ;incstack = 0
  1157                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1158                           ;strcpy@to stored from wreg
  1159     04B3  00F1               	movwf	strcpy@to
  1160     04B4                     l1425:
  1161     04B4  0871               	movf	strcpy@to,w
  1162     04B5  00F2               	movwf	strcpy@cp
  1163     04B6  2CBF               	goto	l1429
  1164     04B7                     l1427:
  1165     04B7  3001               	movlw	1
  1166     04B8  00FF               	movwf	btemp+1
  1167     04B9  087F               	movf	btemp+1,w
  1168     04BA  07F2               	addwf	strcpy@cp,f
  1169     04BB  3001               	movlw	1
  1170     04BC  00FF               	movwf	btemp+1
  1171     04BD  087F               	movf	btemp+1,w
  1172     04BE  07F0               	addwf	strcpy@from,f
  1173     04BF                     l1429:
  1174     04BF  0870               	movf	strcpy@from,w
  1175     04C0  0084               	movwf	4
  1176     04C1  120A  118A  2003  120A  118A  	fcall	stringdir
  1177     04C6  00FF               	movwf	btemp+1
  1178     04C7  0872               	movf	strcpy@cp,w
  1179     04C8  0084               	movwf	4
  1180     04C9  087F               	movf	btemp+1,w
  1181     04CA  1383               	bcf	3,7	;select IRP bank0
  1182     04CB  0080               	movwf	0
  1183     04CC  0800               	movf	0,w
  1184     04CD  1D03               	btfss	3,2
  1185     04CE  2CD0               	goto	u861
  1186     04CF  2CD1               	goto	u860
  1187     04D0                     u861:
  1188     04D0  2CB7               	goto	l1427
  1189     04D1                     u860:
  1190     04D1                     l763:
  1191     04D1  0008               	return
  1192     04D2                     __end_of_strcpy:
  1193                           
  1194                           	psect	text2
  1195     0533                     __ptext2:	
  1196 ;; *************** function _init_config *****************
  1197 ;; Defined at:
  1198 ;;		line 14 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 5
  1219 ;; This function calls:
  1220 ;;		_init_adc
  1221 ;;		_init_clcd
  1222 ;;		_init_digital_keypad
  1223 ;;		_init_ds1307
  1224 ;;		_init_i2c
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230     0533                     _init_config:	
  1231                           ;psect for function _init_config
  1232                           
  1233     0533                     l1411:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _init_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1236                           
  1237                           
  1238                           ;main.c: 16: 
  1239     0533  120A  118A  2366  120A  118A  	fcall	_init_adc
  1240     0538                     l1413:
  1241                           
  1242                           ;main.c: 17: 
  1243     0538  120A  118A  23A7  120A  118A  	fcall	_init_clcd
  1244     053D                     l1415:
  1245                           
  1246                           ;main.c: 18: }
  1247     053D  120A  118A  2360  120A  118A  	fcall	_init_digital_keypad
  1248     0542                     l1417:
  1249                           
  1250                           ;main.c: 20: void main(void) {
  1251     0542  3000               	movlw	0
  1252     0543  1283               	bcf	3,5	;RP0=0, select bank0
  1253     0544  1303               	bcf	3,6	;RP1=0, select bank0
  1254     0545  00B5               	movwf	init_i2c@baud+3
  1255     0546  3001               	movlw	1
  1256     0547  00B4               	movwf	init_i2c@baud+2
  1257     0548  3086               	movlw	134
  1258     0549  00B3               	movwf	init_i2c@baud+1
  1259     054A  30A0               	movlw	160
  1260     054B  00B2               	movwf	init_i2c@baud
  1261     054C  120A  118A  25AC  120A  118A  	fcall	_init_i2c
  1262     0551                     l1419:
  1263                           
  1264                           ;main.c: 22: 
  1265     0551  120A  118A  2402  120A  118A  	fcall	_init_ds1307
  1266     0556                     l176:
  1267     0556  0008               	return
  1268     0557                     __end_of_init_config:
  1269                           
  1270                           	psect	text3
  1271     05AC                     __ptext3:	
  1272 ;; *************** function _init_i2c *****************
  1273 ;; Defined at:
  1274 ;;		line 4 in file "i2c.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  baud            4    0[BANK0 ] unsigned long 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       4       0       0       0
  1289 ;;      Locals:         0       0       0       0       0
  1290 ;;      Temps:          0       4       0       0       0
  1291 ;;      Totals:         0       8       0       0       0
  1292 ;;Total ram usage:        8 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 1
  1295 ;; This function calls:
  1296 ;;		___lldiv
  1297 ;; This function is called by:
  1298 ;;		_init_config
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302     05AC                     _init_i2c:	
  1303                           ;psect for function _init_i2c
  1304                           
  1305     05AC                     l1385:	
  1306                           ;incstack = 0
  1307                           ; Regs used in _init_i2c: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1308                           
  1309                           
  1310                           ;i2c.c: 4: void init_i2c(unsigned long baud);i2c.c: 5: {;i2c.c: 7:     SSPM3 = 1;
  1311     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1312     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1313     05AE  1594               	bsf	20,3	;volatile
  1314     05AF                     l1387:
  1315                           
  1316                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
  1317     05AF  0832               	movf	init_i2c@baud,w
  1318     05B0  00B6               	movwf	??_init_i2c
  1319     05B1  0833               	movf	init_i2c@baud+1,w
  1320     05B2  00B7               	movwf	??_init_i2c+1
  1321     05B3  0834               	movf	init_i2c@baud+2,w
  1322     05B4  00B8               	movwf	??_init_i2c+2
  1323     05B5  0835               	movf	init_i2c@baud+3,w
  1324     05B6  00B9               	movwf	??_init_i2c+3
  1325     05B7  3002               	movlw	2
  1326     05B8                     u835:
  1327     05B8  1003               	clrc
  1328     05B9  0DB6               	rlf	??_init_i2c,f
  1329     05BA  0DB7               	rlf	??_init_i2c+1,f
  1330     05BB  0DB8               	rlf	??_init_i2c+2,f
  1331     05BC  0DB9               	rlf	??_init_i2c+3,f
  1332     05BD                     u830:
  1333     05BD  3EFF               	addlw	-1
  1334     05BE  1D03               	skipz
  1335     05BF  2DB8               	goto	u835
  1336     05C0  0839               	movf	??_init_i2c+3,w
  1337     05C1  00F3               	movwf	___lldiv@divisor+3
  1338     05C2  0838               	movf	??_init_i2c+2,w
  1339     05C3  00F2               	movwf	___lldiv@divisor+2
  1340     05C4  0837               	movf	??_init_i2c+1,w
  1341     05C5  00F1               	movwf	___lldiv@divisor+1
  1342     05C6  0836               	movf	??_init_i2c,w
  1343     05C7  00F0               	movwf	___lldiv@divisor
  1344     05C8  3001               	movlw	1
  1345     05C9  00F7               	movwf	___lldiv@dividend+3
  1346     05CA  3031               	movlw	49
  1347     05CB  00F6               	movwf	___lldiv@dividend+2
  1348     05CC  302D               	movlw	45
  1349     05CD  00F5               	movwf	___lldiv@dividend+1
  1350     05CE  3000               	movlw	0
  1351     05CF  00F4               	movwf	___lldiv@dividend
  1352     05D0  120A  118A  2719  120A  118A  	fcall	___lldiv
  1353     05D5  0870               	movf	?___lldiv,w
  1354     05D6  3EFF               	addlw	255
  1355     05D7  1683               	bsf	3,5	;RP0=1, select bank1
  1356     05D8  1303               	bcf	3,6	;RP1=0, select bank1
  1357     05D9  0093               	movwf	19	;volatile
  1358     05DA                     l1389:
  1359                           
  1360                           ;i2c.c: 13:     SSPEN = 1;
  1361     05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1362     05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1363     05DC  1694               	bsf	20,5	;volatile
  1364     05DD                     l101:
  1365     05DD  0008               	return
  1366     05DE                     __end_of_init_i2c:
  1367                           
  1368                           	psect	text4
  1369     0719                     __ptext4:	
  1370 ;; *************** function ___lldiv *****************
  1371 ;; Defined at:
  1372 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  divisor         4    0[COMMON] unsigned long 
  1375 ;;  dividend        4    4[COMMON] unsigned long 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  quotient        4    9[COMMON] unsigned long 
  1378 ;;  counter         1   13[COMMON] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  4    0[COMMON] unsigned long 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, btemp+1
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         8       0       0       0       0
  1389 ;;      Locals:         5       0       0       0       0
  1390 ;;      Temps:          1       0       0       0       0
  1391 ;;      Totals:        14       0       0       0       0
  1392 ;;Total ram usage:       14 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_init_i2c
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401     0719                     ___lldiv:	
  1402                           ;psect for function ___lldiv
  1403                           
  1404     0719                     l1233:	
  1405                           ;incstack = 0
  1406                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1407                           
  1408     0719  3000               	movlw	0
  1409     071A  00FC               	movwf	___lldiv@quotient+3
  1410     071B  3000               	movlw	0
  1411     071C  00FB               	movwf	___lldiv@quotient+2
  1412     071D  3000               	movlw	0
  1413     071E  00FA               	movwf	___lldiv@quotient+1
  1414     071F  3000               	movlw	0
  1415     0720  00F9               	movwf	___lldiv@quotient
  1416     0721  0873               	movf	___lldiv@divisor+3,w
  1417     0722  0472               	iorwf	___lldiv@divisor+2,w
  1418     0723  0471               	iorwf	___lldiv@divisor+1,w
  1419     0724  0470               	iorwf	___lldiv@divisor,w
  1420     0725  1903               	skipnz
  1421     0726  2F28               	goto	u531
  1422     0727  2F29               	goto	u530
  1423     0728                     u531:
  1424     0728  2F76               	goto	l1255
  1425     0729                     u530:
  1426     0729                     l1235:
  1427     0729  01FD               	clrf	___lldiv@counter
  1428     072A  0AFD               	incf	___lldiv@counter,f
  1429     072B  2F39               	goto	l1241
  1430     072C                     l1237:
  1431     072C  3001               	movlw	1
  1432     072D  00F8               	movwf	??___lldiv
  1433     072E                     u545:
  1434     072E  1003               	clrc
  1435     072F  0DF0               	rlf	___lldiv@divisor,f
  1436     0730  0DF1               	rlf	___lldiv@divisor+1,f
  1437     0731  0DF2               	rlf	___lldiv@divisor+2,f
  1438     0732  0DF3               	rlf	___lldiv@divisor+3,f
  1439     0733  0BF8               	decfsz	??___lldiv,f
  1440     0734  2F2E               	goto	u545
  1441     0735                     l1239:
  1442     0735  3001               	movlw	1
  1443     0736  00FF               	movwf	btemp+1
  1444     0737  087F               	movf	btemp+1,w
  1445     0738  07FD               	addwf	___lldiv@counter,f
  1446     0739                     l1241:
  1447     0739  1FF3               	btfss	___lldiv@divisor+3,7
  1448     073A  2F3C               	goto	u551
  1449     073B  2F3D               	goto	u550
  1450     073C                     u551:
  1451     073C  2F2C               	goto	l1237
  1452     073D                     u550:
  1453     073D                     l1243:
  1454     073D  3001               	movlw	1
  1455     073E  00F8               	movwf	??___lldiv
  1456     073F                     u565:
  1457     073F  1003               	clrc
  1458     0740  0DF9               	rlf	___lldiv@quotient,f
  1459     0741  0DFA               	rlf	___lldiv@quotient+1,f
  1460     0742  0DFB               	rlf	___lldiv@quotient+2,f
  1461     0743  0DFC               	rlf	___lldiv@quotient+3,f
  1462     0744  0BF8               	decfsz	??___lldiv,f
  1463     0745  2F3F               	goto	u565
  1464     0746                     l1245:
  1465     0746  0873               	movf	___lldiv@divisor+3,w
  1466     0747  0277               	subwf	___lldiv@dividend+3,w
  1467     0748  1D03               	skipz
  1468     0749  2F54               	goto	u575
  1469     074A  0872               	movf	___lldiv@divisor+2,w
  1470     074B  0276               	subwf	___lldiv@dividend+2,w
  1471     074C  1D03               	skipz
  1472     074D  2F54               	goto	u575
  1473     074E  0871               	movf	___lldiv@divisor+1,w
  1474     074F  0275               	subwf	___lldiv@dividend+1,w
  1475     0750  1D03               	skipz
  1476     0751  2F54               	goto	u575
  1477     0752  0870               	movf	___lldiv@divisor,w
  1478     0753  0274               	subwf	___lldiv@dividend,w
  1479     0754                     u575:
  1480     0754  1C03               	skipc
  1481     0755  2F57               	goto	u571
  1482     0756  2F58               	goto	u570
  1483     0757                     u571:
  1484     0757  2F67               	goto	l1251
  1485     0758                     u570:
  1486     0758                     l1247:
  1487     0758  0870               	movf	___lldiv@divisor,w
  1488     0759  02F4               	subwf	___lldiv@dividend,f
  1489     075A  0871               	movf	___lldiv@divisor+1,w
  1490     075B  1C03               	skipc
  1491     075C  0F71               	incfsz	___lldiv@divisor+1,w
  1492     075D  02F5               	subwf	___lldiv@dividend+1,f
  1493     075E  0872               	movf	___lldiv@divisor+2,w
  1494     075F  1C03               	skipc
  1495     0760  0F72               	incfsz	___lldiv@divisor+2,w
  1496     0761  02F6               	subwf	___lldiv@dividend+2,f
  1497     0762  0873               	movf	___lldiv@divisor+3,w
  1498     0763  1C03               	skipc
  1499     0764  0F73               	incfsz	___lldiv@divisor+3,w
  1500     0765  02F7               	subwf	___lldiv@dividend+3,f
  1501     0766                     l1249:
  1502     0766  1479               	bsf	___lldiv@quotient,0
  1503     0767                     l1251:
  1504     0767  3001               	movlw	1
  1505     0768                     u585:
  1506     0768  1003               	clrc
  1507     0769  0CF3               	rrf	___lldiv@divisor+3,f
  1508     076A  0CF2               	rrf	___lldiv@divisor+2,f
  1509     076B  0CF1               	rrf	___lldiv@divisor+1,f
  1510     076C  0CF0               	rrf	___lldiv@divisor,f
  1511     076D  3EFF               	addlw	-1
  1512     076E  1D03               	skipz
  1513     076F  2F68               	goto	u585
  1514     0770                     l1253:
  1515     0770  3001               	movlw	1
  1516     0771  02FD               	subwf	___lldiv@counter,f
  1517     0772  1D03               	btfss	3,2
  1518     0773  2F75               	goto	u591
  1519     0774  2F76               	goto	u590
  1520     0775                     u591:
  1521     0775  2F3D               	goto	l1243
  1522     0776                     u590:
  1523     0776                     l1255:
  1524     0776  087C               	movf	___lldiv@quotient+3,w
  1525     0777  00F3               	movwf	?___lldiv+3
  1526     0778  087B               	movf	___lldiv@quotient+2,w
  1527     0779  00F2               	movwf	?___lldiv+2
  1528     077A  087A               	movf	___lldiv@quotient+1,w
  1529     077B  00F1               	movwf	?___lldiv+1
  1530     077C  0879               	movf	___lldiv@quotient,w
  1531     077D  00F0               	movwf	?___lldiv
  1532     077E                     l345:
  1533     077E  0008               	return
  1534     077F                     __end_of___lldiv:
  1535                           
  1536                           	psect	text5
  1537     0402                     __ptext5:	
  1538 ;; *************** function _init_ds1307 *****************
  1539 ;; Defined at:
  1540 ;;		line 5 in file "ds1307.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  dummy           1    4[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, pclath, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         1       0       0       0       0
  1558 ;;Total ram usage:        1 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 4
  1561 ;; This function calls:
  1562 ;;		_read_ds1307
  1563 ;;		_write_ds1307
  1564 ;; This function is called by:
  1565 ;;		_init_config
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569     0402                     _init_ds1307:	
  1570                           ;psect for function _init_ds1307
  1571                           
  1572     0402                     l1379:	
  1573                           ;incstack = 0
  1574                           ; Regs used in _init_ds1307: [wreg+status,2+status,0+pclath+cstack]
  1575                           
  1576                           
  1577                           ;ds1307.c: 7:     unsigned char dummy;;ds1307.c: 9:     dummy = read_ds1307(0x00);
  1578     0402  3000               	movlw	0
  1579     0403  120A  118A  2581  120A  118A  	fcall	_read_ds1307
  1580     0408  00F4               	movwf	init_ds1307@dummy
  1581     0409                     l1381:
  1582                           
  1583                           ;ds1307.c: 10:     dummy = dummy & 0x7F;
  1584     0409  0874               	movf	init_ds1307@dummy,w
  1585     040A  397F               	andlw	127
  1586     040B  00F4               	movwf	init_ds1307@dummy
  1587     040C                     l1383:
  1588                           
  1589                           ;ds1307.c: 11:     write_ds1307(0x00, dummy);
  1590     040C  0874               	movf	init_ds1307@dummy,w
  1591     040D  00F1               	movwf	write_ds1307@data
  1592     040E  3000               	movlw	0
  1593     040F  120A  118A  2477  120A  118A  	fcall	_write_ds1307
  1594     0414                     l66:
  1595     0414  0008               	return
  1596     0415                     __end_of_init_ds1307:
  1597                           
  1598                           	psect	text6
  1599     0477                     __ptext6:	
  1600 ;; *************** function _write_ds1307 *****************
  1601 ;; Defined at:
  1602 ;;		line 29 in file "ds1307.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  addr            1    wreg     unsigned char 
  1605 ;;  data            1    1[COMMON] unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  addr            1    2[COMMON] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         1       0       0       0       0
  1618 ;;      Locals:         1       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 2
  1624 ;; This function calls:
  1625 ;;		_i2c_start
  1626 ;;		_i2c_stop
  1627 ;;		_i2c_write
  1628 ;; This function is called by:
  1629 ;;		_init_ds1307
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633     0477                     _write_ds1307:	
  1634                           ;psect for function _write_ds1307
  1635                           
  1636                           
  1637                           ;incstack = 0
  1638                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  1639                           ;write_ds1307@addr stored from wreg
  1640     0477  00F2               	movwf	write_ds1307@addr
  1641     0478                     l1211:
  1642                           
  1643                           ;ds1307.c: 29: void write_ds1307(unsigned char addr, unsigned char data);ds1307.c: 30: {
      +                          ;ds1307.c: 31:     i2c_start();
  1644     0478  120A  118A  2375  120A  118A  	fcall	_i2c_start
  1645                           
  1646                           ;ds1307.c: 32:     i2c_write(0b11010000);
  1647     047D  30D0               	movlw	208
  1648     047E  120A  118A  239C  120A  118A  	fcall	_i2c_write
  1649                           
  1650                           ;ds1307.c: 33:     i2c_write(addr);
  1651     0483  0872               	movf	write_ds1307@addr,w
  1652     0484  120A  118A  239C  120A  118A  	fcall	_i2c_write
  1653                           
  1654                           ;ds1307.c: 34:     i2c_write(data);
  1655     0489  0871               	movf	write_ds1307@data,w
  1656     048A  120A  118A  239C  120A  118A  	fcall	_i2c_write
  1657                           
  1658                           ;ds1307.c: 35:     i2c_stop();
  1659     048F  120A  118A  237E  120A  118A  	fcall	_i2c_stop
  1660     0494                     l72:
  1661     0494  0008               	return
  1662     0495                     __end_of_write_ds1307:
  1663                           
  1664                           	psect	text7
  1665     0360                     __ptext7:	
  1666 ;; *************** function _init_digital_keypad *****************
  1667 ;; Defined at:
  1668 ;;		line 4 in file "digital_keypad.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0
  1685 ;;      Totals:         0       0       0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_init_config
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695     0360                     _init_digital_keypad:	
  1696                           ;psect for function _init_digital_keypad
  1697                           
  1698     0360                     l1349:	
  1699                           ;incstack = 0
  1700                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1701                           
  1702                           
  1703                           ;digital_keypad.c: 7:     TRISB = TRISB | 0x3F;
  1704     0360  1683               	bsf	3,5	;RP0=1, select bank1
  1705     0361  1303               	bcf	3,6	;RP1=0, select bank1
  1706     0362  0806               	movf	6,w	;volatile
  1707     0363  383F               	iorlw	63
  1708     0364  0086               	movwf	6	;volatile
  1709     0365                     l39:
  1710     0365  0008               	return
  1711     0366                     __end_of_init_digital_keypad:
  1712                           
  1713                           	psect	text8
  1714     03A7                     __ptext8:	
  1715 ;; *************** function _init_clcd *****************
  1716 ;; Defined at:
  1717 ;;		line 37 in file "clcd.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, pclath, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 2
  1738 ;; This function calls:
  1739 ;;		_init_display_controller
  1740 ;; This function is called by:
  1741 ;;		_init_config
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745     03A7                     _init_clcd:	
  1746                           ;psect for function _init_clcd
  1747                           
  1748     03A7                     l1341:	
  1749                           ;incstack = 0
  1750                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1751                           
  1752                           
  1753                           ;clcd.c: 40:     TRISD = 0x00;
  1754     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  1755     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  1756     03A9  0188               	clrf	8	;volatile
  1757     03AA                     l1343:
  1758                           
  1759                           ;clcd.c: 43:     TRISE2 = 0;
  1760     03AA  1109               	bcf	9,2	;volatile
  1761     03AB                     l1345:
  1762                           
  1763                           ;clcd.c: 44:     TRISE1 = 0;
  1764     03AB  1089               	bcf	9,1	;volatile
  1765     03AC                     l1347:
  1766                           
  1767                           ;clcd.c: 46:     init_display_controller();
  1768     03AC  120A  118A  2669  120A  118A  	fcall	_init_display_controller
  1769     03B1                     l23:
  1770     03B1  0008               	return
  1771     03B2                     __end_of_init_clcd:
  1772                           
  1773                           	psect	text9
  1774     0669                     __ptext9:	
  1775 ;; *************** function _init_display_controller *****************
  1776 ;; Defined at:
  1777 ;;		line 16 in file "clcd.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0
  1793 ;;      Temps:          2       0       0       0       0
  1794 ;;      Totals:         2       0       0       0       0
  1795 ;;Total ram usage:        2 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 1
  1798 ;; This function calls:
  1799 ;;		_clcd_write
  1800 ;; This function is called by:
  1801 ;;		_init_clcd
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805     0669                     _init_display_controller:	
  1806                           ;psect for function _init_display_controller
  1807                           
  1808     0669                     l1181:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1811                           
  1812                           
  1813                           ;clcd.c: 19:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1814     0669  30C3               	movlw	195
  1815     066A  00F5               	movwf	??_init_display_controller+1
  1816     066B  30CD               	movlw	205
  1817     066C  00F4               	movwf	??_init_display_controller
  1818     066D                     u877:
  1819     066D  0BF4               	decfsz	??_init_display_controller,f
  1820     066E  2E6D               	goto	u877
  1821     066F  0BF5               	decfsz	??_init_display_controller+1,f
  1822     0670  2E6D               	goto	u877
  1823     0671                     l1183:
  1824                           
  1825                           ;clcd.c: 22:     clcd_write(0x33, 0);
  1826     0671  01F0               	clrf	clcd_write@mode
  1827     0672  3033               	movlw	51
  1828     0673  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  1829     0678                     l1185:
  1830                           
  1831                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1832     0678  301B               	movlw	27
  1833     0679  00F5               	movwf	??_init_display_controller+1
  1834     067A  309E               	movlw	158
  1835     067B  00F4               	movwf	??_init_display_controller
  1836     067C                     u887:
  1837     067C  0BF4               	decfsz	??_init_display_controller,f
  1838     067D  2E7C               	goto	u887
  1839     067E  0BF5               	decfsz	??_init_display_controller+1,f
  1840     067F  2E7C               	goto	u887
  1841     0680  0000               	nop
  1842                           
  1843                           ;clcd.c: 24:     clcd_write(0x33, 0);
  1844     0681  01F0               	clrf	clcd_write@mode
  1845     0682  3033               	movlw	51
  1846     0683  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  1847     0688                     l1187:
  1848                           
  1849                           ;clcd.c: 25:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1850     0688  30A6               	movlw	166
  1851     0689  00F4               	movwf	??_init_display_controller
  1852     068A                     u897:
  1853     068A  0BF4               	decfsz	??_init_display_controller,f
  1854     068B  2E8A               	goto	u897
  1855     068C  0000               	nop
  1856     068D                     l1189:
  1857                           
  1858                           ;clcd.c: 26:     clcd_write(0x33, 0);
  1859     068D  01F0               	clrf	clcd_write@mode
  1860     068E  3033               	movlw	51
  1861     068F  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  1862     0694                     l1191:
  1863                           
  1864                           ;clcd.c: 27:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1865     0694  2E95               	nop2	;2 cycle nop
  1866     0695  2E96               	nop2	;2 cycle nop
  1867     0696  0000               	nop
  1868     0697                     l1193:
  1869                           
  1870                           ;clcd.c: 29:     clcd_write(0x38, 0);
  1871     0697  01F0               	clrf	clcd_write@mode
  1872     0698  3038               	movlw	56
  1873     0699  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  1874     069E                     l1195:
  1875                           
  1876                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1877     069E  30A6               	movlw	166
  1878     069F  00F4               	movwf	??_init_display_controller
  1879     06A0                     u907:
  1880     06A0  0BF4               	decfsz	??_init_display_controller,f
  1881     06A1  2EA0               	goto	u907
  1882     06A2  0000               	nop
  1883                           
  1884                           ;clcd.c: 31:     clcd_write(0x01, 0);
  1885     06A3  01F0               	clrf	clcd_write@mode
  1886     06A4  3001               	movlw	1
  1887     06A5  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  1888     06AA                     l1197:
  1889                           
  1890                           ;clcd.c: 32:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1891     06AA  3004               	movlw	4
  1892     06AB  00F5               	movwf	??_init_display_controller+1
  1893     06AC  303D               	movlw	61
  1894     06AD  00F4               	movwf	??_init_display_controller
  1895     06AE                     u917:
  1896     06AE  0BF4               	decfsz	??_init_display_controller,f
  1897     06AF  2EAE               	goto	u917
  1898     06B0  0BF5               	decfsz	??_init_display_controller+1,f
  1899     06B1  2EAE               	goto	u917
  1900     06B2  2EB3               	nop2
  1901     06B3                     l1199:
  1902                           
  1903                           ;clcd.c: 33:     clcd_write(0x0C, 0);
  1904     06B3  01F0               	clrf	clcd_write@mode
  1905     06B4  300C               	movlw	12
  1906     06B5  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  1907                           
  1908                           ;clcd.c: 34:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1909     06BA  30A6               	movlw	166
  1910     06BB  00F4               	movwf	??_init_display_controller
  1911     06BC                     u927:
  1912     06BC  0BF4               	decfsz	??_init_display_controller,f
  1913     06BD  2EBC               	goto	u927
  1914     06BE  0000               	nop
  1915     06BF                     l20:
  1916     06BF  0008               	return
  1917     06C0                     __end_of_init_display_controller:
  1918                           
  1919                           	psect	text10
  1920     0366                     __ptext10:	
  1921 ;; *************** function _init_adc *****************
  1922 ;; Defined at:
  1923 ;;		line 3 in file "adc.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		None
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_init_config
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     0366                     _init_adc:	
  1951                           ;psect for function _init_adc
  1952                           
  1953     0366                     l1391:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _init_adc: []
  1956                           
  1957                           
  1958                           ;adc.c: 6:     ADFM = 1;
  1959     0366  1683               	bsf	3,5	;RP0=1, select bank1
  1960     0367  1303               	bcf	3,6	;RP1=0, select bank1
  1961     0368  179F               	bsf	31,7	;volatile
  1962                           
  1963                           ;adc.c: 9:     ADON = 1;
  1964     0369  1283               	bcf	3,5	;RP0=0, select bank0
  1965     036A  1303               	bcf	3,6	;RP1=0, select bank0
  1966     036B  141F               	bsf	31,0	;volatile
  1967     036C                     l139:
  1968     036C  0008               	return
  1969     036D                     __end_of_init_adc:
  1970                           
  1971                           	psect	text11
  1972     0428                     __ptext11:	
  1973 ;; *************** function _getdata *****************
  1974 ;; Defined at:
  1975 ;;		line 25 in file "main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 1
  1996 ;; This function calls:
  1997 ;;		_read_adc
  1998 ;;		_read_digital_keypad
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004     0428                     _getdata:	
  2005                           ;psect for function _getdata
  2006                           
  2007     0428                     l1421:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _getdata: [wreg+status,2+status,0+pclath+cstack]
  2010                           
  2011                           
  2012                           ;main.c: 27: 
  2013     0428  120A  118A  23DE  120A  118A  	fcall	_read_adc
  2014     042D  0871               	movf	?_read_adc+1,w
  2015     042E  1283               	bcf	3,5	;RP0=0, select bank0
  2016     042F  1303               	bcf	3,6	;RP1=0, select bank0
  2017     0430  00D2               	movwf	_speed+1
  2018     0431  0870               	movf	?_read_adc,w
  2019     0432  00D1               	movwf	_speed
  2020     0433                     l1423:
  2021                           
  2022                           ;main.c: 29: 
  2023     0433  3001               	movlw	1
  2024     0434  120A  118A  2557  120A  118A  	fcall	_read_digital_keypad
  2025     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2026     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2027     043B  00C7               	movwf	_key
  2028     043C                     l179:
  2029     043C  0008               	return
  2030     043D                     __end_of_getdata:
  2031                           
  2032                           	psect	text12
  2033     0557                     __ptext12:	
  2034 ;; *************** function _read_digital_keypad *****************
  2035 ;; Defined at:
  2036 ;;		line 10 in file "digital_keypad.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  mode            1    wreg     unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  mode            1    1[COMMON] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      unsigned char 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       0       0       0       0
  2051 ;;      Locals:         1       0       0       0       0
  2052 ;;      Temps:          1       0       0       0       0
  2053 ;;      Totals:         2       0       0       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_getdata
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063     0557                     _read_digital_keypad:	
  2064                           ;psect for function _read_digital_keypad
  2065                           
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  2069                           ;read_digital_keypad@mode stored from wreg
  2070     0557  00F1               	movwf	read_digital_keypad@mode
  2071     0558                     l1351:
  2072                           
  2073                           ;digital_keypad.c: 10: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 11: {;digital_keypad.c: 12:     static unsigned char once = 1;;digital_keypad.c: 
      +                          14:     if (mode == 0)
  2074     0558  0871               	movf	read_digital_keypad@mode,w
  2075     0559  1D03               	btfss	3,2
  2076     055A  2D5C               	goto	u791
  2077     055B  2D5D               	goto	u790
  2078     055C                     u791:
  2079     055C  2D62               	goto	l1359
  2080     055D                     u790:
  2081     055D                     l1353:
  2082                           
  2083                           ;digital_keypad.c: 15:     {;digital_keypad.c: 16:         return PORTB & 0x3F;
  2084     055D  1283               	bcf	3,5	;RP0=0, select bank0
  2085     055E  1303               	bcf	3,6	;RP1=0, select bank0
  2086     055F  0806               	movf	6,w	;volatile
  2087     0560  393F               	andlw	63
  2088     0561  2D80               	goto	l45
  2089     0562                     l1359:
  2090                           
  2091                           ;digital_keypad.c: 19:     {;digital_keypad.c: 20:         if (((PORTB & 0x3F) != 0x3F) 
      +                          && once)
  2092     0562  303F               	movlw	63
  2093     0563  1283               	bcf	3,5	;RP0=0, select bank0
  2094     0564  1303               	bcf	3,6	;RP1=0, select bank0
  2095     0565  0506               	andwf	6,w	;volatile
  2096     0566  00F0               	movwf	??_read_digital_keypad
  2097     0567  303F               	movlw	63
  2098     0568  0670               	xorwf	??_read_digital_keypad,w
  2099     0569  1903               	btfsc	3,2
  2100     056A  2D6C               	goto	u801
  2101     056B  2D6D               	goto	u800
  2102     056C                     u801:
  2103     056C  2D74               	goto	l1371
  2104     056D                     u800:
  2105     056D                     l1361:
  2106     056D  0831               	movf	read_digital_keypad@once,w
  2107     056E  1903               	btfsc	3,2
  2108     056F  2D71               	goto	u811
  2109     0570  2D72               	goto	u810
  2110     0571                     u811:
  2111     0571  2D74               	goto	l1371
  2112     0572                     u810:
  2113     0572                     l1363:
  2114                           
  2115                           ;digital_keypad.c: 21:         {;digital_keypad.c: 22:             once = 0;
  2116     0572  01B1               	clrf	read_digital_keypad@once
  2117     0573  2D5D               	goto	l1353
  2118     0574                     l1371:
  2119     0574  303F               	movlw	63
  2120     0575  0506               	andwf	6,w	;volatile
  2121     0576  00F0               	movwf	??_read_digital_keypad
  2122     0577  303F               	movlw	63
  2123     0578  0670               	xorwf	??_read_digital_keypad,w
  2124     0579  1D03               	btfss	3,2
  2125     057A  2D7C               	goto	u821
  2126     057B  2D7D               	goto	u820
  2127     057C                     u821:
  2128     057C  2D7F               	goto	l1375
  2129     057D                     u820:
  2130     057D                     l1373:
  2131                           
  2132                           ;digital_keypad.c: 27:         {;digital_keypad.c: 28:             once = 1;
  2133     057D  01B1               	clrf	read_digital_keypad@once
  2134     057E  0AB1               	incf	read_digital_keypad@once,f
  2135     057F                     l1375:
  2136                           
  2137                           ;digital_keypad.c: 32:     return 0x3F;
  2138     057F  303F               	movlw	63
  2139     0580                     l45:
  2140     0580  0008               	return
  2141     0581                     __end_of_read_digital_keypad:
  2142                           
  2143                           	psect	text13
  2144     03DE                     __ptext13:	
  2145 ;; *************** function _read_adc *****************
  2146 ;; Defined at:
  2147 ;;		line 12 in file "adc.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  adc_reg_val     2    2[COMMON] unsigned short 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMMON] unsigned short 
  2154 ;; Registers used:
  2155 ;;		wreg
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         2       0       0       0       0
  2162 ;;      Locals:         2       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0
  2164 ;;      Totals:         4       0       0       0       0
  2165 ;;Total ram usage:        4 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_getdata
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174     03DE                     _read_adc:	
  2175                           ;psect for function _read_adc
  2176                           
  2177     03DE                     l1393:	
  2178                           ;incstack = 0
  2179                           ; Regs used in _read_adc: [wreg]
  2180                           
  2181                           
  2182                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
  2183     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2184     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2185     03E0  151F               	bsf	31,2	;volatile
  2186     03E1                     l142:	
  2187                           ;adc.c: 20:     while (nDONE);
  2188                           
  2189     03E1  191F               	btfsc	31,2	;volatile
  2190     03E2  2BE4               	goto	u841
  2191     03E3  2BE5               	goto	u840
  2192     03E4                     u841:
  2193     03E4  2BE1               	goto	l142
  2194     03E5                     u840:
  2195     03E5                     l1395:
  2196                           
  2197                           ;adc.c: 23:     adc_reg_val = (ADRESH << 8) | ADRESL;
  2198     03E5  081E               	movf	30,w	;volatile
  2199     03E6  00F3               	movwf	read_adc@adc_reg_val+1
  2200     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2201     03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2202     03E9  081E               	movf	30,w	;volatile
  2203     03EA  00F2               	movwf	read_adc@adc_reg_val
  2204                           
  2205                           ;adc.c: 25:     return adc_reg_val;
  2206     03EB  0873               	movf	read_adc@adc_reg_val+1,w
  2207     03EC  00F1               	movwf	?_read_adc+1
  2208     03ED  0872               	movf	read_adc@adc_reg_val,w
  2209     03EE  00F0               	movwf	?_read_adc
  2210     03EF                     l145:
  2211     03EF  0008               	return
  2212     03F0                     __end_of_read_adc:
  2213                           
  2214                           	psect	text14
  2215     043D                     __ptext14:	
  2216 ;; *************** function _display_dashboard *****************
  2217 ;; Defined at:
  2218 ;;		line 78 in file "app.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  event           1    wreg     PTR const unsigned char 
  2221 ;;		 -> event(2), 
  2222 ;;  speed           1   13[COMMON] PTR const unsigned char 
  2223 ;;		 -> speed(2), 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  event           1   17[BANK0 ] PTR const unsigned char 
  2226 ;;		 -> event(2), 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         1       0       0       0       0
  2237 ;;      Locals:         0       1       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         1       1       0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 6
  2243 ;; This function calls:
  2244 ;;		_displayevent
  2245 ;;		_displayheader
  2246 ;;		_displayspeed
  2247 ;;		_displaytime
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253     043D                     _display_dashboard:	
  2254                           ;psect for function _display_dashboard
  2255                           
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _display_dashboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2259                           ;display_dashboard@event stored from wreg
  2260     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2261     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2262     043F  00C3               	movwf	display_dashboard@event
  2263     0440                     l1431:
  2264                           
  2265                           ;app.c: 78: void display_dashboard(const char* event, const char *speed);app.c: 79: {;ap
      +                          p.c: 80:     displayheader();
  2266     0440  120A  118A  2459  120A  118A  	fcall	_displayheader
  2267                           
  2268                           ;app.c: 82:     displaytime();
  2269     0445  120A  118A  23BF  120A  118A  	fcall	_displaytime
  2270                           
  2271                           ;app.c: 84:     displayevent(event);
  2272     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2273     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2274     044C  0843               	movf	display_dashboard@event,w
  2275     044D  120A  118A  2387  120A  118A  	fcall	_displayevent
  2276                           
  2277                           ;app.c: 86:     displayspeed(speed);
  2278     0452  087D               	movf	display_dashboard@speed,w
  2279     0453  120A  118A  25DE  120A  118A  	fcall	_displayspeed
  2280     0458                     l223:
  2281     0458  0008               	return
  2282     0459                     __end_of_display_dashboard:
  2283                           
  2284                           	psect	text15
  2285     03BF                     __ptext15:	
  2286 ;; *************** function _displaytime *****************
  2287 ;; Defined at:
  2288 ;;		line 45 in file "app.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2302 ;;      Params:         0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 5
  2309 ;; This function calls:
  2310 ;;		_clcd_print
  2311 ;;		_gettime
  2312 ;; This function is called by:
  2313 ;;		_display_dashboard
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317     03BF                     _displaytime:	
  2318                           ;psect for function _displaytime
  2319                           
  2320     03BF                     l1403:	
  2321                           ;incstack = 0
  2322                           ; Regs used in _displaytime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2323                           
  2324                           
  2325                           ;app.c: 47:     gettime();
  2326     03BF  120A  118A  2618  120A  118A  	fcall	_gettime
  2327     03C4                     l1405:
  2328                           
  2329                           ;app.c: 48:     clcd_print(time,(0xC0 + 0));
  2330     03C4  30C0               	movlw	192
  2331     03C5  00F4               	movwf	clcd_print@addr
  2332     03C6  3048               	movlw	(low (_time| 0))& (0+255)
  2333     03C7  120A  118A  24F2  120A  118A  	fcall	_clcd_print
  2334     03CC                     l214:
  2335     03CC  0008               	return
  2336     03CD                     __end_of_displaytime:
  2337                           
  2338                           	psect	text16
  2339     0618                     __ptext16:	
  2340 ;; *************** function _gettime *****************
  2341 ;; Defined at:
  2342 ;;		line 24 in file "app.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, pclath, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2356 ;;      Params:         0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0
  2358 ;;      Temps:          1       0       0       0       0
  2359 ;;      Totals:         1       0       0       0       0
  2360 ;;Total ram usage:        1 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 4
  2363 ;; This function calls:
  2364 ;;		_read_ds1307
  2365 ;; This function is called by:
  2366 ;;		_displaytime
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370     0618                     _gettime:	
  2371                           ;psect for function _gettime
  2372                           
  2373     0618                     l1213:	
  2374                           ;incstack = 0
  2375                           ; Regs used in _gettime: [wreg+status,2+status,0+pclath+cstack]
  2376                           
  2377                           
  2378                           ;app.c: 26:     clocktime[0] = read_ds1307(0x02);
  2379     0618  3002               	movlw	2
  2380     0619  120A  118A  2581  120A  118A  	fcall	_read_ds1307
  2381     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2382     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2383     0620  00C4               	movwf	_clocktime
  2384                           
  2385                           ;app.c: 27:     clocktime[1] = read_ds1307(0x01);
  2386     0621  3001               	movlw	1
  2387     0622  120A  118A  2581  120A  118A  	fcall	_read_ds1307
  2388     0627  1283               	bcf	3,5	;RP0=0, select bank0
  2389     0628  1303               	bcf	3,6	;RP1=0, select bank0
  2390     0629  00C5               	movwf	_clocktime+1
  2391                           
  2392                           ;app.c: 28:     clocktime[2] = read_ds1307(0x00);
  2393     062A  3000               	movlw	0
  2394     062B  120A  118A  2581  120A  118A  	fcall	_read_ds1307
  2395     0630  1283               	bcf	3,5	;RP0=0, select bank0
  2396     0631  1303               	bcf	3,6	;RP1=0, select bank0
  2397     0632  00C6               	movwf	_clocktime+2
  2398     0633                     l1215:
  2399                           
  2400                           ;app.c: 30:     time[0] = ((clocktime[0] >> 4) & 0x0F) + '0';
  2401     0633  0844               	movf	_clocktime,w
  2402     0634  00F4               	movwf	??_gettime
  2403     0635  3004               	movlw	4
  2404     0636                     u505:
  2405     0636  1003               	clrc
  2406     0637  0CF4               	rrf	??_gettime,f
  2407     0638  3EFF               	addlw	-1
  2408     0639  1D03               	skipz
  2409     063A  2E36               	goto	u505
  2410     063B  0874               	movf	??_gettime,w
  2411     063C  390F               	andlw	15
  2412     063D  3E30               	addlw	48
  2413     063E  00C8               	movwf	_time
  2414     063F                     l1217:
  2415                           
  2416                           ;app.c: 31:     time[1] = (clocktime[0] & 0x0F) + '0';
  2417     063F  0844               	movf	_clocktime,w
  2418     0640  390F               	andlw	15
  2419     0641  3E30               	addlw	48
  2420     0642  00C9               	movwf	_time+1
  2421     0643                     l1219:
  2422                           
  2423                           ;app.c: 32:     time[2] = ':';
  2424     0643  303A               	movlw	58
  2425     0644  00CA               	movwf	_time+2
  2426     0645                     l1221:
  2427                           
  2428                           ;app.c: 33:     time[3] = ((clocktime[1] >> 4) & 0x0F) + '0';
  2429     0645  0845               	movf	_clocktime+1,w
  2430     0646  00F4               	movwf	??_gettime
  2431     0647  3004               	movlw	4
  2432     0648                     u515:
  2433     0648  1003               	clrc
  2434     0649  0CF4               	rrf	??_gettime,f
  2435     064A  3EFF               	addlw	-1
  2436     064B  1D03               	skipz
  2437     064C  2E48               	goto	u515
  2438     064D  0874               	movf	??_gettime,w
  2439     064E  390F               	andlw	15
  2440     064F  3E30               	addlw	48
  2441     0650  00CB               	movwf	_time+3
  2442     0651                     l1223:
  2443                           
  2444                           ;app.c: 34:     time[4] = (clocktime[1] & 0x0F) + '0';
  2445     0651  0845               	movf	_clocktime+1,w
  2446     0652  390F               	andlw	15
  2447     0653  3E30               	addlw	48
  2448     0654  00CC               	movwf	_time+4
  2449     0655                     l1225:
  2450                           
  2451                           ;app.c: 35:     time[5] = ':';
  2452     0655  303A               	movlw	58
  2453     0656  00CD               	movwf	_time+5
  2454     0657                     l1227:
  2455                           
  2456                           ;app.c: 36:     time[6] = ((clocktime[2] >> 4) & 0x0F) + '0';
  2457     0657  0846               	movf	_clocktime+2,w
  2458     0658  00F4               	movwf	??_gettime
  2459     0659  3004               	movlw	4
  2460     065A                     u525:
  2461     065A  1003               	clrc
  2462     065B  0CF4               	rrf	??_gettime,f
  2463     065C  3EFF               	addlw	-1
  2464     065D  1D03               	skipz
  2465     065E  2E5A               	goto	u525
  2466     065F  0874               	movf	??_gettime,w
  2467     0660  390F               	andlw	15
  2468     0661  3E30               	addlw	48
  2469     0662  00CE               	movwf	_time+6
  2470     0663                     l1229:
  2471                           
  2472                           ;app.c: 37:     time[7] = (clocktime[2] & 0x0F) + '0';
  2473     0663  0846               	movf	_clocktime+2,w
  2474     0664  390F               	andlw	15
  2475     0665  3E30               	addlw	48
  2476     0666  00CF               	movwf	_time+7
  2477     0667                     l1231:
  2478                           
  2479                           ;app.c: 38:     time[8] = '\0';
  2480     0667  01D0               	clrf	_time+8
  2481     0668                     l211:
  2482     0668  0008               	return
  2483     0669                     __end_of_gettime:
  2484                           
  2485                           	psect	text17
  2486     0581                     __ptext17:	
  2487 ;; *************** function _read_ds1307 *****************
  2488 ;; Defined at:
  2489 ;;		line 14 in file "ds1307.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  addr            1    wreg     unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  addr            1    2[COMMON] unsigned char 
  2494 ;;  data            1    3[COMMON] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      unsigned char 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         2       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0
  2507 ;;      Totals:         2       0       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 3
  2511 ;; This function calls:
  2512 ;;		_i2c_read
  2513 ;;		_i2c_rep_start
  2514 ;;		_i2c_start
  2515 ;;		_i2c_stop
  2516 ;;		_i2c_write
  2517 ;; This function is called by:
  2518 ;;		_init_ds1307
  2519 ;;		_gettime
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523     0581                     _read_ds1307:	
  2524                           ;psect for function _read_ds1307
  2525                           
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _read_ds1307: [wreg+status,2+status,0+pclath+cstack]
  2529                           ;read_ds1307@addr stored from wreg
  2530     0581  00F2               	movwf	read_ds1307@addr
  2531     0582                     l1175:
  2532                           
  2533                           ;ds1307.c: 14: unsigned char read_ds1307(unsigned char addr);ds1307.c: 15: {;ds1307.c: 1
      +                          6:     unsigned char data;;ds1307.c: 18:     i2c_start();
  2534     0582  120A  118A  2375  120A  118A  	fcall	_i2c_start
  2535                           
  2536                           ;ds1307.c: 19:     i2c_write(0b11010000);
  2537     0587  30D0               	movlw	208
  2538     0588  120A  118A  239C  120A  118A  	fcall	_i2c_write
  2539                           
  2540                           ;ds1307.c: 20:     i2c_write(addr);
  2541     058D  0872               	movf	read_ds1307@addr,w
  2542     058E  120A  118A  239C  120A  118A  	fcall	_i2c_write
  2543                           
  2544                           ;ds1307.c: 21:     i2c_rep_start();
  2545     0593  120A  118A  2391  120A  118A  	fcall	_i2c_rep_start
  2546                           
  2547                           ;ds1307.c: 22:     i2c_write(0b11010001);
  2548     0598  30D1               	movlw	209
  2549     0599  120A  118A  239C  120A  118A  	fcall	_i2c_write
  2550                           
  2551                           ;ds1307.c: 23:     data = i2c_read(0);
  2552     059E  3000               	movlw	0
  2553     059F  120A  118A  2512  120A  118A  	fcall	_i2c_read
  2554     05A4  00F3               	movwf	read_ds1307@data
  2555                           
  2556                           ;ds1307.c: 24:     i2c_stop();
  2557     05A5  120A  118A  237E  120A  118A  	fcall	_i2c_stop
  2558     05AA                     l1177:
  2559                           
  2560                           ;ds1307.c: 26:     return data;
  2561     05AA  0873               	movf	read_ds1307@data,w
  2562     05AB                     l69:
  2563     05AB  0008               	return
  2564     05AC                     __end_of_read_ds1307:
  2565                           
  2566                           	psect	text18
  2567     039C                     __ptext18:	
  2568 ;; *************** function _i2c_write *****************
  2569 ;; Defined at:
  2570 ;;		line 66 in file "i2c.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  data            1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  data            1    0[COMMON] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2   57[None  ] int 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, pclath, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2584 ;;      Params:         0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0
  2587 ;;      Totals:         1       0       0       0       0
  2588 ;;Total ram usage:        1 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 1
  2591 ;; This function calls:
  2592 ;;		_i2c_wait_for_idle
  2593 ;; This function is called by:
  2594 ;;		_read_ds1307
  2595 ;;		_write_ds1307
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599     039C                     _i2c_write:	
  2600                           ;psect for function _i2c_write
  2601                           
  2602                           
  2603                           ;incstack = 0
  2604                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2605                           ;i2c_write@data stored from wreg
  2606     039C  00F0               	movwf	i2c_write@data
  2607     039D                     l1143:
  2608                           
  2609                           ;i2c.c: 66: int i2c_write(unsigned char data);i2c.c: 67: {;i2c.c: 68:     i2c_wait_for_i
      +                          dle();
  2610     039D  120A  118A  23B2  120A  118A  	fcall	_i2c_wait_for_idle
  2611     03A2                     l1145:
  2612                           
  2613                           ;i2c.c: 69:     SSPBUF = data;
  2614     03A2  0870               	movf	i2c_write@data,w
  2615     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2616     03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2617     03A5  0093               	movwf	19	;volatile
  2618     03A6                     l1147:
  2619     03A6                     l124:	
  2620                           ;i2c.c: 71:     return !ACKSTAT;;	Return value of _i2c_write is never used
  2621                           
  2622     03A6  0008               	return
  2623     03A7                     __end_of_i2c_write:
  2624                           
  2625                           	psect	text19
  2626     0391                     __ptext19:	
  2627 ;; *************** function _i2c_rep_start *****************
  2628 ;; Defined at:
  2629 ;;		line 29 in file "i2c.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 2
  2650 ;; This function calls:
  2651 ;;		_i2c_start
  2652 ;;		_i2c_stop
  2653 ;; This function is called by:
  2654 ;;		_read_ds1307
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658     0391                     _i2c_rep_start:	
  2659                           ;psect for function _i2c_rep_start
  2660                           
  2661     0391                     l1151:	
  2662                           ;incstack = 0
  2663                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  2664                           
  2665                           
  2666                           ;i2c.c: 31:     i2c_stop();
  2667     0391  120A  118A  237E  120A  118A  	fcall	_i2c_stop
  2668                           
  2669                           ;i2c.c: 32:     i2c_start();
  2670     0396  120A  118A  2375  120A  118A  	fcall	_i2c_start
  2671     039B                     l113:
  2672     039B  0008               	return
  2673     039C                     __end_of_i2c_rep_start:
  2674                           
  2675                           	psect	text20
  2676     037E                     __ptext20:	
  2677 ;; *************** function _i2c_stop *****************
  2678 ;; Defined at:
  2679 ;;		line 36 in file "i2c.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0, pclath, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2693 ;;      Params:         0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 1
  2700 ;; This function calls:
  2701 ;;		_i2c_wait_for_idle
  2702 ;; This function is called by:
  2703 ;;		_read_ds1307
  2704 ;;		_write_ds1307
  2705 ;;		_i2c_rep_start
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709     037E                     _i2c_stop:	
  2710                           ;psect for function _i2c_stop
  2711                           
  2712     037E                     l1139:	
  2713                           ;incstack = 0
  2714                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  2715                           
  2716                           
  2717                           ;i2c.c: 38:     i2c_wait_for_idle();
  2718     037E  120A  118A  23B2  120A  118A  	fcall	_i2c_wait_for_idle
  2719     0383                     l1141:
  2720                           
  2721                           ;i2c.c: 39:     PEN = 1;
  2722     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2723     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2724     0385  1511               	bsf	17,2	;volatile
  2725     0386                     l116:
  2726     0386  0008               	return
  2727     0387                     __end_of_i2c_stop:
  2728                           
  2729                           	psect	text21
  2730     0375                     __ptext21:	
  2731 ;; *************** function _i2c_start *****************
  2732 ;; Defined at:
  2733 ;;		line 23 in file "i2c.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0
  2750 ;;      Totals:         0       0       0       0       0
  2751 ;;Total ram usage:        0 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 1
  2754 ;; This function calls:
  2755 ;;		_i2c_wait_for_idle
  2756 ;; This function is called by:
  2757 ;;		_read_ds1307
  2758 ;;		_write_ds1307
  2759 ;;		_i2c_rep_start
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763     0375                     _i2c_start:	
  2764                           ;psect for function _i2c_start
  2765                           
  2766     0375                     l1135:	
  2767                           ;incstack = 0
  2768                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2769                           
  2770                           
  2771                           ;i2c.c: 25:     i2c_wait_for_idle();
  2772     0375  120A  118A  23B2  120A  118A  	fcall	_i2c_wait_for_idle
  2773     037A                     l1137:
  2774                           
  2775                           ;i2c.c: 26:     SEN = 1;
  2776     037A  1683               	bsf	3,5	;RP0=1, select bank1
  2777     037B  1303               	bcf	3,6	;RP1=0, select bank1
  2778     037C  1411               	bsf	17,0	;volatile
  2779     037D                     l110:
  2780     037D  0008               	return
  2781     037E                     __end_of_i2c_start:
  2782                           
  2783                           	psect	text22
  2784     0512                     __ptext22:	
  2785 ;; *************** function _i2c_read *****************
  2786 ;; Defined at:
  2787 ;;		line 42 in file "i2c.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  ack             1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  ack             1    0[COMMON] unsigned char 
  2792 ;;  data            1    1[COMMON] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      unsigned char 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, pclath, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       0       0       0       0
  2803 ;;      Locals:         2       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0
  2805 ;;      Totals:         2       0       0       0       0
  2806 ;;Total ram usage:        2 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 1
  2809 ;; This function calls:
  2810 ;;		_i2c_wait_for_idle
  2811 ;; This function is called by:
  2812 ;;		_read_ds1307
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816     0512                     _i2c_read:	
  2817                           ;psect for function _i2c_read
  2818                           
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2822                           ;i2c_read@ack stored from wreg
  2823     0512  00F0               	movwf	i2c_read@ack
  2824     0513                     l1153:
  2825                           
  2826                           ;i2c.c: 42: unsigned char i2c_read(unsigned char ack);i2c.c: 43: {;i2c.c: 44:     unsign
      +                          ed char data;;i2c.c: 46:     i2c_wait_for_idle();
  2827     0513  120A  118A  23B2  120A  118A  	fcall	_i2c_wait_for_idle
  2828     0518                     l1155:
  2829                           
  2830                           ;i2c.c: 47:     RCEN = 1;
  2831     0518  1683               	bsf	3,5	;RP0=1, select bank1
  2832     0519  1303               	bcf	3,6	;RP1=0, select bank1
  2833     051A  1591               	bsf	17,3	;volatile
  2834                           
  2835                           ;i2c.c: 49:     i2c_wait_for_idle();
  2836     051B  120A  118A  23B2  120A  118A  	fcall	_i2c_wait_for_idle
  2837     0520                     l1157:
  2838                           
  2839                           ;i2c.c: 50:     data = SSPBUF;
  2840     0520  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0521  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0522  0813               	movf	19,w	;volatile
  2843     0523  00F1               	movwf	i2c_read@data
  2844     0524                     l1159:
  2845                           
  2846                           ;i2c.c: 52:     if (ack == 1)
  2847     0524  0370               	decf	i2c_read@ack,w
  2848     0525  1D03               	btfss	3,2
  2849     0526  2D28               	goto	u461
  2850     0527  2D29               	goto	u460
  2851     0528                     u461:
  2852     0528  2D2D               	goto	l119
  2853     0529                     u460:
  2854     0529                     l1161:
  2855                           
  2856                           ;i2c.c: 53:     {;i2c.c: 54:         ACKDT = 1;
  2857     0529  1683               	bsf	3,5	;RP0=1, select bank1
  2858     052A  1303               	bcf	3,6	;RP1=0, select bank1
  2859     052B  1691               	bsf	17,5	;volatile
  2860                           
  2861                           ;i2c.c: 55:     }
  2862     052C  2D30               	goto	l120
  2863     052D                     l119:	
  2864                           ;i2c.c: 56:     else
  2865                           
  2866                           
  2867                           ;i2c.c: 57:     {;i2c.c: 58:         ACKDT = 0;
  2868     052D  1683               	bsf	3,5	;RP0=1, select bank1
  2869     052E  1303               	bcf	3,6	;RP1=0, select bank1
  2870     052F  1291               	bcf	17,5	;volatile
  2871     0530                     l120:	
  2872                           ;i2c.c: 59:     }
  2873                           
  2874                           
  2875                           ;i2c.c: 61:     ACKEN = 1;
  2876     0530  1611               	bsf	17,4	;volatile
  2877     0531                     l1163:
  2878                           
  2879                           ;i2c.c: 63:     return data;
  2880     0531  0871               	movf	i2c_read@data,w
  2881     0532                     l121:
  2882     0532  0008               	return
  2883     0533                     __end_of_i2c_read:
  2884                           
  2885                           	psect	text23
  2886     03B2                     __ptext23:	
  2887 ;; *************** function _i2c_wait_for_idle *****************
  2888 ;; Defined at:
  2889 ;;		line 16 in file "i2c.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2903 ;;      Params:         0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_i2c_start
  2913 ;;		_i2c_stop
  2914 ;;		_i2c_read
  2915 ;;		_i2c_write
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919     03B2                     _i2c_wait_for_idle:	
  2920                           ;psect for function _i2c_wait_for_idle
  2921                           
  2922     03B2                     l1131:	
  2923                           ;incstack = 0
  2924                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  2925                           
  2926     03B2                     l104:	
  2927                           ;i2c.c: 20:     while (R_nW || (SSPCON2 & 0x1F));
  2928                           
  2929     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2930     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2931     03B4  1914               	btfsc	20,2	;volatile
  2932     03B5  2BB7               	goto	u441
  2933     03B6  2BB8               	goto	u440
  2934     03B7                     u441:
  2935     03B7  2BB2               	goto	l104
  2936     03B8                     u440:
  2937     03B8                     l1133:
  2938     03B8  0811               	movf	17,w	;volatile
  2939     03B9  391F               	andlw	31
  2940     03BA  1D03               	btfss	3,2
  2941     03BB  2BBD               	goto	u451
  2942     03BC  2BBE               	goto	u450
  2943     03BD                     u451:
  2944     03BD  2BB2               	goto	l104
  2945     03BE                     u450:
  2946     03BE                     l107:
  2947     03BE  0008               	return
  2948     03BF                     __end_of_i2c_wait_for_idle:
  2949                           
  2950                           	psect	text24
  2951     05DE                     __ptext24:	
  2952 ;; *************** function _displayspeed *****************
  2953 ;; Defined at:
  2954 ;;		line 67 in file "app.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  speed           1    wreg     PTR const unsigned char 
  2957 ;;		 -> speed(2), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  speed           1   12[COMMON] PTR const unsigned char 
  2960 ;;		 -> speed(2), 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         1       0       0       0       0
  2972 ;;      Temps:          2       0       0       0       0
  2973 ;;      Totals:         3       0       0       0       0
  2974 ;;Total ram usage:        3 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 2
  2977 ;; This function calls:
  2978 ;;		___awdiv
  2979 ;;		___awmod
  2980 ;;		_clcd_putch
  2981 ;; This function is called by:
  2982 ;;		_display_dashboard
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986     05DE                     _displayspeed:	
  2987                           ;psect for function _displayspeed
  2988                           
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _displayspeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2992                           ;displayspeed@speed stored from wreg
  2993     05DE  00FC               	movwf	displayspeed@speed
  2994     05DF                     l1409:
  2995                           
  2996                           ;app.c: 67: void displayspeed(const char *speed);app.c: 68: {;app.c: 70:     clcd_putch(
      +                          (*speed / 10)+'0' ,(0xC0 + 14));
  2997     05DF  30CE               	movlw	206
  2998     05E0  00F8               	movwf	clcd_putch@addr
  2999     05E1  300A               	movlw	10
  3000     05E2  00F0               	movwf	___awdiv@divisor
  3001     05E3  3000               	movlw	0
  3002     05E4  00F1               	movwf	___awdiv@divisor+1
  3003     05E5  087C               	movf	displayspeed@speed,w
  3004     05E6  0084               	movwf	4
  3005     05E7  1383               	bcf	3,7	;select IRP bank0
  3006     05E8  0800               	movf	0,w
  3007     05E9  00FA               	movwf	??_displayspeed
  3008     05EA  01FB               	clrf	??_displayspeed+1
  3009     05EB  087A               	movf	??_displayspeed,w
  3010     05EC  00F2               	movwf	___awdiv@dividend
  3011     05ED  087B               	movf	??_displayspeed+1,w
  3012     05EE  00F3               	movwf	___awdiv@dividend+1
  3013     05EF  120A  118A  277F  120A  118A  	fcall	___awdiv
  3014     05F4  0870               	movf	?___awdiv,w
  3015     05F5  3E30               	addlw	48
  3016     05F6  120A  118A  23CD  120A  118A  	fcall	_clcd_putch
  3017                           
  3018                           ;app.c: 71:     clcd_putch((*speed % 10)+'0' ,(0xC0 + 15));
  3019     05FB  30CF               	movlw	207
  3020     05FC  00F8               	movwf	clcd_putch@addr
  3021     05FD  300A               	movlw	10
  3022     05FE  00F0               	movwf	___awmod@divisor
  3023     05FF  3000               	movlw	0
  3024     0600  00F1               	movwf	___awmod@divisor+1
  3025     0601  087C               	movf	displayspeed@speed,w
  3026     0602  0084               	movwf	4
  3027     0603  1383               	bcf	3,7	;select IRP bank0
  3028     0604  0800               	movf	0,w
  3029     0605  00FA               	movwf	??_displayspeed
  3030     0606  01FB               	clrf	??_displayspeed+1
  3031     0607  087A               	movf	??_displayspeed,w
  3032     0608  00F2               	movwf	___awmod@dividend
  3033     0609  087B               	movf	??_displayspeed+1,w
  3034     060A  00F3               	movwf	___awmod@dividend+1
  3035     060B  120A  118A  26C0  120A  118A  	fcall	___awmod
  3036     0610  0870               	movf	?___awmod,w
  3037     0611  3E30               	addlw	48
  3038     0612  120A  118A  23CD  120A  118A  	fcall	_clcd_putch
  3039     0617                     l220:
  3040     0617  0008               	return
  3041     0618                     __end_of_displayspeed:
  3042                           
  3043                           	psect	text25
  3044     03CD                     __ptext25:	
  3045 ;; *************** function _clcd_putch *****************
  3046 ;; Defined at:
  3047 ;;		line 49 in file "clcd.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  data            1    wreg     const unsigned char 
  3050 ;;  addr            1    8[COMMON] unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  data            1    9[COMMON] const unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, pclath, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         1       0       0       0       0
  3063 ;;      Locals:         1       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0
  3065 ;;      Totals:         2       0       0       0       0
  3066 ;;Total ram usage:        2 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 1
  3069 ;; This function calls:
  3070 ;;		_clcd_write
  3071 ;; This function is called by:
  3072 ;;		_displayspeed
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076     03CD                     _clcd_putch:	
  3077                           ;psect for function _clcd_putch
  3078                           
  3079                           
  3080                           ;incstack = 0
  3081                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  3082                           ;clcd_putch@data stored from wreg
  3083     03CD  00F9               	movwf	clcd_putch@data
  3084     03CE                     l1201:
  3085                           
  3086                           ;clcd.c: 49: void clcd_putch(const char data, unsigned char addr);clcd.c: 50: {;clcd.c: 
      +                          51:     clcd_write(addr, 0);
  3087     03CE  01F0               	clrf	clcd_write@mode
  3088     03CF  0878               	movf	clcd_putch@addr,w
  3089     03D0  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  3090                           
  3091                           ;clcd.c: 52:     clcd_write(data, 1);
  3092     03D5  01F0               	clrf	clcd_write@mode
  3093     03D6  0AF0               	incf	clcd_write@mode,f
  3094     03D7  0879               	movf	clcd_putch@data,w
  3095     03D8  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  3096     03DD                     l26:
  3097     03DD  0008               	return
  3098     03DE                     __end_of_clcd_putch:
  3099                           
  3100                           	psect	text26
  3101     06C0                     __ptext26:	
  3102 ;; *************** function ___awmod *****************
  3103 ;; Defined at:
  3104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  divisor         2    0[COMMON] int 
  3107 ;;  dividend        2    2[COMMON] int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  sign            1    5[COMMON] unsigned char 
  3110 ;;  counter         1    4[COMMON] unsigned char 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  2    0[COMMON] int 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, btemp+1
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         4       0       0       0       0
  3121 ;;      Locals:         2       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0
  3123 ;;      Totals:         6       0       0       0       0
  3124 ;;Total ram usage:        6 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_displayspeed
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133     06C0                     ___awmod:	
  3134                           ;psect for function ___awmod
  3135                           
  3136     06C0                     l1303:	
  3137                           ;incstack = 0
  3138                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3139                           
  3140     06C0  01F5               	clrf	___awmod@sign
  3141     06C1                     l1305:
  3142     06C1  1FF3               	btfss	___awmod@dividend+1,7
  3143     06C2  2EC4               	goto	u701
  3144     06C3  2EC5               	goto	u700
  3145     06C4                     u701:
  3146     06C4  2ECC               	goto	l1311
  3147     06C5                     u700:
  3148     06C5                     l1307:
  3149     06C5  09F2               	comf	___awmod@dividend,f
  3150     06C6  09F3               	comf	___awmod@dividend+1,f
  3151     06C7  0AF2               	incf	___awmod@dividend,f
  3152     06C8  1903               	skipnz
  3153     06C9  0AF3               	incf	___awmod@dividend+1,f
  3154     06CA                     l1309:
  3155     06CA  01F5               	clrf	___awmod@sign
  3156     06CB  0AF5               	incf	___awmod@sign,f
  3157     06CC                     l1311:
  3158     06CC  1FF1               	btfss	___awmod@divisor+1,7
  3159     06CD  2ECF               	goto	u711
  3160     06CE  2ED0               	goto	u710
  3161     06CF                     u711:
  3162     06CF  2ED5               	goto	l1315
  3163     06D0                     u710:
  3164     06D0                     l1313:
  3165     06D0  09F0               	comf	___awmod@divisor,f
  3166     06D1  09F1               	comf	___awmod@divisor+1,f
  3167     06D2  0AF0               	incf	___awmod@divisor,f
  3168     06D3  1903               	skipnz
  3169     06D4  0AF1               	incf	___awmod@divisor+1,f
  3170     06D5                     l1315:
  3171     06D5  0870               	movf	___awmod@divisor,w
  3172     06D6  0471               	iorwf	___awmod@divisor+1,w
  3173     06D7  1903               	btfsc	3,2
  3174     06D8  2EDA               	goto	u721
  3175     06D9  2EDB               	goto	u720
  3176     06DA                     u721:
  3177     06DA  2F0A               	goto	l1333
  3178     06DB                     u720:
  3179     06DB                     l1317:
  3180     06DB  01F4               	clrf	___awmod@counter
  3181     06DC  0AF4               	incf	___awmod@counter,f
  3182     06DD  2EE9               	goto	l1323
  3183     06DE                     l1319:
  3184     06DE  3001               	movlw	1
  3185     06DF                     u735:
  3186     06DF  1003               	clrc
  3187     06E0  0DF0               	rlf	___awmod@divisor,f
  3188     06E1  0DF1               	rlf	___awmod@divisor+1,f
  3189     06E2  3EFF               	addlw	-1
  3190     06E3  1D03               	skipz
  3191     06E4  2EDF               	goto	u735
  3192     06E5                     l1321:
  3193     06E5  3001               	movlw	1
  3194     06E6  00FF               	movwf	btemp+1
  3195     06E7  087F               	movf	btemp+1,w
  3196     06E8  07F4               	addwf	___awmod@counter,f
  3197     06E9                     l1323:
  3198     06E9  1FF1               	btfss	___awmod@divisor+1,7
  3199     06EA  2EEC               	goto	u741
  3200     06EB  2EED               	goto	u740
  3201     06EC                     u741:
  3202     06EC  2EDE               	goto	l1319
  3203     06ED                     u740:
  3204     06ED                     l1325:
  3205     06ED  0871               	movf	___awmod@divisor+1,w
  3206     06EE  0273               	subwf	___awmod@dividend+1,w
  3207     06EF  1D03               	skipz
  3208     06F0  2EF3               	goto	u755
  3209     06F1  0870               	movf	___awmod@divisor,w
  3210     06F2  0272               	subwf	___awmod@dividend,w
  3211     06F3                     u755:
  3212     06F3  1C03               	skipc
  3213     06F4  2EF6               	goto	u751
  3214     06F5  2EF7               	goto	u750
  3215     06F6                     u751:
  3216     06F6  2EFD               	goto	l1329
  3217     06F7                     u750:
  3218     06F7                     l1327:
  3219     06F7  0870               	movf	___awmod@divisor,w
  3220     06F8  02F2               	subwf	___awmod@dividend,f
  3221     06F9  0871               	movf	___awmod@divisor+1,w
  3222     06FA  1C03               	skipc
  3223     06FB  03F3               	decf	___awmod@dividend+1,f
  3224     06FC  02F3               	subwf	___awmod@dividend+1,f
  3225     06FD                     l1329:
  3226     06FD  3001               	movlw	1
  3227     06FE                     u765:
  3228     06FE  1003               	clrc
  3229     06FF  0CF1               	rrf	___awmod@divisor+1,f
  3230     0700  0CF0               	rrf	___awmod@divisor,f
  3231     0701  3EFF               	addlw	-1
  3232     0702  1D03               	skipz
  3233     0703  2EFE               	goto	u765
  3234     0704                     l1331:
  3235     0704  3001               	movlw	1
  3236     0705  02F4               	subwf	___awmod@counter,f
  3237     0706  1D03               	btfss	3,2
  3238     0707  2F09               	goto	u771
  3239     0708  2F0A               	goto	u770
  3240     0709                     u771:
  3241     0709  2EED               	goto	l1325
  3242     070A                     u770:
  3243     070A                     l1333:
  3244     070A  0875               	movf	___awmod@sign,w
  3245     070B  1903               	btfsc	3,2
  3246     070C  2F0E               	goto	u781
  3247     070D  2F0F               	goto	u780
  3248     070E                     u781:
  3249     070E  2F14               	goto	l1337
  3250     070F                     u780:
  3251     070F                     l1335:
  3252     070F  09F2               	comf	___awmod@dividend,f
  3253     0710  09F3               	comf	___awmod@dividend+1,f
  3254     0711  0AF2               	incf	___awmod@dividend,f
  3255     0712  1903               	skipnz
  3256     0713  0AF3               	incf	___awmod@dividend+1,f
  3257     0714                     l1337:
  3258     0714  0873               	movf	___awmod@dividend+1,w
  3259     0715  00F1               	movwf	?___awmod+1
  3260     0716  0872               	movf	___awmod@dividend,w
  3261     0717  00F0               	movwf	?___awmod
  3262     0718                     l475:
  3263     0718  0008               	return
  3264     0719                     __end_of___awmod:
  3265                           
  3266                           	psect	text27
  3267     077F                     __ptext27:	
  3268 ;; *************** function ___awdiv *****************
  3269 ;; Defined at:
  3270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  divisor         2    0[COMMON] int 
  3273 ;;  dividend        2    2[COMMON] int 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  quotient        2    6[COMMON] int 
  3276 ;;  sign            1    5[COMMON] unsigned char 
  3277 ;;  counter         1    4[COMMON] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  2    0[COMMON] int 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, btemp+1
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         4       0       0       0       0
  3288 ;;      Locals:         4       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0
  3290 ;;      Totals:         8       0       0       0       0
  3291 ;;Total ram usage:        8 bytes
  3292 ;; Hardware stack levels used: 1
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_displayspeed
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300     077F                     ___awdiv:	
  3301                           ;psect for function ___awdiv
  3302                           
  3303     077F                     l1259:	
  3304                           ;incstack = 0
  3305                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3306                           
  3307     077F  01F5               	clrf	___awdiv@sign
  3308     0780                     l1261:
  3309     0780  1FF1               	btfss	___awdiv@divisor+1,7
  3310     0781  2F83               	goto	u601
  3311     0782  2F84               	goto	u600
  3312     0783                     u601:
  3313     0783  2F8B               	goto	l1267
  3314     0784                     u600:
  3315     0784                     l1263:
  3316     0784  09F0               	comf	___awdiv@divisor,f
  3317     0785  09F1               	comf	___awdiv@divisor+1,f
  3318     0786  0AF0               	incf	___awdiv@divisor,f
  3319     0787  1903               	skipnz
  3320     0788  0AF1               	incf	___awdiv@divisor+1,f
  3321     0789                     l1265:
  3322     0789  01F5               	clrf	___awdiv@sign
  3323     078A  0AF5               	incf	___awdiv@sign,f
  3324     078B                     l1267:
  3325     078B  1FF3               	btfss	___awdiv@dividend+1,7
  3326     078C  2F8E               	goto	u611
  3327     078D  2F8F               	goto	u610
  3328     078E                     u611:
  3329     078E  2F98               	goto	l1273
  3330     078F                     u610:
  3331     078F                     l1269:
  3332     078F  09F2               	comf	___awdiv@dividend,f
  3333     0790  09F3               	comf	___awdiv@dividend+1,f
  3334     0791  0AF2               	incf	___awdiv@dividend,f
  3335     0792  1903               	skipnz
  3336     0793  0AF3               	incf	___awdiv@dividend+1,f
  3337     0794                     l1271:
  3338     0794  3001               	movlw	1
  3339     0795  00FF               	movwf	btemp+1
  3340     0796  087F               	movf	btemp+1,w
  3341     0797  06F5               	xorwf	___awdiv@sign,f
  3342     0798                     l1273:
  3343     0798  01F6               	clrf	___awdiv@quotient
  3344     0799  01F7               	clrf	___awdiv@quotient+1
  3345     079A                     l1275:
  3346     079A  0870               	movf	___awdiv@divisor,w
  3347     079B  0471               	iorwf	___awdiv@divisor+1,w
  3348     079C  1903               	btfsc	3,2
  3349     079D  2F9F               	goto	u621
  3350     079E  2FA0               	goto	u620
  3351     079F                     u621:
  3352     079F  2FD7               	goto	l1295
  3353     07A0                     u620:
  3354     07A0                     l1277:
  3355     07A0  01F4               	clrf	___awdiv@counter
  3356     07A1  0AF4               	incf	___awdiv@counter,f
  3357     07A2  2FAE               	goto	l1283
  3358     07A3                     l1279:
  3359     07A3  3001               	movlw	1
  3360     07A4                     u635:
  3361     07A4  1003               	clrc
  3362     07A5  0DF0               	rlf	___awdiv@divisor,f
  3363     07A6  0DF1               	rlf	___awdiv@divisor+1,f
  3364     07A7  3EFF               	addlw	-1
  3365     07A8  1D03               	skipz
  3366     07A9  2FA4               	goto	u635
  3367     07AA                     l1281:
  3368     07AA  3001               	movlw	1
  3369     07AB  00FF               	movwf	btemp+1
  3370     07AC  087F               	movf	btemp+1,w
  3371     07AD  07F4               	addwf	___awdiv@counter,f
  3372     07AE                     l1283:
  3373     07AE  1FF1               	btfss	___awdiv@divisor+1,7
  3374     07AF  2FB1               	goto	u641
  3375     07B0  2FB2               	goto	u640
  3376     07B1                     u641:
  3377     07B1  2FA3               	goto	l1279
  3378     07B2                     u640:
  3379     07B2                     l1285:
  3380     07B2  3001               	movlw	1
  3381     07B3                     u655:
  3382     07B3  1003               	clrc
  3383     07B4  0DF6               	rlf	___awdiv@quotient,f
  3384     07B5  0DF7               	rlf	___awdiv@quotient+1,f
  3385     07B6  3EFF               	addlw	-1
  3386     07B7  1D03               	skipz
  3387     07B8  2FB3               	goto	u655
  3388     07B9  0871               	movf	___awdiv@divisor+1,w
  3389     07BA  0273               	subwf	___awdiv@dividend+1,w
  3390     07BB  1D03               	skipz
  3391     07BC  2FBF               	goto	u665
  3392     07BD  0870               	movf	___awdiv@divisor,w
  3393     07BE  0272               	subwf	___awdiv@dividend,w
  3394     07BF                     u665:
  3395     07BF  1C03               	skipc
  3396     07C0  2FC2               	goto	u661
  3397     07C1  2FC3               	goto	u660
  3398     07C2                     u661:
  3399     07C2  2FCA               	goto	l1291
  3400     07C3                     u660:
  3401     07C3                     l1287:
  3402     07C3  0870               	movf	___awdiv@divisor,w
  3403     07C4  02F2               	subwf	___awdiv@dividend,f
  3404     07C5  0871               	movf	___awdiv@divisor+1,w
  3405     07C6  1C03               	skipc
  3406     07C7  03F3               	decf	___awdiv@dividend+1,f
  3407     07C8  02F3               	subwf	___awdiv@dividend+1,f
  3408     07C9                     l1289:
  3409     07C9  1476               	bsf	___awdiv@quotient,0
  3410     07CA                     l1291:
  3411     07CA  3001               	movlw	1
  3412     07CB                     u675:
  3413     07CB  1003               	clrc
  3414     07CC  0CF1               	rrf	___awdiv@divisor+1,f
  3415     07CD  0CF0               	rrf	___awdiv@divisor,f
  3416     07CE  3EFF               	addlw	-1
  3417     07CF  1D03               	skipz
  3418     07D0  2FCB               	goto	u675
  3419     07D1                     l1293:
  3420     07D1  3001               	movlw	1
  3421     07D2  02F4               	subwf	___awdiv@counter,f
  3422     07D3  1D03               	btfss	3,2
  3423     07D4  2FD6               	goto	u681
  3424     07D5  2FD7               	goto	u680
  3425     07D6                     u681:
  3426     07D6  2FB2               	goto	l1285
  3427     07D7                     u680:
  3428     07D7                     l1295:
  3429     07D7  0875               	movf	___awdiv@sign,w
  3430     07D8  1903               	btfsc	3,2
  3431     07D9  2FDB               	goto	u691
  3432     07DA  2FDC               	goto	u690
  3433     07DB                     u691:
  3434     07DB  2FE1               	goto	l1299
  3435     07DC                     u690:
  3436     07DC                     l1297:
  3437     07DC  09F6               	comf	___awdiv@quotient,f
  3438     07DD  09F7               	comf	___awdiv@quotient+1,f
  3439     07DE  0AF6               	incf	___awdiv@quotient,f
  3440     07DF  1903               	skipnz
  3441     07E0  0AF7               	incf	___awdiv@quotient+1,f
  3442     07E1                     l1299:
  3443     07E1  0877               	movf	___awdiv@quotient+1,w
  3444     07E2  00F1               	movwf	?___awdiv+1
  3445     07E3  0876               	movf	___awdiv@quotient,w
  3446     07E4  00F0               	movwf	?___awdiv
  3447     07E5                     l462:
  3448     07E5  0008               	return
  3449     07E6                     __end_of___awdiv:
  3450                           
  3451                           	psect	text28
  3452     0459                     __ptext28:	
  3453 ;; *************** function _displayheader *****************
  3454 ;; Defined at:
  3455 ;;		line 11 in file "app.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  header         17    0[BANK0 ] unsigned char [17]
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         0       0       0       0       0
  3470 ;;      Locals:         0      17       0       0       0
  3471 ;;      Temps:          4       0       0       0       0
  3472 ;;      Totals:         4      17       0       0       0
  3473 ;;Total ram usage:       21 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 2
  3476 ;; This function calls:
  3477 ;;		_clcd_print
  3478 ;; This function is called by:
  3479 ;;		_display_dashboard
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483     0459                     _displayheader:	
  3484                           ;psect for function _displayheader
  3485                           
  3486     0459                     l1399:	
  3487                           ;incstack = 0
  3488                           ; Regs used in _displayheader: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3489                           
  3490                           
  3491                           ;app.c: 15:     char header[] = "  TIME     E  SP";
  3492     0459  3032               	movlw	displayheader@header& (0+255)
  3493     045A  0084               	movwf	4
  3494     045B  3020               	movlw	low displayheader@F1007
  3495     045C  00F6               	movwf	??_displayheader
  3496     045D  0804               	movf	4,w
  3497     045E  00F7               	movwf	??_displayheader+1
  3498     045F  3011               	movlw	17
  3499     0460  00F8               	movwf	??_displayheader+2
  3500     0461                     u850:
  3501     0461  0876               	movf	??_displayheader,w
  3502     0462  0084               	movwf	4
  3503     0463  1383               	bcf	3,7	;select IRP bank0
  3504     0464  0800               	movf	0,w
  3505     0465  00F9               	movwf	??_displayheader+3
  3506     0466  0AF6               	incf	??_displayheader,f
  3507     0467  0877               	movf	??_displayheader+1,w
  3508     0468  0084               	movwf	4
  3509     0469  0879               	movf	??_displayheader+3,w
  3510     046A  0080               	movwf	0
  3511     046B  0AF7               	incf	??_displayheader+1,f
  3512     046C  0BF8               	decfsz	??_displayheader+2,f
  3513     046D  2C61               	goto	u850
  3514     046E                     l1401:
  3515                           
  3516                           ;app.c: 17:     clcd_print(header, (0x80 + 0));
  3517     046E  3080               	movlw	128
  3518     046F  00F4               	movwf	clcd_print@addr
  3519     0470  3032               	movlw	(low (displayheader@header| 0))& (0+255)
  3520     0471  120A  118A  24F2  120A  118A  	fcall	_clcd_print
  3521     0476                     l208:
  3522     0476  0008               	return
  3523     0477                     __end_of_displayheader:
  3524                           
  3525                           	psect	text29
  3526     0387                     __ptext29:	
  3527 ;; *************** function _displayevent *****************
  3528 ;; Defined at:
  3529 ;;		line 56 in file "app.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  event           1    wreg     PTR const unsigned char 
  3532 ;;		 -> event(2), 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  event           1    6[COMMON] PTR const unsigned char 
  3535 ;;		 -> event(2), 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         0       0       0       0       0
  3546 ;;      Locals:         1       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0
  3548 ;;      Totals:         1       0       0       0       0
  3549 ;;Total ram usage:        1 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 2
  3552 ;; This function calls:
  3553 ;;		_clcd_print
  3554 ;; This function is called by:
  3555 ;;		_display_dashboard
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559     0387                     _displayevent:	
  3560                           ;psect for function _displayevent
  3561                           
  3562                           
  3563                           ;incstack = 0
  3564                           ; Regs used in _displayevent: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3565                           ;displayevent@event stored from wreg
  3566     0387  00F6               	movwf	displayevent@event
  3567     0388                     l1407:
  3568                           
  3569                           ;app.c: 56: void displayevent(const char* event);app.c: 57: {;app.c: 59:     clcd_print(
      +                          event, (0xC0 + 11));
  3570     0388  30CB               	movlw	203
  3571     0389  00F4               	movwf	clcd_print@addr
  3572     038A  0876               	movf	displayevent@event,w
  3573     038B  120A  118A  24F2  120A  118A  	fcall	_clcd_print
  3574     0390                     l217:
  3575     0390  0008               	return
  3576     0391                     __end_of_displayevent:
  3577                           
  3578                           	psect	text30
  3579     04F2                     __ptext30:	
  3580 ;; *************** function _clcd_print *****************
  3581 ;; Defined at:
  3582 ;;		line 55 in file "clcd.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  str             1    wreg     PTR const unsigned char 
  3585 ;;		 -> time(9), displayheader@header(17), event(2), 
  3586 ;;  addr            1    4[COMMON] unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  str             1    5[COMMON] PTR const unsigned char 
  3589 ;;		 -> time(9), displayheader@header(17), event(2), 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         1       0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         2       0       0       0       0
  3603 ;;Total ram usage:        2 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 1
  3606 ;; This function calls:
  3607 ;;		_clcd_write
  3608 ;; This function is called by:
  3609 ;;		_displayheader
  3610 ;;		_displaytime
  3611 ;;		_displayevent
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615     04F2                     _clcd_print:	
  3616                           ;psect for function _clcd_print
  3617                           
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3621                           ;clcd_print@str stored from wreg
  3622     04F2  00F5               	movwf	clcd_print@str
  3623     04F3                     l1203:
  3624                           
  3625                           ;clcd.c: 55: void clcd_print(const char *str, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
  3626     04F3  01F0               	clrf	clcd_write@mode
  3627     04F4  0874               	movf	clcd_print@addr,w
  3628     04F5  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  3629                           
  3630                           ;clcd.c: 59:     while (*str != '\0')
  3631     04FA  2D09               	goto	l1209
  3632     04FB                     l1205:
  3633                           
  3634                           ;clcd.c: 60:     {;clcd.c: 61:         clcd_write(*str, 1);
  3635     04FB  01F0               	clrf	clcd_write@mode
  3636     04FC  0AF0               	incf	clcd_write@mode,f
  3637     04FD  0875               	movf	clcd_print@str,w
  3638     04FE  0084               	movwf	4
  3639     04FF  0800               	movf	0,w
  3640     0500  120A  118A  24D2  120A  118A  	fcall	_clcd_write
  3641     0505                     l1207:
  3642                           
  3643                           ;clcd.c: 62:         str++;
  3644     0505  3001               	movlw	1
  3645     0506  00FF               	movwf	btemp+1
  3646     0507  087F               	movf	btemp+1,w
  3647     0508  07F5               	addwf	clcd_print@str,f
  3648     0509                     l1209:
  3649                           
  3650                           ;clcd.c: 59:     while (*str != '\0')
  3651     0509  0875               	movf	clcd_print@str,w
  3652     050A  0084               	movwf	4
  3653     050B  1383               	bcf	3,7	;select IRP bank0
  3654     050C  0800               	movf	0,w
  3655     050D  1D03               	btfss	3,2
  3656     050E  2D10               	goto	u491
  3657     050F  2D11               	goto	u490
  3658     0510                     u491:
  3659     0510  2CFB               	goto	l1205
  3660     0511                     u490:
  3661     0511                     l32:
  3662     0511  0008               	return
  3663     0512                     __end_of_clcd_print:
  3664                           
  3665                           	psect	text31
  3666     04D2                     __ptext31:	
  3667 ;; *************** function _clcd_write *****************
  3668 ;; Defined at:
  3669 ;;		line 4 in file "clcd.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  byte            1    wreg     unsigned char 
  3672 ;;  mode            1    0[COMMON] unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  byte            1    3[COMMON] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3684 ;;      Params:         1       0       0       0       0
  3685 ;;      Locals:         1       0       0       0       0
  3686 ;;      Temps:          2       0       0       0       0
  3687 ;;      Totals:         4       0       0       0       0
  3688 ;;Total ram usage:        4 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_init_display_controller
  3694 ;;		_clcd_putch
  3695 ;;		_clcd_print
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699     04D2                     _clcd_write:	
  3700                           ;psect for function _clcd_write
  3701                           
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _clcd_write: [wreg]
  3705                           ;clcd_write@byte stored from wreg
  3706     04D2  00F3               	movwf	clcd_write@byte
  3707     04D3                     l1167:
  3708                           
  3709                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  3710     04D3  1870               	btfsc	clcd_write@mode,0
  3711     04D4  2CD6               	goto	u471
  3712     04D5  2CDA               	goto	u470
  3713     04D6                     u471:
  3714     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3715     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  3716     04D8  1509               	bsf	9,2	;volatile
  3717     04D9  2CDD               	goto	u484
  3718     04DA                     u470:
  3719     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3720     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3721     04DC  1109               	bcf	9,2	;volatile
  3722     04DD                     u484:
  3723     04DD                     l1169:
  3724                           
  3725                           ;clcd.c: 7:     PORTD = byte;
  3726     04DD  0873               	movf	clcd_write@byte,w
  3727     04DE  0088               	movwf	8	;volatile
  3728     04DF                     l1171:
  3729                           
  3730                           ;clcd.c: 9:     RE1 = 1;
  3731     04DF  1489               	bsf	9,1	;volatile
  3732                           
  3733                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3734     04E0  30A6               	movlw	166
  3735     04E1  00F1               	movwf	??_clcd_write
  3736     04E2                     u937:
  3737     04E2  0BF1               	decfsz	??_clcd_write,f
  3738     04E3  2CE2               	goto	u937
  3739     04E4  0000               	nop
  3740     04E5                     l1173:
  3741                           
  3742                           ;clcd.c: 11:     RE1 = 0;
  3743     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3744     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  3745     04E7  1089               	bcf	9,1	;volatile
  3746                           
  3747                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3748     04E8  301B               	movlw	27
  3749     04E9  00F2               	movwf	??_clcd_write+1
  3750     04EA  309E               	movlw	158
  3751     04EB  00F1               	movwf	??_clcd_write
  3752     04EC                     u947:
  3753     04EC  0BF1               	decfsz	??_clcd_write,f
  3754     04ED  2CEC               	goto	u947
  3755     04EE  0BF2               	decfsz	??_clcd_write+1,f
  3756     04EF  2CEC               	goto	u947
  3757     04F0  0000               	nop
  3758     04F1                     l17:
  3759     04F1  0008               	return
  3760     04F2                     __end_of_clcd_write:
  3761     007E                     btemp	set	126	;btemp
  3762     007E                     wtemp0	set	126
  3763                           
  3764                           	psect	config
  3765                           
  3766                           ;Config register CONFIG @ 0x2007
  3767                           ;	Oscillator Selection bits
  3768                           ;	FOSC = 0x3, unprogrammed default
  3769                           ;	Watchdog Timer Enable bit
  3770                           ;	WDTE = OFF, WDT disabled
  3771                           ;	Power-up Timer Enable bit
  3772                           ;	PWRTE = 0x1, unprogrammed default
  3773                           ;	Brown-out Reset Enable bit
  3774                           ;	BOREN = 0x1, unprogrammed default
  3775                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3776                           ;	LVP = 0x1, unprogrammed default
  3777                           ;	Data EEPROM Memory Code Protection bit
  3778                           ;	CPD = 0x1, unprogrammed default
  3779                           ;	Flash Program Memory Write Enable bits
  3780                           ;	WRT = 0x3, unprogrammed default
  3781                           ;	In-Circuit Debugger Mode bit
  3782                           ;	DEBUG = 0x1, unprogrammed default
  3783                           ;	Flash Program Memory Code Protection bit
  3784                           ;	CP = 0x1, unprogrammed default
  3785     2007                     	org	8199
  3786     2007  3FFB               	dw	16379

Data Sizes:
    Strings     3
    Constant    0
    Data        18
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    display_dashboard@speed	PTR const unsigned char  size(1) Largest target is 2
		 -> speed(BANK0[2]), 

    display_dashboard@event	PTR const unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    displayspeed@speed	PTR const unsigned char  size(1) Largest target is 2
		 -> speed(BANK0[2]), 

    displayevent@event	PTR const unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> time(BANK0[9]), displayheader@header(BANK0[17]), event(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_display_dashboard
    _init_i2c->___lldiv
    _init_ds1307->_read_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _getdata->_read_adc
    _display_dashboard->_displayspeed
    _displaytime->_clcd_print
    _gettime->_read_ds1307
    _read_ds1307->_i2c_read
    _displayspeed->_clcd_putch
    _clcd_putch->___awdiv
    _displayheader->_clcd_print
    _displayevent->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _main->_display_dashboard
    _init_config->_init_i2c
    _display_dashboard->_displayheader

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7661
                  _display_dashboard
                            _getdata
                        _init_config
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               3     2      1     184
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1516
                           _init_adc
                          _init_clcd
                _init_digital_keypad
                        _init_ds1307
                           _init_i2c
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     300
                                              4 COMMON     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     142
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getdata                                              0     0      0      45
                           _read_adc
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (2) _read_digital_keypad                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    2     1      1    5916
                                             13 COMMON     1     0      1
                                             17 BANK0      1     1      0
                       _displayevent
                      _displayheader
                       _displayspeed
                        _displaytime
 ---------------------------------------------------------------------------------
 (2) _displaytime                                          0     0      0    1310
                         _clcd_print
                            _gettime
 ---------------------------------------------------------------------------------
 (3) _gettime                                              1     1      0     112
                                              4 COMMON     1     1      0
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0     112
                                              2 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             2     2      0      45
                                              0 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _displayspeed                                         3     3      0    1977
                                             10 COMMON     3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (3) _clcd_putch                                           2     1      1    1000
                                              8 COMMON     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _displayheader                                       21    21      0    1223
                                              6 COMMON     4     4      0
                                              0 BANK0     17    17      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _displayevent                                         1     1      0    1253
                                              6 COMMON     1     1      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (3) _clcd_print                                           2     1      1    1198
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_dashboard
     _displayevent
       _clcd_print
         _clcd_write
     _displayheader
       _clcd_print
     _displayspeed
       ___awdiv
       ___awmod
       _clcd_putch
         ___awdiv (ARG)
         ___awmod (ARG)
         _clcd_write (ARG)
     _displaytime
       _clcd_print
       _gettime
         _read_ds1307
           _i2c_read
             _i2c_wait_for_idle
           _i2c_rep_start
             _i2c_start
               _i2c_wait_for_idle
             _i2c_stop
               _i2c_wait_for_idle
           _i2c_start
           _i2c_stop
           _i2c_write
             _i2c_wait_for_idle
   _getdata
     _read_adc
     _read_digital_keypad
   _init_config
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
       ___lldiv
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 25 21:06:57 2024

                              pc 0002                   clcd_print@addr 0074                               l20 06BF  
                             l23 03B1                               l32 0511                               l17 04F1  
                             l26 03DD                               l45 0580                               l39 0365  
                             l72 0494                               l66 0414                               l69 05AB  
                             _GO 00FA                     ___awdiv@sign 0075                     ?_displaytime 0070  
                             fsr 0004                              l101 05DD                              l110 037D  
                            l104 03B2                              l120 0530                              l121 0532  
                            l113 039B                              l107 03BE                              l211 0668  
                            l220 0617                              l116 0386                              l124 03A6  
                            l214 03CC                              l142 03E1                              l119 052D  
                            l223 0458                              l208 0476                              l217 0390  
                            l145 03EF                              l139 036C                              l176 0556  
                            l345 077E                              l179 043C                              l462 07E5  
                            l475 0718                              l763 04D1                              _RE1 0049  
                            _RE2 004A                              u600 0784                              u440 03B8  
                            _PEN 048A                              u601 0783                              u441 03B7  
                            u505 0636                              u610 078F                              u450 03BE  
                            u530 0729                              u611 078E                              u451 03BD  
                            u515 0648                              u531 0728                              u620 07A0  
                            u700 06C5                              u460 0529                              u621 079F  
                            u701 06C4                              u461 0528                              u525 065A  
                            u470 04DA                              u710 06D0                              u550 073D  
                            u471 04D6                              u711 06CF                              u551 073C  
                            u640 07B2                              u720 06DB                              u800 056D  
                            u641 07B1                              u721 06DA                              u801 056C  
                            u545 072E                              u490 0511                              u810 0572  
                            u570 0758                              u491 0510                              u635 07A4  
                            u811 0571                              u571 0757                              u484 04DD  
                            u660 07C3                              u740 06ED                              u820 057D  
                            _SEN 0488                              u661 07C2                              u741 06EC  
                            u821 057C                              u565 073F                              u750 06F7  
                            u590 0776                              u830 05BD                              u655 07B3  
                            u751 06F6                              u735 06DF                              u591 0775  
                            u575 0754                              u680 07D7                              u840 03E5  
                            u681 07D6                              u665 07BF                              u841 03E4  
                            u585 0768                              u850 0461                              u690 07DC  
                            u770 070A                              u691 07DB                              u675 07CB  
                            u771 0709                              u755 06F3                              u907 06A0  
                            u835 05B8                              u780 070F                              u860 04D1  
                            u781 070E                              u765 06FE                              u917 06AE  
                            u861 04D0                              u790 055D                              u791 055C  
                            u927 06BC                              u937 04E2                              u947 04EC  
                            u877 066D                              u887 067C                              u897 068A  
                  ?_displayevent 0070                              _key 0047                   clcd_putch@addr 0078  
                            fsr0 0004                   clcd_putch@data 0079                              indf 0000  
                  ?_displayspeed 0070                     ___awmod@sign 0075                             l1201 03CE  
                           l1203 04F3                             l1131 03B2                             l1211 0478  
                           l1205 04FB                             l1133 03B8                             l1141 0383  
                           l1221 0645                             l1213 0618                             l1207 0505  
                           l1311 06CC                             l1303 06C0                             l1135 0375  
                           l1151 0391                             l1143 039D                             l1231 0667  
                           l1223 0651                             l1215 0633                             l1209 0509  
                           l1401 046E                             l1321 06E5                             l1313 06D0  
                           l1305 06C1                             l1161 0529                             l1153 0513  
                           l1137 037A                             l1145 03A2                             l1225 0655  
                           l1217 063F                             l1241 0739                             l1233 0719  
                           l1171 04DF                             l1331 0704                             l1323 06E9  
                           l1315 06D5                             l1307 06C5                             l1163 0531  
                           l1155 0518                             l1139 037E                             l1147 03A6  
                           l1227 0657                             l1219 0643                             l1403 03BF  
                           l1251 0767                             l1243 073D                             l1235 0729  
                           l1411 0533                             l1173 04E5                             l1261 0780  
                           l1325 06ED                             l1317 06DB                             l1333 070A  
                           l1309 06CA                             l1157 0520                             l1229 0663  
                           l1405 03C4                             l1421 0428                             l1181 0669  
                           l1341 03A7                             l1253 0770                             l1245 0746  
                           l1237 072C                             l1413 0538                             l1167 04D3  
                           l1407 0388                             l1271 0794                             l1263 0784  
                           l1335 070F                             l1327 06F7                             l1319 06DE  
                           l1159 0524                             l1175 0582                             l1431 0440  
                           l1351 0558                             l1423 0433                             l1191 0694  
                           l1183 0671                             l1343 03AA                             l1247 0758  
                           l1239 0735                             l1255 0776                             l1415 053D  
                           l1169 04DD                             l1281 07AA                             l1273 0798  
                           l1265 0789                             l1337 0714                             l1329 06FD  
                           l1409 05DF                             l1177 05AA                             l1361 056D  
                           l1353 055D                             l1193 0697                             l1185 0678  
                           l1345 03AB                             l1249 0766                             l1417 0542  
                           l1425 04B4                             l1433 0495            ??_read_digital_keypad 0070  
                           l1291 07CA                             l1283 07AE                             l1275 079A  
                           l1267 078B                             l1259 077F                             l1363 0572  
                           l1371 0574                             l1195 069E                             l1187 0688  
                           l1347 03AC                             l1419 0551                             l1427 04B7  
                           l1435 049A                             l1293 07D1                             l1285 07B2  
                           l1277 07A0                             l1269 078F                             l1373 057D  
                           l1197 06AA                             l1189 068D                             l1349 0360  
                           l1381 0409                             l1429 04BF                             l1437 04A2  
                           l1287 07C3                             l1279 07A3                             l1295 07D7  
                           l1375 057F                             l1359 0562                             l1391 0366  
                           l1199 06B3                             l1383 040C                             l1439 04A7  
                           l1297 07DC                             l1289 07C9                             l1393 03DE  
                           l1385 05AC                             l1299 07E1                             l1395 03E5  
                           l1379 0402                             l1387 05AF                             l1389 05DA  
                           l1399 0459                             _ADFM 04FF                             _ADON 00F8  
                           STR_1 0009                             _RCEN 048B                   ?_displayheader 0070  
                           _R_nW 04A2                             _main 0495                             _time 0048  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                    _i2c_rep_start 0391                displayspeed@speed 007C  
                   ?_init_ds1307 0070                            ?_main 0070                     ?_read_ds1307 0070  
                          _ACKEN 048C                            _ACKDT 048D                  __end_of___awdiv 07E6  
                __end_of___awmod 0719                  __end_of___lldiv 077F                      i2c_read@ack 0070  
                 ??_displayevent 0076                  ___awdiv@divisor 0070                     ?_init_config 0070  
                 ??_displayspeed 007A                  ___awdiv@counter 0074                            _PORTB 0006  
                          _PORTD 0008                            _SSPM3 00A3                            _TRISB 0086  
                          _TRISD 0088                            _SSPEN 00A5                            _nDONE 00FA  
                __end_of_getdata 043D                  __end_of_gettime 0669                            _event 0053  
                          _speed 0051                            pclath 000A                            status 0003  
                          wtemp0 007E                 init_ds1307@dummy 0074                  __initialization 07E6  
                 ?_i2c_rep_start 0070                     __end_of_main 04B3                 __end_of_i2c_read 0533  
               __end_of_i2c_stop 0387                           ??_main 007E              displayheader@header 0032  
                ??_displayheader 0076                           _ADRESH 001E                           _ADRESL 009E  
               ___awdiv@dividend 0072                     i2c_read@data 0071                     _write_ds1307 0477  
                         _SSPADD 0093                           _TRISE1 0449                           _TRISE2 044A  
                         _SSPBUF 0013      __end_of_init_digital_keypad 0366          _init_display_controller 0669  
                      ??___awdiv 0074                        ??___awmod 0074                        ??___lldiv 0078  
               __end_of_init_i2c 05DE                 __end_of_init_adc 036D                 __end_of_read_adc 03F0  
               ___awdiv@quotient 0076                  ___awmod@divisor 0070                  ___awmod@counter 0074  
                      ??_getdata 0074                           _strcpy 04B3                        ??_gettime 0074  
        __end_of__initialization 07FC             __end_of_displayevent 0391                  ??_i2c_rep_start 0070  
           __end_of_displayspeed 0618                   __pcstackCOMMON 0070                     __pidataBANK0 03F0  
              __end_of_i2c_start 037E                __end_of_i2c_write 03A7                _i2c_wait_for_idle 03B2  
             ?_i2c_wait_for_idle 0070                       __pbssBANK0 0044                        ?_i2c_read 0070  
                      ?_i2c_stop 0070        ??_init_display_controller 0074                       _clcd_print 04F2  
            ??_i2c_wait_for_idle 0070                       _clcd_putch 03CD                       _clcd_write 04D2  
                     __pmaintext 0495                  read_ds1307@addr 0072                  read_ds1307@data 0073  
                        _ACKSTAT 048E                          ?_strcpy 0070      __end_of_read_digital_keypad 0581  
      __end_of_i2c_wait_for_idle 03BF                     init_i2c@baud 0032                          _SSPCON2 0091  
                     __stringtab 0003                       ??_i2c_read 0070                       ??_i2c_stop 0070  
                      ?_init_i2c 0032                        ?_init_adc 0070                        ?_read_adc 0070  
                        ___awdiv 077F                          ___awmod 06C0                          ___lldiv 0719  
                        __ptext1 04B3                          __ptext2 0533                          __ptext3 05AC  
                        __ptext4 0719                          __ptext5 0402                          __ptext6 0477  
                        __ptext7 0360                          __ptext8 03A7                          __ptext9 0669  
                        _getdata 0428                          _gettime 0618  __end_of_init_display_controller 06C0  
              __end_of_init_clcd 03B2                 ___awmod@dividend 0072           display_dashboard@event 0043  
         display_dashboard@speed 007D                          clrloop0 036E             end_of_initialization 07FC  
                     ??_init_i2c 0036                       ??_init_adc 0070                       ??_read_adc 0072  
                    ?_clcd_print 0074                      ?_clcd_putch 0078                  ___lldiv@divisor 0070  
                    ?_clcd_write 0070                  ___lldiv@counter 007D                     _displayevent 0387  
                  i2c_write@data 0070                     _displayspeed 05DE                    clcd_print@str 0075  
          __end_of_displayheader 0477                    ??_displaytime 0076                   __end_of_strcpy 04D2  
            start_initialization 07E6               displayheader@F1007 0020                        _i2c_start 0375  
                      _i2c_write 039C            __end_of_i2c_rep_start 039C                       init_fetch0 0415  
                  ??_init_ds1307 0074                      __pdataBANK0 0020                    ??_read_ds1307 0072  
                       ??_strcpy 0071                    ??_init_config 007E              __end_of_displaytime 03CD  
                      ___latbits 0002                    __pcstackBANK0 0032                       ?_i2c_start 0070  
                     ?_i2c_write 0070                         ?___awdiv 0070                         ?___awmod 0070  
              _display_dashboard 043D                         ?___lldiv 0070                        _clocktime 0044  
             ?_display_dashboard 007D                        __pstrings 0003                         ?_getdata 0070  
                       ?_gettime 0070              __end_of_init_ds1307 0415              read_adc@adc_reg_val 0072  
            ??_display_dashboard 007E              __end_of_read_ds1307 05AC                        _init_clcd 03A7  
            __end_of_init_config 0557                    ?_write_ds1307 0071         ?_init_display_controller 0070  
                      clear_ram0 036D                     ??_clcd_print 0075                     ??_clcd_putch 0079  
                   ??_clcd_write 0071        __end_of_display_dashboard 0459                      _displaytime 03BF  
                    __stringbase 0008                      ??_i2c_start 0070               __end_of_clcd_print 0512  
                    ??_i2c_write 0070               __end_of_clcd_putch 03DE               __end_of_clcd_write 04F2  
                     ?_init_clcd 0070                   ??_write_ds1307 0072              _init_digital_keypad 0360  
                       _i2c_read 0512                         _i2c_stop 037E             ?_init_digital_keypad 0070  
                    _init_ds1307 0402               __end_of__stringtab 0009                      _read_ds1307 0581  
                    _init_config 0533                         __ptext10 0366                         __ptext11 0428  
                       __ptext20 037E                         __ptext12 0557                         __ptext21 0375  
                       __ptext13 03DE                         __ptext30 04F2                         __ptext22 0512  
                       __ptext14 043D                         __ptext31 04D2                         __ptext23 03B2  
                       __ptext15 03BF                         __ptext24 05DE                         __ptext16 0618  
                       __ptext25 03CD                         __ptext17 0581                         __ptext26 06C0  
                       __ptext18 039C                         __ptext27 077F                         __ptext19 0391  
                       __ptext28 0459                         __ptext29 0387                       strcpy@from 0070  
                       _init_i2c 05AC                         _init_adc 0366                         _read_adc 03DE  
        read_digital_keypad@mode 0071          read_digital_keypad@once 0031            ??_init_digital_keypad 0070  
                       init_ram0 0419                      ??_init_clcd 0076                 ___lldiv@dividend 0074  
              displayevent@event 0076                        stringcode 0003             __end_of_write_ds1307 0495  
            _read_digital_keypad 0557                 ___lldiv@quotient 0079                         strcpy@cp 0072  
                       strcpy@to 0071                         stringdir 0003                         stringtab 0003  
           ?_read_digital_keypad 0070                 write_ds1307@addr 0072                 write_ds1307@data 0071  
                  _displayheader 0459  
