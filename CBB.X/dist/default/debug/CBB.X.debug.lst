

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 01 14:07:37 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 22/03/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0014                     	;# 
   105     0015                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001D                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     0087                     	;# 
   122     0088                     	;# 
   123     0089                     	;# 
   124     008C                     	;# 
   125     008D                     	;# 
   126     008E                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     018C                     	;# 
   202     018D                     	;# 
   203     0000                     	;# 
   204     0001                     	;# 
   205     0002                     	;# 
   206     0003                     	;# 
   207     0004                     	;# 
   208     0005                     	;# 
   209     0006                     	;# 
   210     0007                     	;# 
   211     0008                     	;# 
   212     0009                     	;# 
   213     000A                     	;# 
   214     000B                     	;# 
   215     000C                     	;# 
   216     000D                     	;# 
   217     000E                     	;# 
   218     000E                     	;# 
   219     000F                     	;# 
   220     0010                     	;# 
   221     0011                     	;# 
   222     0012                     	;# 
   223     0013                     	;# 
   224     0014                     	;# 
   225     0015                     	;# 
   226     0015                     	;# 
   227     0016                     	;# 
   228     0017                     	;# 
   229     0018                     	;# 
   230     0019                     	;# 
   231     001A                     	;# 
   232     001B                     	;# 
   233     001B                     	;# 
   234     001C                     	;# 
   235     001D                     	;# 
   236     001E                     	;# 
   237     001F                     	;# 
   238     0081                     	;# 
   239     0085                     	;# 
   240     0086                     	;# 
   241     0087                     	;# 
   242     0088                     	;# 
   243     0089                     	;# 
   244     008C                     	;# 
   245     008D                     	;# 
   246     008E                     	;# 
   247     0091                     	;# 
   248     0092                     	;# 
   249     0093                     	;# 
   250     0094                     	;# 
   251     0098                     	;# 
   252     0099                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     009F                     	;# 
   257     010C                     	;# 
   258     010D                     	;# 
   259     010E                     	;# 
   260     010F                     	;# 
   261     018C                     	;# 
   262     018D                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000D                     	;# 
   277     000E                     	;# 
   278     000E                     	;# 
   279     000F                     	;# 
   280     0010                     	;# 
   281     0011                     	;# 
   282     0012                     	;# 
   283     0013                     	;# 
   284     0014                     	;# 
   285     0015                     	;# 
   286     0015                     	;# 
   287     0016                     	;# 
   288     0017                     	;# 
   289     0018                     	;# 
   290     0019                     	;# 
   291     001A                     	;# 
   292     001B                     	;# 
   293     001B                     	;# 
   294     001C                     	;# 
   295     001D                     	;# 
   296     001E                     	;# 
   297     001F                     	;# 
   298     0081                     	;# 
   299     0085                     	;# 
   300     0086                     	;# 
   301     0087                     	;# 
   302     0088                     	;# 
   303     0089                     	;# 
   304     008C                     	;# 
   305     008D                     	;# 
   306     008E                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0098                     	;# 
   312     0099                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     009F                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     010F                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0000                     	;# 
   324     0001                     	;# 
   325     0002                     	;# 
   326     0003                     	;# 
   327     0004                     	;# 
   328     0005                     	;# 
   329     0006                     	;# 
   330     0007                     	;# 
   331     0008                     	;# 
   332     0009                     	;# 
   333     000A                     	;# 
   334     000B                     	;# 
   335     000C                     	;# 
   336     000D                     	;# 
   337     000E                     	;# 
   338     000E                     	;# 
   339     000F                     	;# 
   340     0010                     	;# 
   341     0011                     	;# 
   342     0012                     	;# 
   343     0013                     	;# 
   344     0014                     	;# 
   345     0015                     	;# 
   346     0015                     	;# 
   347     0016                     	;# 
   348     0017                     	;# 
   349     0018                     	;# 
   350     0019                     	;# 
   351     001A                     	;# 
   352     001B                     	;# 
   353     001B                     	;# 
   354     001C                     	;# 
   355     001D                     	;# 
   356     001E                     	;# 
   357     001F                     	;# 
   358     0081                     	;# 
   359     0085                     	;# 
   360     0086                     	;# 
   361     0087                     	;# 
   362     0088                     	;# 
   363     0089                     	;# 
   364     008C                     	;# 
   365     008D                     	;# 
   366     008E                     	;# 
   367     0091                     	;# 
   368     0092                     	;# 
   369     0093                     	;# 
   370     0094                     	;# 
   371     0098                     	;# 
   372     0099                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0000                     	;# 
   384     0001                     	;# 
   385     0002                     	;# 
   386     0003                     	;# 
   387     0004                     	;# 
   388     0005                     	;# 
   389     0006                     	;# 
   390     0007                     	;# 
   391     0008                     	;# 
   392     0009                     	;# 
   393     000A                     	;# 
   394     000B                     	;# 
   395     000C                     	;# 
   396     000D                     	;# 
   397     000E                     	;# 
   398     000E                     	;# 
   399     000F                     	;# 
   400     0010                     	;# 
   401     0011                     	;# 
   402     0012                     	;# 
   403     0013                     	;# 
   404     0014                     	;# 
   405     0015                     	;# 
   406     0015                     	;# 
   407     0016                     	;# 
   408     0017                     	;# 
   409     0018                     	;# 
   410     0019                     	;# 
   411     001A                     	;# 
   412     001B                     	;# 
   413     001B                     	;# 
   414     001C                     	;# 
   415     001D                     	;# 
   416     001E                     	;# 
   417     001F                     	;# 
   418     0081                     	;# 
   419     0085                     	;# 
   420     0086                     	;# 
   421     0087                     	;# 
   422     0088                     	;# 
   423     0089                     	;# 
   424     008C                     	;# 
   425     008D                     	;# 
   426     008E                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0094                     	;# 
   431     0098                     	;# 
   432     0099                     	;# 
   433     009C                     	;# 
   434     009D                     	;# 
   435     009E                     	;# 
   436     009F                     	;# 
   437     010C                     	;# 
   438     010D                     	;# 
   439     010E                     	;# 
   440     010F                     	;# 
   441     018C                     	;# 
   442     018D                     	;# 
   443     0000                     	;# 
   444     0001                     	;# 
   445     0002                     	;# 
   446     0003                     	;# 
   447     0004                     	;# 
   448     0005                     	;# 
   449     0006                     	;# 
   450     0007                     	;# 
   451     0008                     	;# 
   452     0009                     	;# 
   453     000A                     	;# 
   454     000B                     	;# 
   455     000C                     	;# 
   456     000D                     	;# 
   457     000E                     	;# 
   458     000E                     	;# 
   459     000F                     	;# 
   460     0010                     	;# 
   461     0011                     	;# 
   462     0012                     	;# 
   463     0013                     	;# 
   464     0014                     	;# 
   465     0015                     	;# 
   466     0015                     	;# 
   467     0016                     	;# 
   468     0017                     	;# 
   469     0018                     	;# 
   470     0019                     	;# 
   471     001A                     	;# 
   472     001B                     	;# 
   473     001B                     	;# 
   474     001C                     	;# 
   475     001D                     	;# 
   476     001E                     	;# 
   477     001F                     	;# 
   478     0081                     	;# 
   479     0085                     	;# 
   480     0086                     	;# 
   481     0087                     	;# 
   482     0088                     	;# 
   483     0089                     	;# 
   484     008C                     	;# 
   485     008D                     	;# 
   486     008E                     	;# 
   487     0091                     	;# 
   488     0092                     	;# 
   489     0093                     	;# 
   490     0094                     	;# 
   491     0098                     	;# 
   492     0099                     	;# 
   493     009C                     	;# 
   494     009D                     	;# 
   495     009E                     	;# 
   496     009F                     	;# 
   497     010C                     	;# 
   498     010D                     	;# 
   499     010E                     	;# 
   500     010F                     	;# 
   501     018C                     	;# 
   502     018D                     	;# 
   503     0000                     	;# 
   504     0001                     	;# 
   505     0002                     	;# 
   506     0003                     	;# 
   507     0004                     	;# 
   508     0005                     	;# 
   509     0006                     	;# 
   510     0007                     	;# 
   511     0008                     	;# 
   512     0009                     	;# 
   513     000A                     	;# 
   514     000B                     	;# 
   515     000C                     	;# 
   516     000D                     	;# 
   517     000E                     	;# 
   518     000E                     	;# 
   519     000F                     	;# 
   520     0010                     	;# 
   521     0011                     	;# 
   522     0012                     	;# 
   523     0013                     	;# 
   524     0014                     	;# 
   525     0015                     	;# 
   526     0015                     	;# 
   527     0016                     	;# 
   528     0017                     	;# 
   529     0018                     	;# 
   530     0019                     	;# 
   531     001A                     	;# 
   532     001B                     	;# 
   533     001B                     	;# 
   534     001C                     	;# 
   535     001D                     	;# 
   536     001E                     	;# 
   537     001F                     	;# 
   538     0081                     	;# 
   539     0085                     	;# 
   540     0086                     	;# 
   541     0087                     	;# 
   542     0088                     	;# 
   543     0089                     	;# 
   544     008C                     	;# 
   545     008D                     	;# 
   546     008E                     	;# 
   547     0091                     	;# 
   548     0092                     	;# 
   549     0093                     	;# 
   550     0094                     	;# 
   551     0098                     	;# 
   552     0099                     	;# 
   553     009C                     	;# 
   554     009D                     	;# 
   555     009E                     	;# 
   556     009F                     	;# 
   557     010C                     	;# 
   558     010D                     	;# 
   559     010E                     	;# 
   560     010F                     	;# 
   561     018C                     	;# 
   562     018D                     	;# 
   563                           
   564                           	psect	idataBANK0
   565     038C                     __pidataBANK0:
   566                           
   567                           ;initializer for displayheader@F1007
   568     038C  3420               	retlw	32
   569     038D  3420               	retlw	32
   570     038E  3454               	retlw	84
   571     038F  3449               	retlw	73
   572     0390  344D               	retlw	77
   573     0391  3445               	retlw	69
   574     0392  3420               	retlw	32
   575     0393  3420               	retlw	32
   576     0394  3420               	retlw	32
   577     0395  3420               	retlw	32
   578     0396  3420               	retlw	32
   579     0397  3445               	retlw	69
   580     0398  3420               	retlw	32
   581     0399  3420               	retlw	32
   582     039A  3453               	retlw	83
   583     039B  3450               	retlw	80
   584     039C  3400               	retlw	0
   585                           
   586                           ;initializer for read_digital_keypad@once
   587     039D  3401               	retlw	1
   588     001E                     _ADRESH	set	30
   589     0013                     _SSPBUF	set	19
   590     0006                     _PORTB	set	6
   591     0008                     _PORTD	set	8
   592     00FA                     _nDONE	set	250
   593     00FA                     _GO	set	250
   594     00F8                     _ADON	set	248
   595     00A5                     _SSPEN	set	165
   596     00A3                     _SSPM3	set	163
   597     0049                     _RE1	set	73
   598     004A                     _RE2	set	74
   599     009E                     _ADRESL	set	158
   600     0091                     _SSPCON2	set	145
   601     0093                     _SSPADD	set	147
   602     0086                     _TRISB	set	134
   603     0088                     _TRISD	set	136
   604     04FF                     _ADFM	set	1279
   605     048E                     _ACKSTAT	set	1166
   606     048C                     _ACKEN	set	1164
   607     048D                     _ACKDT	set	1165
   608     048B                     _RCEN	set	1163
   609     048A                     _PEN	set	1162
   610     0488                     _SEN	set	1160
   611     04A2                     _R_nW	set	1186
   612     0449                     _TRISE1	set	1097
   613     044A                     _TRISE2	set	1098
   614                           
   615                           	psect	strings
   616     0003                     __pstrings:
   617     0003                     stringtab:
   618     0003                     __stringtab:
   619     0003                     stringcode:	
   620                           ;	String table - string pointers are 1 byte each
   621                           
   622     0003                     stringdir:
   623     0003  3000               	movlw	high stringdir
   624     0004  008A               	movwf	10
   625     0005  0804               	movf	4,w
   626     0006  0A84               	incf	4,f
   627     0007  0782               	addwf	2,f
   628     0008                     __stringbase:
   629     0008  3400               	retlw	0
   630     0009                     __end_of__stringtab:
   631     0009                     STR_1:
   632     0009  344F               	retlw	79	;'O'
   633     000A  3446               	retlw	70	;'F'
   634     000B  3400               	retlw	0
   635                           
   636                           	psect	cinit
   637     07E6                     start_initialization:	
   638                           ; #config settings
   639                           
   640     07E6                     __initialization:
   641                           
   642                           ; Initialize objects allocated to BANK0
   643     07E6  1383               	bcf	3,7	;select IRP bank0
   644     07E7  3032               	movlw	low (__pdataBANK0+18)
   645     07E8  00FD               	movwf	btemp+-1
   646     07E9  3003               	movlw	high __pidataBANK0
   647     07EA  00FE               	movwf	btemp
   648     07EB  308C               	movlw	low __pidataBANK0
   649     07EC  00FF               	movwf	btemp+1
   650     07ED  3020               	movlw	low __pdataBANK0
   651     07EE  0084               	movwf	4
   652     07EF  120A  118A  23B5  120A  118A  	fcall	init_ram0
   653                           
   654                           ; Clear objects allocated to BANK0
   655     07F4  3044               	movlw	low __pbssBANK0
   656     07F5  0084               	movwf	4
   657     07F6  3055               	movlw	low (__pbssBANK0+17)
   658     07F7  120A  118A  2309  120A  118A  	fcall	clear_ram0
   659     07FC                     end_of_initialization:	
   660                           ;End of C runtime variable initialization code
   661                           
   662     07FC                     __end_of__initialization:
   663     07FC  0183               	clrf	3
   664     07FD  120A  118A  2C1C   	ljmp	_main	;jump to C main() function
   665                           
   666                           	psect	bssBANK0
   667     0044                     __pbssBANK0:
   668     0044                     _clocktime:
   669     0044                     	ds	3
   670     0047                     _key:
   671     0047                     	ds	1
   672     0048                     _time:
   673     0048                     	ds	9
   674     0051                     _speed:
   675     0051                     	ds	2
   676     0053                     _event:
   677     0053                     	ds	2
   678                           
   679                           	psect	dataBANK0
   680     0020                     __pdataBANK0:
   681     0020                     displayheader@F1007:
   682     0020                     	ds	17
   683     0031                     read_digital_keypad@once:
   684     0031                     	ds	1
   685                           
   686                           	psect	inittext
   687     03B1                     init_fetch0:	
   688                           ;	Called with low address in FSR and high address in W
   689                           
   690     03B1  087E               	movf	btemp,w
   691     03B2  008A               	movwf	10
   692     03B3  087F               	movf	btemp+1,w
   693     03B4  0082               	movwf	2
   694     03B5                     init_ram0:	
   695                           ;Called with:
   696                           ;	high address of idata address in btemp 
   697                           ;	low address of idata address in btemp+1 
   698                           ;	low address of data in FSR
   699                           ;	high address + 1 of data in btemp-1
   700                           
   701     03B5  120A  118A  23B1  120A  118A  	fcall	init_fetch0
   702     03BA  0080               	movwf	0
   703     03BB  0A84               	incf	4,f
   704     03BC  0804               	movf	4,w
   705     03BD  067D               	xorwf	btemp+-1,w
   706     03BE  1903               	btfsc	3,2
   707     03BF  3400               	retlw	0
   708     03C0  0AFF               	incf	btemp+1,f
   709     03C1  1903               	btfsc	3,2
   710     03C2  0AFE               	incf	btemp,f
   711     03C3  2BB5               	goto	init_ram0
   712                           
   713                           	psect	clrtext
   714     0309                     clear_ram0:	
   715                           ;	Called with FSR containing the base address, and
   716                           ;	W with the last address+1
   717                           
   718     0309  0064               	clrwdt	;clear the watchdog before getting into this loop
   719     030A                     clrloop0:
   720     030A  0180               	clrf	0	;clear RAM location pointed to by FSR
   721     030B  0A84               	incf	4,f	;increment pointer
   722     030C  0604               	xorwf	4,w	;XOR with final address
   723     030D  1903               	btfsc	3,2	;have we reached the end yet?
   724     030E  3400               	retlw	0	;all done for this memory range, return
   725     030F  0604               	xorwf	4,w	;XOR again to restore value
   726     0310  2B0A               	goto	clrloop0	;do the next byte
   727                           
   728                           	psect	cstackCOMMON
   729     0070                     __pcstackCOMMON:
   730     0070                     ?_read_ds1307:
   731     0070                     ?_i2c_start:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ??_i2c_start:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ??_i2c_write:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_i2c_rep_start:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ??_i2c_rep_start:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_i2c_read:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ??_i2c_read:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ?_i2c_stop:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ??_i2c_stop:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ?_strcpy:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ?_clcd_write:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_init_display_controller:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?_init_clcd:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ?_init_digital_keypad:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ??_init_digital_keypad:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_read_digital_keypad:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ??_read_digital_keypad:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_init_ds1307:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ?_i2c_wait_for_idle:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ??_i2c_wait_for_idle:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ?_init_adc:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ??_init_adc:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ?_init_config:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_getdata:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     ?_main:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0070                     ?_displayheader:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ?_gettime:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     ?_displaytime:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ?_displayevent:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ?_displayspeed:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ?_i2c_write:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     ?_read_adc:	
   825                           ; 2 bytes @ 0x0
   826                           
   827     0070                     ?___awdiv:	
   828                           ; 2 bytes @ 0x0
   829                           
   830     0070                     ?___awmod:	
   831                           ; 2 bytes @ 0x0
   832                           
   833     0070                     ?___lwdiv:	
   834                           ; 2 bytes @ 0x0
   835                           
   836     0070                     ?___lldiv:	
   837                           ; 2 bytes @ 0x0
   838                           
   839     0070                     clcd_write@mode:	
   840                           ; 4 bytes @ 0x0
   841                           
   842     0070                     i2c_read@ack:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0070                     i2c_write@data:	
   846                           ; 1 bytes @ 0x0
   847                           
   848     0070                     strcpy@from:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     0070                     ___awdiv@divisor:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0070                     ___awmod@divisor:	
   855                           ; 2 bytes @ 0x0
   856                           
   857     0070                     ___lwdiv@divisor:	
   858                           ; 2 bytes @ 0x0
   859                           
   860     0070                     ___lldiv@divisor:	
   861                           ; 2 bytes @ 0x0
   862                           
   863                           
   864                           ; 4 bytes @ 0x0
   865     0070                     	ds	1
   866     0071                     ?_write_ds1307:
   867     0071                     ??_strcpy:	
   868                           ; 1 bytes @ 0x1
   869                           
   870     0071                     ??_clcd_write:	
   871                           ; 1 bytes @ 0x1
   872                           
   873     0071                     read_digital_keypad@mode:	
   874                           ; 1 bytes @ 0x1
   875                           
   876     0071                     write_ds1307@data:	
   877                           ; 1 bytes @ 0x1
   878                           
   879     0071                     i2c_read@data:	
   880                           ; 1 bytes @ 0x1
   881                           
   882     0071                     strcpy@to:	
   883                           ; 1 bytes @ 0x1
   884                           
   885                           
   886                           ; 1 bytes @ 0x1
   887     0071                     	ds	1
   888     0072                     ??_read_ds1307:
   889     0072                     ??_write_ds1307:	
   890                           ; 1 bytes @ 0x2
   891                           
   892     0072                     ??_read_adc:	
   893                           ; 1 bytes @ 0x2
   894                           
   895     0072                     read_ds1307@addr:	
   896                           ; 1 bytes @ 0x2
   897                           
   898     0072                     write_ds1307@addr:	
   899                           ; 1 bytes @ 0x2
   900                           
   901     0072                     strcpy@cp:	
   902                           ; 1 bytes @ 0x2
   903                           
   904     0072                     read_adc@adc_reg_val:	
   905                           ; 1 bytes @ 0x2
   906                           
   907     0072                     ___awdiv@dividend:	
   908                           ; 2 bytes @ 0x2
   909                           
   910     0072                     ___awmod@dividend:	
   911                           ; 2 bytes @ 0x2
   912                           
   913     0072                     ___lwdiv@dividend:	
   914                           ; 2 bytes @ 0x2
   915                           
   916                           
   917                           ; 2 bytes @ 0x2
   918     0072                     	ds	1
   919     0073                     clcd_write@byte:
   920     0073                     read_ds1307@data:	
   921                           ; 1 bytes @ 0x3
   922                           
   923                           
   924                           ; 1 bytes @ 0x3
   925     0073                     	ds	1
   926     0074                     ??_init_display_controller:
   927     0074                     ?_clcd_print:	
   928                           ; 1 bytes @ 0x4
   929                           
   930     0074                     ??_init_ds1307:	
   931                           ; 1 bytes @ 0x4
   932                           
   933     0074                     ??_gettime:	
   934                           ; 1 bytes @ 0x4
   935                           
   936     0074                     ??___awdiv:	
   937                           ; 1 bytes @ 0x4
   938                           
   939     0074                     ??___awmod:	
   940                           ; 1 bytes @ 0x4
   941                           
   942     0074                     ??___lwdiv:	
   943                           ; 1 bytes @ 0x4
   944                           
   945     0074                     clcd_print@addr:	
   946                           ; 1 bytes @ 0x4
   947                           
   948     0074                     init_ds1307@dummy:	
   949                           ; 1 bytes @ 0x4
   950                           
   951     0074                     ___awdiv@counter:	
   952                           ; 1 bytes @ 0x4
   953                           
   954     0074                     ___awmod@counter:	
   955                           ; 1 bytes @ 0x4
   956                           
   957     0074                     ___lwdiv@quotient:	
   958                           ; 1 bytes @ 0x4
   959                           
   960     0074                     ___lldiv@dividend:	
   961                           ; 2 bytes @ 0x4
   962                           
   963                           
   964                           ; 4 bytes @ 0x4
   965     0074                     	ds	1
   966     0075                     ??_clcd_print:
   967     0075                     clcd_print@str:	
   968                           ; 1 bytes @ 0x5
   969                           
   970     0075                     ___awdiv@sign:	
   971                           ; 1 bytes @ 0x5
   972                           
   973     0075                     ___awmod@sign:	
   974                           ; 1 bytes @ 0x5
   975                           
   976                           
   977                           ; 1 bytes @ 0x5
   978     0075                     	ds	1
   979     0076                     ??_init_clcd:
   980     0076                     ??_displayheader:	
   981                           ; 1 bytes @ 0x6
   982                           
   983     0076                     ??_displaytime:	
   984                           ; 1 bytes @ 0x6
   985                           
   986     0076                     ??_displayevent:	
   987                           ; 1 bytes @ 0x6
   988                           
   989     0076                     displayevent@event:	
   990                           ; 1 bytes @ 0x6
   991                           
   992     0076                     ___lwdiv@counter:	
   993                           ; 1 bytes @ 0x6
   994                           
   995     0076                     ___awdiv@quotient:	
   996                           ; 1 bytes @ 0x6
   997                           
   998                           
   999                           ; 2 bytes @ 0x6
  1000     0076                     	ds	1
  1001     0077                     ??_getdata:
  1002                           
  1003                           ; 1 bytes @ 0x7
  1004     0077                     	ds	1
  1005     0078                     ?_clcd_putch:
  1006     0078                     ??___lldiv:	
  1007                           ; 1 bytes @ 0x8
  1008                           
  1009     0078                     clcd_putch@addr:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x8
  1014     0078                     	ds	1
  1015     0079                     ??_clcd_putch:
  1016     0079                     clcd_putch@data:	
  1017                           ; 1 bytes @ 0x9
  1018                           
  1019     0079                     ___lldiv@quotient:	
  1020                           ; 1 bytes @ 0x9
  1021                           
  1022                           
  1023                           ; 4 bytes @ 0x9
  1024     0079                     	ds	1
  1025     007A                     ??_displayspeed:
  1026                           
  1027                           ; 1 bytes @ 0xA
  1028     007A                     	ds	2
  1029     007C                     displayspeed@speed:
  1030                           
  1031                           ; 1 bytes @ 0xC
  1032     007C                     	ds	1
  1033     007D                     ?_display_dashboard:
  1034     007D                     display_dashboard@speed:	
  1035                           ; 1 bytes @ 0xD
  1036                           
  1037     007D                     ___lldiv@counter:	
  1038                           ; 1 bytes @ 0xD
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0xD
  1042     007D                     	ds	1
  1043     007E                     ??_display_dashboard:
  1044     007E                     ??_init_config:	
  1045                           ; 1 bytes @ 0xE
  1046                           
  1047     007E                     ??_main:	
  1048                           ; 1 bytes @ 0xE
  1049                           
  1050                           
  1051                           	psect	cstackBANK0
  1052     0032                     __pcstackBANK0:	
  1053                           ; 1 bytes @ 0xE
  1054                           
  1055     0032                     ?_init_i2c:
  1056     0032                     init_i2c@baud:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059     0032                     displayheader@header:	
  1060                           ; 4 bytes @ 0x0
  1061                           
  1062                           
  1063                           ; 17 bytes @ 0x0
  1064     0032                     	ds	4
  1065     0036                     ??_init_i2c:
  1066                           
  1067                           ; 1 bytes @ 0x4
  1068     0036                     	ds	13
  1069     0043                     display_dashboard@event:
  1070                           
  1071                           ; 1 bytes @ 0x11
  1072     0043                     	ds	1
  1073                           
  1074                           	psect	maintext
  1075     041C                     __pmaintext:	
  1076 ;;
  1077 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1078 ;;
  1079 ;; *************** function _main *****************
  1080 ;; Defined at:
  1081 ;;		line 41 in file "main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : B00/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels required when called: 7
  1101 ;; This function calls:
  1102 ;;		_display_dashboard
  1103 ;;		_getdata
  1104 ;;		_init_config
  1105 ;;		_strcpy
  1106 ;; This function is called by:
  1107 ;;		Startup code after reset
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111     041C                     _main:	
  1112                           ;psect for function _main
  1113                           
  1114     041C                     l1496:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1117                           
  1118     041C  120A  118A  24BA  120A  118A  	fcall	_init_config
  1119     0421                     l1498:
  1120     0421  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1121     0422  00F0               	movwf	strcpy@from
  1122     0423  3053               	movlw	(low (_event| 0))& (0+255)
  1123     0424  120A  118A  243A  120A  118A  	fcall	_strcpy
  1124     0429                     l1500:
  1125     0429  120A  118A  2565  120A  118A  	fcall	_getdata
  1126     042E  3051               	movlw	(low (_speed| 0))& (0+255)
  1127     042F  00FD               	movwf	display_dashboard@speed
  1128     0430  3053               	movlw	(low (_event| 0))& (0+255)
  1129     0431  120A  118A  23C4  120A  118A  	fcall	_display_dashboard
  1130     0436  2C29               	goto	l1500
  1131     0437  120A  118A  2800   	ljmp	start
  1132     043A                     __end_of_main:
  1133                           
  1134                           	psect	text1
  1135     043A                     __ptext1:	
  1136 ;; *************** function _strcpy *****************
  1137 ;; Defined at:
  1138 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcpy.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  to              1    wreg     PTR unsigned char 
  1141 ;;		 -> event(2), 
  1142 ;;  from            1    0[COMMON] PTR const unsigned char 
  1143 ;;		 -> STR_1(3), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  to              1    1[COMMON] PTR unsigned char 
  1146 ;;		 -> event(2), 
  1147 ;;  cp              1    2[COMMON] PTR unsigned char 
  1148 ;;		 -> event(2), 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      PTR unsigned char 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         1       0       0       0       0
  1159 ;;      Locals:         2       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         3       0       0       0       0
  1162 ;;Total ram usage:        3 bytes
  1163 ;; Hardware stack levels used: 2
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171     043A                     _strcpy:	
  1172                           ;psect for function _strcpy
  1173                           
  1174                           
  1175                           ;incstack = 0
  1176                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1177                           ;strcpy@to stored from wreg
  1178     043A  00F1               	movwf	strcpy@to
  1179     043B                     l1488:
  1180     043B  0871               	movf	strcpy@to,w
  1181     043C  00F2               	movwf	strcpy@cp
  1182     043D  2C46               	goto	l1492
  1183     043E                     l1490:
  1184     043E  3001               	movlw	1
  1185     043F  00FF               	movwf	btemp+1
  1186     0440  087F               	movf	btemp+1,w
  1187     0441  07F2               	addwf	strcpy@cp,f
  1188     0442  3001               	movlw	1
  1189     0443  00FF               	movwf	btemp+1
  1190     0444  087F               	movf	btemp+1,w
  1191     0445  07F0               	addwf	strcpy@from,f
  1192     0446                     l1492:
  1193     0446  0870               	movf	strcpy@from,w
  1194     0447  0084               	movwf	4
  1195     0448  120A  118A  2003  120A  118A  	fcall	stringdir
  1196     044D  00FF               	movwf	btemp+1
  1197     044E  0872               	movf	strcpy@cp,w
  1198     044F  0084               	movwf	4
  1199     0450  087F               	movf	btemp+1,w
  1200     0451  1383               	bcf	3,7	;select IRP bank0
  1201     0452  0080               	movwf	0
  1202     0453  0800               	movf	0,w
  1203     0454  1D03               	btfss	3,2
  1204     0455  2C57               	goto	u1021
  1205     0456  2C58               	goto	u1020
  1206     0457                     u1021:
  1207     0457  2C3E               	goto	l1490
  1208     0458                     u1020:
  1209     0458                     l764:
  1210     0458  0008               	return
  1211     0459                     __end_of_strcpy:
  1212                           
  1213                           	psect	text2
  1214     04BA                     __ptext2:	
  1215 ;; *************** function _init_config *****************
  1216 ;; Defined at:
  1217 ;;		line 14 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 5
  1238 ;; This function calls:
  1239 ;;		_init_adc
  1240 ;;		_init_clcd
  1241 ;;		_init_digital_keypad
  1242 ;;		_init_ds1307
  1243 ;;		_init_i2c
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249     04BA                     _init_config:	
  1250                           ;psect for function _init_config
  1251                           
  1252     04BA                     l1468:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _init_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1255                           
  1256                           
  1257                           ;main.c: 16:     speed = speed/10;
  1258     04BA  120A  118A  2302  120A  118A  	fcall	_init_adc
  1259     04BF                     l1470:
  1260                           
  1261                           ;main.c: 17:     if(speed > 99)
  1262     04BF  120A  118A  2343  120A  118A  	fcall	_init_clcd
  1263     04C4                     l1472:
  1264                           
  1265                           ;main.c: 18:     {
  1266     04C4  120A  118A  22FC  120A  118A  	fcall	_init_digital_keypad
  1267     04C9                     l1474:
  1268                           
  1269                           ;main.c: 20:     }
  1270     04C9  3000               	movlw	0
  1271     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1272     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1273     04CC  00B5               	movwf	init_i2c@baud+3
  1274     04CD  3001               	movlw	1
  1275     04CE  00B4               	movwf	init_i2c@baud+2
  1276     04CF  3086               	movlw	134
  1277     04D0  00B3               	movwf	init_i2c@baud+1
  1278     04D1  30A0               	movlw	160
  1279     04D2  00B2               	movwf	init_i2c@baud
  1280     04D3  120A  118A  2533  120A  118A  	fcall	_init_i2c
  1281     04D8                     l1476:
  1282                           
  1283                           ;main.c: 24: 
  1284     04D8  120A  118A  239E  120A  118A  	fcall	_init_ds1307
  1285     04DD                     l176:
  1286     04DD  0008               	return
  1287     04DE                     __end_of_init_config:
  1288                           
  1289                           	psect	text3
  1290     0533                     __ptext3:	
  1291 ;; *************** function _init_i2c *****************
  1292 ;; Defined at:
  1293 ;;		line 4 in file "i2c.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  baud            4    0[BANK0 ] unsigned long 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       4       0       0       0
  1308 ;;      Locals:         0       0       0       0       0
  1309 ;;      Temps:          0       4       0       0       0
  1310 ;;      Totals:         0       8       0       0       0
  1311 ;;Total ram usage:        8 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 1
  1314 ;; This function calls:
  1315 ;;		___lldiv
  1316 ;; This function is called by:
  1317 ;;		_init_config
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321     0533                     _init_i2c:	
  1322                           ;psect for function _init_i2c
  1323                           
  1324     0533                     l1416:	
  1325                           ;incstack = 0
  1326                           ; Regs used in _init_i2c: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1327                           
  1328                           
  1329                           ;i2c.c: 4: void init_i2c(unsigned long baud);i2c.c: 5: {;i2c.c: 7:     SSPM3 = 1;
  1330     0533  1283               	bcf	3,5	;RP0=0, select bank0
  1331     0534  1303               	bcf	3,6	;RP1=0, select bank0
  1332     0535  1594               	bsf	20,3	;volatile
  1333     0536                     l1418:
  1334                           
  1335                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
  1336     0536  0832               	movf	init_i2c@baud,w
  1337     0537  00B6               	movwf	??_init_i2c
  1338     0538  0833               	movf	init_i2c@baud+1,w
  1339     0539  00B7               	movwf	??_init_i2c+1
  1340     053A  0834               	movf	init_i2c@baud+2,w
  1341     053B  00B8               	movwf	??_init_i2c+2
  1342     053C  0835               	movf	init_i2c@baud+3,w
  1343     053D  00B9               	movwf	??_init_i2c+3
  1344     053E  3002               	movlw	2
  1345     053F                     u915:
  1346     053F  1003               	clrc
  1347     0540  0DB6               	rlf	??_init_i2c,f
  1348     0541  0DB7               	rlf	??_init_i2c+1,f
  1349     0542  0DB8               	rlf	??_init_i2c+2,f
  1350     0543  0DB9               	rlf	??_init_i2c+3,f
  1351     0544                     u910:
  1352     0544  3EFF               	addlw	-1
  1353     0545  1D03               	skipz
  1354     0546  2D3F               	goto	u915
  1355     0547  0839               	movf	??_init_i2c+3,w
  1356     0548  00F3               	movwf	___lldiv@divisor+3
  1357     0549  0838               	movf	??_init_i2c+2,w
  1358     054A  00F2               	movwf	___lldiv@divisor+2
  1359     054B  0837               	movf	??_init_i2c+1,w
  1360     054C  00F1               	movwf	___lldiv@divisor+1
  1361     054D  0836               	movf	??_init_i2c,w
  1362     054E  00F0               	movwf	___lldiv@divisor
  1363     054F  3001               	movlw	1
  1364     0550  00F7               	movwf	___lldiv@dividend+3
  1365     0551  3031               	movlw	49
  1366     0552  00F6               	movwf	___lldiv@dividend+2
  1367     0553  302D               	movlw	45
  1368     0554  00F5               	movwf	___lldiv@dividend+1
  1369     0555  3000               	movlw	0
  1370     0556  00F4               	movwf	___lldiv@dividend
  1371     0557  120A  118A  2719  120A  118A  	fcall	___lldiv
  1372     055C  0870               	movf	?___lldiv,w
  1373     055D  3EFF               	addlw	255
  1374     055E  1683               	bsf	3,5	;RP0=1, select bank1
  1375     055F  1303               	bcf	3,6	;RP1=0, select bank1
  1376     0560  0093               	movwf	19	;volatile
  1377     0561                     l1420:
  1378                           
  1379                           ;i2c.c: 13:     SSPEN = 1;
  1380     0561  1283               	bcf	3,5	;RP0=0, select bank0
  1381     0562  1303               	bcf	3,6	;RP1=0, select bank0
  1382     0563  1694               	bsf	20,5	;volatile
  1383     0564                     l101:
  1384     0564  0008               	return
  1385     0565                     __end_of_init_i2c:
  1386                           
  1387                           	psect	text4
  1388     0719                     __ptext4:	
  1389 ;; *************** function ___lldiv *****************
  1390 ;; Defined at:
  1391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  divisor         4    0[COMMON] unsigned long 
  1394 ;;  dividend        4    4[COMMON] unsigned long 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  quotient        4    9[COMMON] unsigned long 
  1397 ;;  counter         1   13[COMMON] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  4    0[COMMON] unsigned long 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, btemp+1
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         8       0       0       0       0
  1408 ;;      Locals:         5       0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0
  1410 ;;      Totals:        14       0       0       0       0
  1411 ;;Total ram usage:       14 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_init_i2c
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420     0719                     ___lldiv:	
  1421                           ;psect for function ___lldiv
  1422                           
  1423     0719                     l1264:	
  1424                           ;incstack = 0
  1425                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1426                           
  1427     0719  3000               	movlw	0
  1428     071A  00FC               	movwf	___lldiv@quotient+3
  1429     071B  3000               	movlw	0
  1430     071C  00FB               	movwf	___lldiv@quotient+2
  1431     071D  3000               	movlw	0
  1432     071E  00FA               	movwf	___lldiv@quotient+1
  1433     071F  3000               	movlw	0
  1434     0720  00F9               	movwf	___lldiv@quotient
  1435     0721  0873               	movf	___lldiv@divisor+3,w
  1436     0722  0472               	iorwf	___lldiv@divisor+2,w
  1437     0723  0471               	iorwf	___lldiv@divisor+1,w
  1438     0724  0470               	iorwf	___lldiv@divisor,w
  1439     0725  1903               	skipnz
  1440     0726  2F28               	goto	u611
  1441     0727  2F29               	goto	u610
  1442     0728                     u611:
  1443     0728  2F76               	goto	l1286
  1444     0729                     u610:
  1445     0729                     l1266:
  1446     0729  01FD               	clrf	___lldiv@counter
  1447     072A  0AFD               	incf	___lldiv@counter,f
  1448     072B  2F39               	goto	l1272
  1449     072C                     l1268:
  1450     072C  3001               	movlw	1
  1451     072D  00F8               	movwf	??___lldiv
  1452     072E                     u625:
  1453     072E  1003               	clrc
  1454     072F  0DF0               	rlf	___lldiv@divisor,f
  1455     0730  0DF1               	rlf	___lldiv@divisor+1,f
  1456     0731  0DF2               	rlf	___lldiv@divisor+2,f
  1457     0732  0DF3               	rlf	___lldiv@divisor+3,f
  1458     0733  0BF8               	decfsz	??___lldiv,f
  1459     0734  2F2E               	goto	u625
  1460     0735                     l1270:
  1461     0735  3001               	movlw	1
  1462     0736  00FF               	movwf	btemp+1
  1463     0737  087F               	movf	btemp+1,w
  1464     0738  07FD               	addwf	___lldiv@counter,f
  1465     0739                     l1272:
  1466     0739  1FF3               	btfss	___lldiv@divisor+3,7
  1467     073A  2F3C               	goto	u631
  1468     073B  2F3D               	goto	u630
  1469     073C                     u631:
  1470     073C  2F2C               	goto	l1268
  1471     073D                     u630:
  1472     073D                     l1274:
  1473     073D  3001               	movlw	1
  1474     073E  00F8               	movwf	??___lldiv
  1475     073F                     u645:
  1476     073F  1003               	clrc
  1477     0740  0DF9               	rlf	___lldiv@quotient,f
  1478     0741  0DFA               	rlf	___lldiv@quotient+1,f
  1479     0742  0DFB               	rlf	___lldiv@quotient+2,f
  1480     0743  0DFC               	rlf	___lldiv@quotient+3,f
  1481     0744  0BF8               	decfsz	??___lldiv,f
  1482     0745  2F3F               	goto	u645
  1483     0746                     l1276:
  1484     0746  0873               	movf	___lldiv@divisor+3,w
  1485     0747  0277               	subwf	___lldiv@dividend+3,w
  1486     0748  1D03               	skipz
  1487     0749  2F54               	goto	u655
  1488     074A  0872               	movf	___lldiv@divisor+2,w
  1489     074B  0276               	subwf	___lldiv@dividend+2,w
  1490     074C  1D03               	skipz
  1491     074D  2F54               	goto	u655
  1492     074E  0871               	movf	___lldiv@divisor+1,w
  1493     074F  0275               	subwf	___lldiv@dividend+1,w
  1494     0750  1D03               	skipz
  1495     0751  2F54               	goto	u655
  1496     0752  0870               	movf	___lldiv@divisor,w
  1497     0753  0274               	subwf	___lldiv@dividend,w
  1498     0754                     u655:
  1499     0754  1C03               	skipc
  1500     0755  2F57               	goto	u651
  1501     0756  2F58               	goto	u650
  1502     0757                     u651:
  1503     0757  2F67               	goto	l1282
  1504     0758                     u650:
  1505     0758                     l1278:
  1506     0758  0870               	movf	___lldiv@divisor,w
  1507     0759  02F4               	subwf	___lldiv@dividend,f
  1508     075A  0871               	movf	___lldiv@divisor+1,w
  1509     075B  1C03               	skipc
  1510     075C  0F71               	incfsz	___lldiv@divisor+1,w
  1511     075D  02F5               	subwf	___lldiv@dividend+1,f
  1512     075E  0872               	movf	___lldiv@divisor+2,w
  1513     075F  1C03               	skipc
  1514     0760  0F72               	incfsz	___lldiv@divisor+2,w
  1515     0761  02F6               	subwf	___lldiv@dividend+2,f
  1516     0762  0873               	movf	___lldiv@divisor+3,w
  1517     0763  1C03               	skipc
  1518     0764  0F73               	incfsz	___lldiv@divisor+3,w
  1519     0765  02F7               	subwf	___lldiv@dividend+3,f
  1520     0766                     l1280:
  1521     0766  1479               	bsf	___lldiv@quotient,0
  1522     0767                     l1282:
  1523     0767  3001               	movlw	1
  1524     0768                     u665:
  1525     0768  1003               	clrc
  1526     0769  0CF3               	rrf	___lldiv@divisor+3,f
  1527     076A  0CF2               	rrf	___lldiv@divisor+2,f
  1528     076B  0CF1               	rrf	___lldiv@divisor+1,f
  1529     076C  0CF0               	rrf	___lldiv@divisor,f
  1530     076D  3EFF               	addlw	-1
  1531     076E  1D03               	skipz
  1532     076F  2F68               	goto	u665
  1533     0770                     l1284:
  1534     0770  3001               	movlw	1
  1535     0771  02FD               	subwf	___lldiv@counter,f
  1536     0772  1D03               	btfss	3,2
  1537     0773  2F75               	goto	u671
  1538     0774  2F76               	goto	u670
  1539     0775                     u671:
  1540     0775  2F3D               	goto	l1274
  1541     0776                     u670:
  1542     0776                     l1286:
  1543     0776  087C               	movf	___lldiv@quotient+3,w
  1544     0777  00F3               	movwf	?___lldiv+3
  1545     0778  087B               	movf	___lldiv@quotient+2,w
  1546     0779  00F2               	movwf	?___lldiv+2
  1547     077A  087A               	movf	___lldiv@quotient+1,w
  1548     077B  00F1               	movwf	?___lldiv+1
  1549     077C  0879               	movf	___lldiv@quotient,w
  1550     077D  00F0               	movwf	?___lldiv
  1551     077E                     l346:
  1552     077E  0008               	return
  1553     077F                     __end_of___lldiv:
  1554                           
  1555                           	psect	text5
  1556     039E                     __ptext5:	
  1557 ;; *************** function _init_ds1307 *****************
  1558 ;; Defined at:
  1559 ;;		line 5 in file "ds1307.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  dummy           1    4[COMMON] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         1       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0
  1576 ;;      Totals:         1       0       0       0       0
  1577 ;;Total ram usage:        1 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 4
  1580 ;; This function calls:
  1581 ;;		_read_ds1307
  1582 ;;		_write_ds1307
  1583 ;; This function is called by:
  1584 ;;		_init_config
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588     039E                     _init_ds1307:	
  1589                           ;psect for function _init_ds1307
  1590                           
  1591     039E                     l1410:	
  1592                           ;incstack = 0
  1593                           ; Regs used in _init_ds1307: [wreg+status,2+status,0+pclath+cstack]
  1594                           
  1595                           
  1596                           ;ds1307.c: 7:     unsigned char dummy;;ds1307.c: 9:     dummy = read_ds1307(0x00);
  1597     039E  3000               	movlw	0
  1598     039F  120A  118A  2508  120A  118A  	fcall	_read_ds1307
  1599     03A4  00F4               	movwf	init_ds1307@dummy
  1600     03A5                     l1412:
  1601                           
  1602                           ;ds1307.c: 10:     dummy = dummy & 0x7F;
  1603     03A5  0874               	movf	init_ds1307@dummy,w
  1604     03A6  397F               	andlw	127
  1605     03A7  00F4               	movwf	init_ds1307@dummy
  1606     03A8                     l1414:
  1607                           
  1608                           ;ds1307.c: 11:     write_ds1307(0x00, dummy);
  1609     03A8  0874               	movf	init_ds1307@dummy,w
  1610     03A9  00F1               	movwf	write_ds1307@data
  1611     03AA  3000               	movlw	0
  1612     03AB  120A  118A  23FE  120A  118A  	fcall	_write_ds1307
  1613     03B0                     l66:
  1614     03B0  0008               	return
  1615     03B1                     __end_of_init_ds1307:
  1616                           
  1617                           	psect	text6
  1618     03FE                     __ptext6:	
  1619 ;; *************** function _write_ds1307 *****************
  1620 ;; Defined at:
  1621 ;;		line 29 in file "ds1307.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  addr            1    wreg     unsigned char 
  1624 ;;  data            1    1[COMMON] unsigned char 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  addr            1    2[COMMON] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, pclath, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         1       0       0       0       0
  1637 ;;      Locals:         1       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0
  1639 ;;      Totals:         2       0       0       0       0
  1640 ;;Total ram usage:        2 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 2
  1643 ;; This function calls:
  1644 ;;		_i2c_start
  1645 ;;		_i2c_stop
  1646 ;;		_i2c_write
  1647 ;; This function is called by:
  1648 ;;		_init_ds1307
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652     03FE                     _write_ds1307:	
  1653                           ;psect for function _write_ds1307
  1654                           
  1655                           
  1656                           ;incstack = 0
  1657                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  1658                           ;write_ds1307@addr stored from wreg
  1659     03FE  00F2               	movwf	write_ds1307@addr
  1660     03FF                     l1242:
  1661                           
  1662                           ;ds1307.c: 29: void write_ds1307(unsigned char addr, unsigned char data);ds1307.c: 30: {
      +                          ;ds1307.c: 31:     i2c_start();
  1663     03FF  120A  118A  2311  120A  118A  	fcall	_i2c_start
  1664                           
  1665                           ;ds1307.c: 32:     i2c_write(0b11010000);
  1666     0404  30D0               	movlw	208
  1667     0405  120A  118A  2338  120A  118A  	fcall	_i2c_write
  1668                           
  1669                           ;ds1307.c: 33:     i2c_write(addr);
  1670     040A  0872               	movf	write_ds1307@addr,w
  1671     040B  120A  118A  2338  120A  118A  	fcall	_i2c_write
  1672                           
  1673                           ;ds1307.c: 34:     i2c_write(data);
  1674     0410  0871               	movf	write_ds1307@data,w
  1675     0411  120A  118A  2338  120A  118A  	fcall	_i2c_write
  1676                           
  1677                           ;ds1307.c: 35:     i2c_stop();
  1678     0416  120A  118A  231A  120A  118A  	fcall	_i2c_stop
  1679     041B                     l72:
  1680     041B  0008               	return
  1681     041C                     __end_of_write_ds1307:
  1682                           
  1683                           	psect	text7
  1684     02FC                     __ptext7:	
  1685 ;; *************** function _init_digital_keypad *****************
  1686 ;; Defined at:
  1687 ;;		line 4 in file "digital_keypad.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_init_config
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     02FC                     _init_digital_keypad:	
  1715                           ;psect for function _init_digital_keypad
  1716                           
  1717     02FC                     l1380:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1720                           
  1721                           
  1722                           ;digital_keypad.c: 7:     TRISB = TRISB | 0x3F;
  1723     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  1724     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  1725     02FE  0806               	movf	6,w	;volatile
  1726     02FF  383F               	iorlw	63
  1727     0300  0086               	movwf	6	;volatile
  1728     0301                     l39:
  1729     0301  0008               	return
  1730     0302                     __end_of_init_digital_keypad:
  1731                           
  1732                           	psect	text8
  1733     0343                     __ptext8:	
  1734 ;; *************** function _init_clcd *****************
  1735 ;; Defined at:
  1736 ;;		line 37 in file "clcd.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0
  1753 ;;      Totals:         0       0       0       0       0
  1754 ;;Total ram usage:        0 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 2
  1757 ;; This function calls:
  1758 ;;		_init_display_controller
  1759 ;; This function is called by:
  1760 ;;		_init_config
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764     0343                     _init_clcd:	
  1765                           ;psect for function _init_clcd
  1766                           
  1767     0343                     l1372:	
  1768                           ;incstack = 0
  1769                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1770                           
  1771                           
  1772                           ;clcd.c: 40:     TRISD = 0x00;
  1773     0343  1683               	bsf	3,5	;RP0=1, select bank1
  1774     0344  1303               	bcf	3,6	;RP1=0, select bank1
  1775     0345  0188               	clrf	8	;volatile
  1776     0346                     l1374:
  1777                           
  1778                           ;clcd.c: 43:     TRISE2 = 0;
  1779     0346  1109               	bcf	9,2	;volatile
  1780     0347                     l1376:
  1781                           
  1782                           ;clcd.c: 44:     TRISE1 = 0;
  1783     0347  1089               	bcf	9,1	;volatile
  1784     0348                     l1378:
  1785                           
  1786                           ;clcd.c: 46:     init_display_controller();
  1787     0348  120A  118A  2669  120A  118A  	fcall	_init_display_controller
  1788     034D                     l23:
  1789     034D  0008               	return
  1790     034E                     __end_of_init_clcd:
  1791                           
  1792                           	psect	text9
  1793     0669                     __ptext9:	
  1794 ;; *************** function _init_display_controller *****************
  1795 ;; Defined at:
  1796 ;;		line 16 in file "clcd.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0
  1812 ;;      Temps:          2       0       0       0       0
  1813 ;;      Totals:         2       0       0       0       0
  1814 ;;Total ram usage:        2 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; Hardware stack levels required when called: 1
  1817 ;; This function calls:
  1818 ;;		_clcd_write
  1819 ;; This function is called by:
  1820 ;;		_init_clcd
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824     0669                     _init_display_controller:	
  1825                           ;psect for function _init_display_controller
  1826                           
  1827     0669                     l1212:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1830                           
  1831                           
  1832                           ;clcd.c: 19:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1833     0669  30C3               	movlw	195
  1834     066A  00F5               	movwf	??_init_display_controller+1
  1835     066B  30CD               	movlw	205
  1836     066C  00F4               	movwf	??_init_display_controller
  1837     066D                     u1037:
  1838     066D  0BF4               	decfsz	??_init_display_controller,f
  1839     066E  2E6D               	goto	u1037
  1840     066F  0BF5               	decfsz	??_init_display_controller+1,f
  1841     0670  2E6D               	goto	u1037
  1842     0671                     l1214:
  1843                           
  1844                           ;clcd.c: 22:     clcd_write(0x33, 0);
  1845     0671  01F0               	clrf	clcd_write@mode
  1846     0672  3033               	movlw	51
  1847     0673  120A  118A  2459  120A  118A  	fcall	_clcd_write
  1848     0678                     l1216:
  1849                           
  1850                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1851     0678  301B               	movlw	27
  1852     0679  00F5               	movwf	??_init_display_controller+1
  1853     067A  309E               	movlw	158
  1854     067B  00F4               	movwf	??_init_display_controller
  1855     067C                     u1047:
  1856     067C  0BF4               	decfsz	??_init_display_controller,f
  1857     067D  2E7C               	goto	u1047
  1858     067E  0BF5               	decfsz	??_init_display_controller+1,f
  1859     067F  2E7C               	goto	u1047
  1860     0680  0000               	nop
  1861                           
  1862                           ;clcd.c: 24:     clcd_write(0x33, 0);
  1863     0681  01F0               	clrf	clcd_write@mode
  1864     0682  3033               	movlw	51
  1865     0683  120A  118A  2459  120A  118A  	fcall	_clcd_write
  1866     0688                     l1218:
  1867                           
  1868                           ;clcd.c: 25:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1869     0688  30A6               	movlw	166
  1870     0689  00F4               	movwf	??_init_display_controller
  1871     068A                     u1057:
  1872     068A  0BF4               	decfsz	??_init_display_controller,f
  1873     068B  2E8A               	goto	u1057
  1874     068C  0000               	nop
  1875     068D                     l1220:
  1876                           
  1877                           ;clcd.c: 26:     clcd_write(0x33, 0);
  1878     068D  01F0               	clrf	clcd_write@mode
  1879     068E  3033               	movlw	51
  1880     068F  120A  118A  2459  120A  118A  	fcall	_clcd_write
  1881     0694                     l1222:
  1882                           
  1883                           ;clcd.c: 27:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1884     0694  2E95               	nop2	;2 cycle nop
  1885     0695  2E96               	nop2	;2 cycle nop
  1886     0696  0000               	nop
  1887     0697                     l1224:
  1888                           
  1889                           ;clcd.c: 29:     clcd_write(0x38, 0);
  1890     0697  01F0               	clrf	clcd_write@mode
  1891     0698  3038               	movlw	56
  1892     0699  120A  118A  2459  120A  118A  	fcall	_clcd_write
  1893     069E                     l1226:
  1894                           
  1895                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1896     069E  30A6               	movlw	166
  1897     069F  00F4               	movwf	??_init_display_controller
  1898     06A0                     u1067:
  1899     06A0  0BF4               	decfsz	??_init_display_controller,f
  1900     06A1  2EA0               	goto	u1067
  1901     06A2  0000               	nop
  1902                           
  1903                           ;clcd.c: 31:     clcd_write(0x01, 0);
  1904     06A3  01F0               	clrf	clcd_write@mode
  1905     06A4  3001               	movlw	1
  1906     06A5  120A  118A  2459  120A  118A  	fcall	_clcd_write
  1907     06AA                     l1228:
  1908                           
  1909                           ;clcd.c: 32:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1910     06AA  3004               	movlw	4
  1911     06AB  00F5               	movwf	??_init_display_controller+1
  1912     06AC  303D               	movlw	61
  1913     06AD  00F4               	movwf	??_init_display_controller
  1914     06AE                     u1077:
  1915     06AE  0BF4               	decfsz	??_init_display_controller,f
  1916     06AF  2EAE               	goto	u1077
  1917     06B0  0BF5               	decfsz	??_init_display_controller+1,f
  1918     06B1  2EAE               	goto	u1077
  1919     06B2  2EB3               	nop2
  1920     06B3                     l1230:
  1921                           
  1922                           ;clcd.c: 33:     clcd_write(0x0C, 0);
  1923     06B3  01F0               	clrf	clcd_write@mode
  1924     06B4  300C               	movlw	12
  1925     06B5  120A  118A  2459  120A  118A  	fcall	_clcd_write
  1926                           
  1927                           ;clcd.c: 34:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1928     06BA  30A6               	movlw	166
  1929     06BB  00F4               	movwf	??_init_display_controller
  1930     06BC                     u1087:
  1931     06BC  0BF4               	decfsz	??_init_display_controller,f
  1932     06BD  2EBC               	goto	u1087
  1933     06BE  0000               	nop
  1934     06BF                     l20:
  1935     06BF  0008               	return
  1936     06C0                     __end_of_init_display_controller:
  1937                           
  1938                           	psect	text10
  1939     0302                     __ptext10:	
  1940 ;; *************** function _init_adc *****************
  1941 ;; Defined at:
  1942 ;;		line 3 in file "adc.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		None
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_init_config
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969     0302                     _init_adc:	
  1970                           ;psect for function _init_adc
  1971                           
  1972     0302                     l1422:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _init_adc: []
  1975                           
  1976                           
  1977                           ;adc.c: 6:     ADFM = 1;
  1978     0302  1683               	bsf	3,5	;RP0=1, select bank1
  1979     0303  1303               	bcf	3,6	;RP1=0, select bank1
  1980     0304  179F               	bsf	31,7	;volatile
  1981                           
  1982                           ;adc.c: 9:     ADON = 1;
  1983     0305  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0306  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0307  141F               	bsf	31,0	;volatile
  1986     0308                     l139:
  1987     0308  0008               	return
  1988     0309                     __end_of_init_adc:
  1989                           
  1990                           	psect	text11
  1991     0565                     __ptext11:	
  1992 ;; *************** function _getdata *****************
  1993 ;; Defined at:
  1994 ;;		line 27 in file "main.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0
  2011 ;;      Totals:         0       0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 1
  2015 ;; This function calls:
  2016 ;;		___lwdiv
  2017 ;;		_read_adc
  2018 ;;		_read_digital_keypad
  2019 ;; This function is called by:
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024     0565                     _getdata:	
  2025                           ;psect for function _getdata
  2026                           
  2027     0565                     l1478:	
  2028                           ;incstack = 0
  2029                           ; Regs used in _getdata: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2030                           
  2031                           
  2032                           ;main.c: 29: 
  2033     0565  120A  118A  237A  120A  118A  	fcall	_read_adc
  2034     056A  0871               	movf	?_read_adc+1,w
  2035     056B  1283               	bcf	3,5	;RP0=0, select bank0
  2036     056C  1303               	bcf	3,6	;RP1=0, select bank0
  2037     056D  00D2               	movwf	_speed+1
  2038     056E  0870               	movf	?_read_adc,w
  2039     056F  00D1               	movwf	_speed
  2040     0570                     l1480:
  2041                           
  2042                           ;main.c: 30: 
  2043     0570  300A               	movlw	10
  2044     0571  00F0               	movwf	___lwdiv@divisor
  2045     0572  3000               	movlw	0
  2046     0573  00F1               	movwf	___lwdiv@divisor+1
  2047     0574  0852               	movf	_speed+1,w
  2048     0575  00F3               	movwf	___lwdiv@dividend+1
  2049     0576  0851               	movf	_speed,w
  2050     0577  00F2               	movwf	___lwdiv@dividend
  2051     0578  120A  118A  25D4  120A  118A  	fcall	___lwdiv
  2052     057D  0871               	movf	?___lwdiv+1,w
  2053     057E  1283               	bcf	3,5	;RP0=0, select bank0
  2054     057F  1303               	bcf	3,6	;RP1=0, select bank0
  2055     0580  00D2               	movwf	_speed+1
  2056     0581  0870               	movf	?___lwdiv,w
  2057     0582  00D1               	movwf	_speed
  2058     0583                     l1482:
  2059                           
  2060                           ;main.c: 31:     strcpy(event, "OF");
  2061     0583  3000               	movlw	0
  2062     0584  0252               	subwf	_speed+1,w
  2063     0585  3064               	movlw	100
  2064     0586  1903               	skipnz
  2065     0587  0251               	subwf	_speed,w
  2066     0588  1C03               	skipc
  2067     0589  2D8B               	goto	u1011
  2068     058A  2D8C               	goto	u1010
  2069     058B                     u1011:
  2070     058B  2D90               	goto	l1486
  2071     058C                     u1010:
  2072     058C                     l1484:
  2073                           
  2074                           ;main.c: 32: ;main.c: 33:     while (1) {
  2075     058C  3063               	movlw	99
  2076     058D  00D1               	movwf	_speed
  2077     058E  3000               	movlw	0
  2078     058F  00D2               	movwf	_speed+1
  2079     0590                     l1486:
  2080                           
  2081                           ;main.c: 36: 
  2082     0590  3001               	movlw	1
  2083     0591  120A  118A  24DE  120A  118A  	fcall	_read_digital_keypad
  2084     0596  1283               	bcf	3,5	;RP0=0, select bank0
  2085     0597  1303               	bcf	3,6	;RP1=0, select bank0
  2086     0598  00C7               	movwf	_key
  2087     0599                     l180:
  2088     0599  0008               	return
  2089     059A                     __end_of_getdata:
  2090                           
  2091                           	psect	text12
  2092     04DE                     __ptext12:	
  2093 ;; *************** function _read_digital_keypad *****************
  2094 ;; Defined at:
  2095 ;;		line 10 in file "digital_keypad.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  mode            1    wreg     unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  mode            1    1[COMMON] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      unsigned char 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2109 ;;      Params:         0       0       0       0       0
  2110 ;;      Locals:         1       0       0       0       0
  2111 ;;      Temps:          1       0       0       0       0
  2112 ;;      Totals:         2       0       0       0       0
  2113 ;;Total ram usage:        2 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_getdata
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122     04DE                     _read_digital_keypad:	
  2123                           ;psect for function _read_digital_keypad
  2124                           
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  2128                           ;read_digital_keypad@mode stored from wreg
  2129     04DE  00F1               	movwf	read_digital_keypad@mode
  2130     04DF                     l1382:
  2131                           
  2132                           ;digital_keypad.c: 10: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 11: {;digital_keypad.c: 12:     static unsigned char once = 1;;digital_keypad.c: 
      +                          14:     if (mode == 0)
  2133     04DF  0871               	movf	read_digital_keypad@mode,w
  2134     04E0  1D03               	btfss	3,2
  2135     04E1  2CE3               	goto	u871
  2136     04E2  2CE4               	goto	u870
  2137     04E3                     u871:
  2138     04E3  2CE9               	goto	l1390
  2139     04E4                     u870:
  2140     04E4                     l1384:
  2141                           
  2142                           ;digital_keypad.c: 15:     {;digital_keypad.c: 16:         return PORTB & 0x3F;
  2143     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2144     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2145     04E6  0806               	movf	6,w	;volatile
  2146     04E7  393F               	andlw	63
  2147     04E8  2D07               	goto	l45
  2148     04E9                     l1390:
  2149                           
  2150                           ;digital_keypad.c: 19:     {;digital_keypad.c: 20:         if (((PORTB & 0x3F) != 0x3F) 
      +                          && once)
  2151     04E9  303F               	movlw	63
  2152     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2153     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2154     04EC  0506               	andwf	6,w	;volatile
  2155     04ED  00F0               	movwf	??_read_digital_keypad
  2156     04EE  303F               	movlw	63
  2157     04EF  0670               	xorwf	??_read_digital_keypad,w
  2158     04F0  1903               	btfsc	3,2
  2159     04F1  2CF3               	goto	u881
  2160     04F2  2CF4               	goto	u880
  2161     04F3                     u881:
  2162     04F3  2CFB               	goto	l1402
  2163     04F4                     u880:
  2164     04F4                     l1392:
  2165     04F4  0831               	movf	read_digital_keypad@once,w
  2166     04F5  1903               	btfsc	3,2
  2167     04F6  2CF8               	goto	u891
  2168     04F7  2CF9               	goto	u890
  2169     04F8                     u891:
  2170     04F8  2CFB               	goto	l1402
  2171     04F9                     u890:
  2172     04F9                     l1394:
  2173                           
  2174                           ;digital_keypad.c: 21:         {;digital_keypad.c: 22:             once = 0;
  2175     04F9  01B1               	clrf	read_digital_keypad@once
  2176     04FA  2CE4               	goto	l1384
  2177     04FB                     l1402:
  2178     04FB  303F               	movlw	63
  2179     04FC  0506               	andwf	6,w	;volatile
  2180     04FD  00F0               	movwf	??_read_digital_keypad
  2181     04FE  303F               	movlw	63
  2182     04FF  0670               	xorwf	??_read_digital_keypad,w
  2183     0500  1D03               	btfss	3,2
  2184     0501  2D03               	goto	u901
  2185     0502  2D04               	goto	u900
  2186     0503                     u901:
  2187     0503  2D06               	goto	l1406
  2188     0504                     u900:
  2189     0504                     l1404:
  2190                           
  2191                           ;digital_keypad.c: 27:         {;digital_keypad.c: 28:             once = 1;
  2192     0504  01B1               	clrf	read_digital_keypad@once
  2193     0505  0AB1               	incf	read_digital_keypad@once,f
  2194     0506                     l1406:
  2195                           
  2196                           ;digital_keypad.c: 32:     return 0x3F;
  2197     0506  303F               	movlw	63
  2198     0507                     l45:
  2199     0507  0008               	return
  2200     0508                     __end_of_read_digital_keypad:
  2201                           
  2202                           	psect	text13
  2203     037A                     __ptext13:	
  2204 ;; *************** function _read_adc *****************
  2205 ;; Defined at:
  2206 ;;		line 12 in file "adc.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  adc_reg_val     2    2[COMMON] unsigned short 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  2    0[COMMON] unsigned short 
  2213 ;; Registers used:
  2214 ;;		wreg
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         2       0       0       0       0
  2221 ;;      Locals:         2       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0
  2223 ;;      Totals:         4       0       0       0       0
  2224 ;;Total ram usage:        4 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_getdata
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233     037A                     _read_adc:	
  2234                           ;psect for function _read_adc
  2235                           
  2236     037A                     l1424:	
  2237                           ;incstack = 0
  2238                           ; Regs used in _read_adc: [wreg]
  2239                           
  2240                           
  2241                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
  2242     037A  1283               	bcf	3,5	;RP0=0, select bank0
  2243     037B  1303               	bcf	3,6	;RP1=0, select bank0
  2244     037C  151F               	bsf	31,2	;volatile
  2245     037D                     l142:	
  2246                           ;adc.c: 20:     while (nDONE);
  2247                           
  2248     037D  191F               	btfsc	31,2	;volatile
  2249     037E  2B80               	goto	u921
  2250     037F  2B81               	goto	u920
  2251     0380                     u921:
  2252     0380  2B7D               	goto	l142
  2253     0381                     u920:
  2254     0381                     l1426:
  2255                           
  2256                           ;adc.c: 23:     adc_reg_val = (ADRESH << 8) | ADRESL;
  2257     0381  081E               	movf	30,w	;volatile
  2258     0382  00F3               	movwf	read_adc@adc_reg_val+1
  2259     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2260     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2261     0385  081E               	movf	30,w	;volatile
  2262     0386  00F2               	movwf	read_adc@adc_reg_val
  2263                           
  2264                           ;adc.c: 25:     return adc_reg_val;
  2265     0387  0873               	movf	read_adc@adc_reg_val+1,w
  2266     0388  00F1               	movwf	?_read_adc+1
  2267     0389  0872               	movf	read_adc@adc_reg_val,w
  2268     038A  00F0               	movwf	?_read_adc
  2269     038B                     l145:
  2270     038B  0008               	return
  2271     038C                     __end_of_read_adc:
  2272                           
  2273                           	psect	text14
  2274     05D4                     __ptext14:	
  2275 ;; *************** function ___lwdiv *****************
  2276 ;; Defined at:
  2277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  divisor         2    0[COMMON] unsigned int 
  2280 ;;  dividend        2    2[COMMON] unsigned int 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  quotient        2    4[COMMON] unsigned int 
  2283 ;;  counter         1    6[COMMON] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2    0[COMMON] unsigned int 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, btemp+1
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         4       0       0       0       0
  2294 ;;      Locals:         3       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0
  2296 ;;      Totals:         7       0       0       0       0
  2297 ;;Total ram usage:        7 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_getdata
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306     05D4                     ___lwdiv:	
  2307                           ;psect for function ___lwdiv
  2308                           
  2309     05D4                     l1442:	
  2310                           ;incstack = 0
  2311                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2312                           
  2313     05D4  01F4               	clrf	___lwdiv@quotient
  2314     05D5  01F5               	clrf	___lwdiv@quotient+1
  2315     05D6                     l1444:
  2316     05D6  0870               	movf	___lwdiv@divisor,w
  2317     05D7  0471               	iorwf	___lwdiv@divisor+1,w
  2318     05D8  1903               	btfsc	3,2
  2319     05D9  2DDB               	goto	u941
  2320     05DA  2DDC               	goto	u940
  2321     05DB                     u941:
  2322     05DB  2E13               	goto	l1464
  2323     05DC                     u940:
  2324     05DC                     l1446:
  2325     05DC  01F6               	clrf	___lwdiv@counter
  2326     05DD  0AF6               	incf	___lwdiv@counter,f
  2327     05DE  2DEA               	goto	l1452
  2328     05DF                     l1448:
  2329     05DF  3001               	movlw	1
  2330     05E0                     u955:
  2331     05E0  1003               	clrc
  2332     05E1  0DF0               	rlf	___lwdiv@divisor,f
  2333     05E2  0DF1               	rlf	___lwdiv@divisor+1,f
  2334     05E3  3EFF               	addlw	-1
  2335     05E4  1D03               	skipz
  2336     05E5  2DE0               	goto	u955
  2337     05E6                     l1450:
  2338     05E6  3001               	movlw	1
  2339     05E7  00FF               	movwf	btemp+1
  2340     05E8  087F               	movf	btemp+1,w
  2341     05E9  07F6               	addwf	___lwdiv@counter,f
  2342     05EA                     l1452:
  2343     05EA  1FF1               	btfss	___lwdiv@divisor+1,7
  2344     05EB  2DED               	goto	u961
  2345     05EC  2DEE               	goto	u960
  2346     05ED                     u961:
  2347     05ED  2DDF               	goto	l1448
  2348     05EE                     u960:
  2349     05EE                     l1454:
  2350     05EE  3001               	movlw	1
  2351     05EF                     u975:
  2352     05EF  1003               	clrc
  2353     05F0  0DF4               	rlf	___lwdiv@quotient,f
  2354     05F1  0DF5               	rlf	___lwdiv@quotient+1,f
  2355     05F2  3EFF               	addlw	-1
  2356     05F3  1D03               	skipz
  2357     05F4  2DEF               	goto	u975
  2358     05F5  0871               	movf	___lwdiv@divisor+1,w
  2359     05F6  0273               	subwf	___lwdiv@dividend+1,w
  2360     05F7  1D03               	skipz
  2361     05F8  2DFB               	goto	u985
  2362     05F9  0870               	movf	___lwdiv@divisor,w
  2363     05FA  0272               	subwf	___lwdiv@dividend,w
  2364     05FB                     u985:
  2365     05FB  1C03               	skipc
  2366     05FC  2DFE               	goto	u981
  2367     05FD  2DFF               	goto	u980
  2368     05FE                     u981:
  2369     05FE  2E06               	goto	l1460
  2370     05FF                     u980:
  2371     05FF                     l1456:
  2372     05FF  0870               	movf	___lwdiv@divisor,w
  2373     0600  02F2               	subwf	___lwdiv@dividend,f
  2374     0601  0871               	movf	___lwdiv@divisor+1,w
  2375     0602  1C03               	skipc
  2376     0603  03F3               	decf	___lwdiv@dividend+1,f
  2377     0604  02F3               	subwf	___lwdiv@dividend+1,f
  2378     0605                     l1458:
  2379     0605  1474               	bsf	___lwdiv@quotient,0
  2380     0606                     l1460:
  2381     0606  3001               	movlw	1
  2382     0607                     u995:
  2383     0607  1003               	clrc
  2384     0608  0CF1               	rrf	___lwdiv@divisor+1,f
  2385     0609  0CF0               	rrf	___lwdiv@divisor,f
  2386     060A  3EFF               	addlw	-1
  2387     060B  1D03               	skipz
  2388     060C  2E07               	goto	u995
  2389     060D                     l1462:
  2390     060D  3001               	movlw	1
  2391     060E  02F6               	subwf	___lwdiv@counter,f
  2392     060F  1D03               	btfss	3,2
  2393     0610  2E12               	goto	u1001
  2394     0611  2E13               	goto	u1000
  2395     0612                     u1001:
  2396     0612  2DEE               	goto	l1454
  2397     0613                     u1000:
  2398     0613                     l1464:
  2399     0613  0875               	movf	___lwdiv@quotient+1,w
  2400     0614  00F1               	movwf	?___lwdiv+1
  2401     0615  0874               	movf	___lwdiv@quotient,w
  2402     0616  00F0               	movwf	?___lwdiv
  2403     0617                     l582:
  2404     0617  0008               	return
  2405     0618                     __end_of___lwdiv:
  2406                           
  2407                           	psect	text15
  2408     03C4                     __ptext15:	
  2409 ;; *************** function _display_dashboard *****************
  2410 ;; Defined at:
  2411 ;;		line 78 in file "app.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  event           1    wreg     PTR const unsigned char 
  2414 ;;		 -> event(2), 
  2415 ;;  speed           1   13[COMMON] PTR const unsigned char 
  2416 ;;		 -> speed(2), 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  event           1   17[BANK0 ] PTR const unsigned char 
  2419 ;;		 -> event(2), 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         1       0       0       0       0
  2430 ;;      Locals:         0       1       0       0       0
  2431 ;;      Temps:          0       0       0       0       0
  2432 ;;      Totals:         1       1       0       0       0
  2433 ;;Total ram usage:        2 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 6
  2436 ;; This function calls:
  2437 ;;		_displayevent
  2438 ;;		_displayheader
  2439 ;;		_displayspeed
  2440 ;;		_displaytime
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     03C4                     _display_dashboard:	
  2447                           ;psect for function _display_dashboard
  2448                           
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in _display_dashboard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2452                           ;display_dashboard@event stored from wreg
  2453     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2454     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2455     03C6  00C3               	movwf	display_dashboard@event
  2456     03C7                     l1494:
  2457                           
  2458                           ;app.c: 78: void display_dashboard(const char* event, const char *speed);app.c: 79: {;ap
      +                          p.c: 80:     displayheader();
  2459     03C7  120A  118A  23E0  120A  118A  	fcall	_displayheader
  2460                           
  2461                           ;app.c: 82:     displaytime();
  2462     03CC  120A  118A  235B  120A  118A  	fcall	_displaytime
  2463                           
  2464                           ;app.c: 84:     displayevent(event);
  2465     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2466     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2467     03D3  0843               	movf	display_dashboard@event,w
  2468     03D4  120A  118A  2323  120A  118A  	fcall	_displayevent
  2469                           
  2470                           ;app.c: 86:     displayspeed(speed);
  2471     03D9  087D               	movf	display_dashboard@speed,w
  2472     03DA  120A  118A  259A  120A  118A  	fcall	_displayspeed
  2473     03DF                     l224:
  2474     03DF  0008               	return
  2475     03E0                     __end_of_display_dashboard:
  2476                           
  2477                           	psect	text16
  2478     035B                     __ptext16:	
  2479 ;; *************** function _displaytime *****************
  2480 ;; Defined at:
  2481 ;;		line 45 in file "app.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 5
  2502 ;; This function calls:
  2503 ;;		_clcd_print
  2504 ;;		_gettime
  2505 ;; This function is called by:
  2506 ;;		_display_dashboard
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510     035B                     _displaytime:	
  2511                           ;psect for function _displaytime
  2512                           
  2513     035B                     l1434:	
  2514                           ;incstack = 0
  2515                           ; Regs used in _displaytime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2516                           
  2517                           
  2518                           ;app.c: 47:     gettime();
  2519     035B  120A  118A  2618  120A  118A  	fcall	_gettime
  2520     0360                     l1436:
  2521                           
  2522                           ;app.c: 48:     clcd_print(time,(0xC0 + 0));
  2523     0360  30C0               	movlw	192
  2524     0361  00F4               	movwf	clcd_print@addr
  2525     0362  3048               	movlw	(low (_time| 0))& (0+255)
  2526     0363  120A  118A  2479  120A  118A  	fcall	_clcd_print
  2527     0368                     l215:
  2528     0368  0008               	return
  2529     0369                     __end_of_displaytime:
  2530                           
  2531                           	psect	text17
  2532     0618                     __ptext17:	
  2533 ;; *************** function _gettime *****************
  2534 ;; Defined at:
  2535 ;;		line 24 in file "app.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       0       0       0
  2550 ;;      Locals:         0       0       0       0       0
  2551 ;;      Temps:          1       0       0       0       0
  2552 ;;      Totals:         1       0       0       0       0
  2553 ;;Total ram usage:        1 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 4
  2556 ;; This function calls:
  2557 ;;		_read_ds1307
  2558 ;; This function is called by:
  2559 ;;		_displaytime
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563     0618                     _gettime:	
  2564                           ;psect for function _gettime
  2565                           
  2566     0618                     l1244:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _gettime: [wreg+status,2+status,0+pclath+cstack]
  2569                           
  2570                           
  2571                           ;app.c: 26:     clocktime[0] = read_ds1307(0x02);
  2572     0618  3002               	movlw	2
  2573     0619  120A  118A  2508  120A  118A  	fcall	_read_ds1307
  2574     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2575     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2576     0620  00C4               	movwf	_clocktime
  2577                           
  2578                           ;app.c: 27:     clocktime[1] = read_ds1307(0x01);
  2579     0621  3001               	movlw	1
  2580     0622  120A  118A  2508  120A  118A  	fcall	_read_ds1307
  2581     0627  1283               	bcf	3,5	;RP0=0, select bank0
  2582     0628  1303               	bcf	3,6	;RP1=0, select bank0
  2583     0629  00C5               	movwf	_clocktime+1
  2584                           
  2585                           ;app.c: 28:     clocktime[2] = read_ds1307(0x00);
  2586     062A  3000               	movlw	0
  2587     062B  120A  118A  2508  120A  118A  	fcall	_read_ds1307
  2588     0630  1283               	bcf	3,5	;RP0=0, select bank0
  2589     0631  1303               	bcf	3,6	;RP1=0, select bank0
  2590     0632  00C6               	movwf	_clocktime+2
  2591     0633                     l1246:
  2592                           
  2593                           ;app.c: 30:     time[0] = ((clocktime[0] >> 4) & 0x0F) + '0';
  2594     0633  0844               	movf	_clocktime,w
  2595     0634  00F4               	movwf	??_gettime
  2596     0635  3004               	movlw	4
  2597     0636                     u585:
  2598     0636  1003               	clrc
  2599     0637  0CF4               	rrf	??_gettime,f
  2600     0638  3EFF               	addlw	-1
  2601     0639  1D03               	skipz
  2602     063A  2E36               	goto	u585
  2603     063B  0874               	movf	??_gettime,w
  2604     063C  390F               	andlw	15
  2605     063D  3E30               	addlw	48
  2606     063E  00C8               	movwf	_time
  2607     063F                     l1248:
  2608                           
  2609                           ;app.c: 31:     time[1] = (clocktime[0] & 0x0F) + '0';
  2610     063F  0844               	movf	_clocktime,w
  2611     0640  390F               	andlw	15
  2612     0641  3E30               	addlw	48
  2613     0642  00C9               	movwf	_time+1
  2614     0643                     l1250:
  2615                           
  2616                           ;app.c: 32:     time[2] = ':';
  2617     0643  303A               	movlw	58
  2618     0644  00CA               	movwf	_time+2
  2619     0645                     l1252:
  2620                           
  2621                           ;app.c: 33:     time[3] = ((clocktime[1] >> 4) & 0x0F) + '0';
  2622     0645  0845               	movf	_clocktime+1,w
  2623     0646  00F4               	movwf	??_gettime
  2624     0647  3004               	movlw	4
  2625     0648                     u595:
  2626     0648  1003               	clrc
  2627     0649  0CF4               	rrf	??_gettime,f
  2628     064A  3EFF               	addlw	-1
  2629     064B  1D03               	skipz
  2630     064C  2E48               	goto	u595
  2631     064D  0874               	movf	??_gettime,w
  2632     064E  390F               	andlw	15
  2633     064F  3E30               	addlw	48
  2634     0650  00CB               	movwf	_time+3
  2635     0651                     l1254:
  2636                           
  2637                           ;app.c: 34:     time[4] = (clocktime[1] & 0x0F) + '0';
  2638     0651  0845               	movf	_clocktime+1,w
  2639     0652  390F               	andlw	15
  2640     0653  3E30               	addlw	48
  2641     0654  00CC               	movwf	_time+4
  2642     0655                     l1256:
  2643                           
  2644                           ;app.c: 35:     time[5] = ':';
  2645     0655  303A               	movlw	58
  2646     0656  00CD               	movwf	_time+5
  2647     0657                     l1258:
  2648                           
  2649                           ;app.c: 36:     time[6] = ((clocktime[2] >> 4) & 0x0F) + '0';
  2650     0657  0846               	movf	_clocktime+2,w
  2651     0658  00F4               	movwf	??_gettime
  2652     0659  3004               	movlw	4
  2653     065A                     u605:
  2654     065A  1003               	clrc
  2655     065B  0CF4               	rrf	??_gettime,f
  2656     065C  3EFF               	addlw	-1
  2657     065D  1D03               	skipz
  2658     065E  2E5A               	goto	u605
  2659     065F  0874               	movf	??_gettime,w
  2660     0660  390F               	andlw	15
  2661     0661  3E30               	addlw	48
  2662     0662  00CE               	movwf	_time+6
  2663     0663                     l1260:
  2664                           
  2665                           ;app.c: 37:     time[7] = (clocktime[2] & 0x0F) + '0';
  2666     0663  0846               	movf	_clocktime+2,w
  2667     0664  390F               	andlw	15
  2668     0665  3E30               	addlw	48
  2669     0666  00CF               	movwf	_time+7
  2670     0667                     l1262:
  2671                           
  2672                           ;app.c: 38:     time[8] = '\0';
  2673     0667  01D0               	clrf	_time+8
  2674     0668                     l212:
  2675     0668  0008               	return
  2676     0669                     __end_of_gettime:
  2677                           
  2678                           	psect	text18
  2679     0508                     __ptext18:	
  2680 ;; *************** function _read_ds1307 *****************
  2681 ;; Defined at:
  2682 ;;		line 14 in file "ds1307.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  addr            1    wreg     unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  addr            1    2[COMMON] unsigned char 
  2687 ;;  data            1    3[COMMON] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      unsigned char 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, pclath, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         0       0       0       0       0
  2698 ;;      Locals:         2       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0
  2700 ;;      Totals:         2       0       0       0       0
  2701 ;;Total ram usage:        2 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; Hardware stack levels required when called: 3
  2704 ;; This function calls:
  2705 ;;		_i2c_read
  2706 ;;		_i2c_rep_start
  2707 ;;		_i2c_start
  2708 ;;		_i2c_stop
  2709 ;;		_i2c_write
  2710 ;; This function is called by:
  2711 ;;		_init_ds1307
  2712 ;;		_gettime
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716     0508                     _read_ds1307:	
  2717                           ;psect for function _read_ds1307
  2718                           
  2719                           
  2720                           ;incstack = 0
  2721                           ; Regs used in _read_ds1307: [wreg+status,2+status,0+pclath+cstack]
  2722                           ;read_ds1307@addr stored from wreg
  2723     0508  00F2               	movwf	read_ds1307@addr
  2724     0509                     l1206:
  2725                           
  2726                           ;ds1307.c: 14: unsigned char read_ds1307(unsigned char addr);ds1307.c: 15: {;ds1307.c: 1
      +                          6:     unsigned char data;;ds1307.c: 18:     i2c_start();
  2727     0509  120A  118A  2311  120A  118A  	fcall	_i2c_start
  2728                           
  2729                           ;ds1307.c: 19:     i2c_write(0b11010000);
  2730     050E  30D0               	movlw	208
  2731     050F  120A  118A  2338  120A  118A  	fcall	_i2c_write
  2732                           
  2733                           ;ds1307.c: 20:     i2c_write(addr);
  2734     0514  0872               	movf	read_ds1307@addr,w
  2735     0515  120A  118A  2338  120A  118A  	fcall	_i2c_write
  2736                           
  2737                           ;ds1307.c: 21:     i2c_rep_start();
  2738     051A  120A  118A  232D  120A  118A  	fcall	_i2c_rep_start
  2739                           
  2740                           ;ds1307.c: 22:     i2c_write(0b11010001);
  2741     051F  30D1               	movlw	209
  2742     0520  120A  118A  2338  120A  118A  	fcall	_i2c_write
  2743                           
  2744                           ;ds1307.c: 23:     data = i2c_read(0);
  2745     0525  3000               	movlw	0
  2746     0526  120A  118A  2499  120A  118A  	fcall	_i2c_read
  2747     052B  00F3               	movwf	read_ds1307@data
  2748                           
  2749                           ;ds1307.c: 24:     i2c_stop();
  2750     052C  120A  118A  231A  120A  118A  	fcall	_i2c_stop
  2751     0531                     l1208:
  2752                           
  2753                           ;ds1307.c: 26:     return data;
  2754     0531  0873               	movf	read_ds1307@data,w
  2755     0532                     l69:
  2756     0532  0008               	return
  2757     0533                     __end_of_read_ds1307:
  2758                           
  2759                           	psect	text19
  2760     0338                     __ptext19:	
  2761 ;; *************** function _i2c_write *****************
  2762 ;; Defined at:
  2763 ;;		line 66 in file "i2c.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  data            1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  data            1    0[COMMON] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2   57[None  ] int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0
  2780 ;;      Totals:         1       0       0       0       0
  2781 ;;Total ram usage:        1 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 1
  2784 ;; This function calls:
  2785 ;;		_i2c_wait_for_idle
  2786 ;; This function is called by:
  2787 ;;		_read_ds1307
  2788 ;;		_write_ds1307
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792     0338                     _i2c_write:	
  2793                           ;psect for function _i2c_write
  2794                           
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2798                           ;i2c_write@data stored from wreg
  2799     0338  00F0               	movwf	i2c_write@data
  2800     0339                     l1174:
  2801                           
  2802                           ;i2c.c: 66: int i2c_write(unsigned char data);i2c.c: 67: {;i2c.c: 68:     i2c_wait_for_i
      +                          dle();
  2803     0339  120A  118A  234E  120A  118A  	fcall	_i2c_wait_for_idle
  2804     033E                     l1176:
  2805                           
  2806                           ;i2c.c: 69:     SSPBUF = data;
  2807     033E  0870               	movf	i2c_write@data,w
  2808     033F  1283               	bcf	3,5	;RP0=0, select bank0
  2809     0340  1303               	bcf	3,6	;RP1=0, select bank0
  2810     0341  0093               	movwf	19	;volatile
  2811     0342                     l1178:
  2812     0342                     l124:	
  2813                           ;i2c.c: 71:     return !ACKSTAT;;	Return value of _i2c_write is never used
  2814                           
  2815     0342  0008               	return
  2816     0343                     __end_of_i2c_write:
  2817                           
  2818                           	psect	text20
  2819     032D                     __ptext20:	
  2820 ;; *************** function _i2c_rep_start *****************
  2821 ;; Defined at:
  2822 ;;		line 29 in file "i2c.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0
  2839 ;;      Totals:         0       0       0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 2
  2843 ;; This function calls:
  2844 ;;		_i2c_start
  2845 ;;		_i2c_stop
  2846 ;; This function is called by:
  2847 ;;		_read_ds1307
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851     032D                     _i2c_rep_start:	
  2852                           ;psect for function _i2c_rep_start
  2853                           
  2854     032D                     l1182:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  2857                           
  2858                           
  2859                           ;i2c.c: 31:     i2c_stop();
  2860     032D  120A  118A  231A  120A  118A  	fcall	_i2c_stop
  2861                           
  2862                           ;i2c.c: 32:     i2c_start();
  2863     0332  120A  118A  2311  120A  118A  	fcall	_i2c_start
  2864     0337                     l113:
  2865     0337  0008               	return
  2866     0338                     __end_of_i2c_rep_start:
  2867                           
  2868                           	psect	text21
  2869     031A                     __ptext21:	
  2870 ;; *************** function _i2c_stop *****************
  2871 ;; Defined at:
  2872 ;;		line 36 in file "i2c.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0
  2889 ;;      Totals:         0       0       0       0       0
  2890 ;;Total ram usage:        0 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 1
  2893 ;; This function calls:
  2894 ;;		_i2c_wait_for_idle
  2895 ;; This function is called by:
  2896 ;;		_read_ds1307
  2897 ;;		_write_ds1307
  2898 ;;		_i2c_rep_start
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902     031A                     _i2c_stop:	
  2903                           ;psect for function _i2c_stop
  2904                           
  2905     031A                     l1170:	
  2906                           ;incstack = 0
  2907                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  2908                           
  2909                           
  2910                           ;i2c.c: 38:     i2c_wait_for_idle();
  2911     031A  120A  118A  234E  120A  118A  	fcall	_i2c_wait_for_idle
  2912     031F                     l1172:
  2913                           
  2914                           ;i2c.c: 39:     PEN = 1;
  2915     031F  1683               	bsf	3,5	;RP0=1, select bank1
  2916     0320  1303               	bcf	3,6	;RP1=0, select bank1
  2917     0321  1511               	bsf	17,2	;volatile
  2918     0322                     l116:
  2919     0322  0008               	return
  2920     0323                     __end_of_i2c_stop:
  2921                           
  2922                           	psect	text22
  2923     0311                     __ptext22:	
  2924 ;; *************** function _i2c_start *****************
  2925 ;; Defined at:
  2926 ;;		line 23 in file "i2c.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0
  2943 ;;      Totals:         0       0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 1
  2947 ;; This function calls:
  2948 ;;		_i2c_wait_for_idle
  2949 ;; This function is called by:
  2950 ;;		_read_ds1307
  2951 ;;		_write_ds1307
  2952 ;;		_i2c_rep_start
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956     0311                     _i2c_start:	
  2957                           ;psect for function _i2c_start
  2958                           
  2959     0311                     l1166:	
  2960                           ;incstack = 0
  2961                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2962                           
  2963                           
  2964                           ;i2c.c: 25:     i2c_wait_for_idle();
  2965     0311  120A  118A  234E  120A  118A  	fcall	_i2c_wait_for_idle
  2966     0316                     l1168:
  2967                           
  2968                           ;i2c.c: 26:     SEN = 1;
  2969     0316  1683               	bsf	3,5	;RP0=1, select bank1
  2970     0317  1303               	bcf	3,6	;RP1=0, select bank1
  2971     0318  1411               	bsf	17,0	;volatile
  2972     0319                     l110:
  2973     0319  0008               	return
  2974     031A                     __end_of_i2c_start:
  2975                           
  2976                           	psect	text23
  2977     0499                     __ptext23:	
  2978 ;; *************** function _i2c_read *****************
  2979 ;; Defined at:
  2980 ;;		line 42 in file "i2c.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  ack             1    wreg     unsigned char 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  ack             1    0[COMMON] unsigned char 
  2985 ;;  data            1    1[COMMON] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      unsigned char 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, pclath, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         0       0       0       0       0
  2996 ;;      Locals:         2       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0
  2998 ;;      Totals:         2       0       0       0       0
  2999 ;;Total ram usage:        2 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 1
  3002 ;; This function calls:
  3003 ;;		_i2c_wait_for_idle
  3004 ;; This function is called by:
  3005 ;;		_read_ds1307
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009     0499                     _i2c_read:	
  3010                           ;psect for function _i2c_read
  3011                           
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3015                           ;i2c_read@ack stored from wreg
  3016     0499  00F0               	movwf	i2c_read@ack
  3017     049A                     l1184:
  3018                           
  3019                           ;i2c.c: 42: unsigned char i2c_read(unsigned char ack);i2c.c: 43: {;i2c.c: 44:     unsign
      +                          ed char data;;i2c.c: 46:     i2c_wait_for_idle();
  3020     049A  120A  118A  234E  120A  118A  	fcall	_i2c_wait_for_idle
  3021     049F                     l1186:
  3022                           
  3023                           ;i2c.c: 47:     RCEN = 1;
  3024     049F  1683               	bsf	3,5	;RP0=1, select bank1
  3025     04A0  1303               	bcf	3,6	;RP1=0, select bank1
  3026     04A1  1591               	bsf	17,3	;volatile
  3027                           
  3028                           ;i2c.c: 49:     i2c_wait_for_idle();
  3029     04A2  120A  118A  234E  120A  118A  	fcall	_i2c_wait_for_idle
  3030     04A7                     l1188:
  3031                           
  3032                           ;i2c.c: 50:     data = SSPBUF;
  3033     04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3034     04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3035     04A9  0813               	movf	19,w	;volatile
  3036     04AA  00F1               	movwf	i2c_read@data
  3037     04AB                     l1190:
  3038                           
  3039                           ;i2c.c: 52:     if (ack == 1)
  3040     04AB  0370               	decf	i2c_read@ack,w
  3041     04AC  1D03               	btfss	3,2
  3042     04AD  2CAF               	goto	u541
  3043     04AE  2CB0               	goto	u540
  3044     04AF                     u541:
  3045     04AF  2CB4               	goto	l119
  3046     04B0                     u540:
  3047     04B0                     l1192:
  3048                           
  3049                           ;i2c.c: 53:     {;i2c.c: 54:         ACKDT = 1;
  3050     04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3051     04B1  1303               	bcf	3,6	;RP1=0, select bank1
  3052     04B2  1691               	bsf	17,5	;volatile
  3053                           
  3054                           ;i2c.c: 55:     }
  3055     04B3  2CB7               	goto	l120
  3056     04B4                     l119:	
  3057                           ;i2c.c: 56:     else
  3058                           
  3059                           
  3060                           ;i2c.c: 57:     {;i2c.c: 58:         ACKDT = 0;
  3061     04B4  1683               	bsf	3,5	;RP0=1, select bank1
  3062     04B5  1303               	bcf	3,6	;RP1=0, select bank1
  3063     04B6  1291               	bcf	17,5	;volatile
  3064     04B7                     l120:	
  3065                           ;i2c.c: 59:     }
  3066                           
  3067                           
  3068                           ;i2c.c: 61:     ACKEN = 1;
  3069     04B7  1611               	bsf	17,4	;volatile
  3070     04B8                     l1194:
  3071                           
  3072                           ;i2c.c: 63:     return data;
  3073     04B8  0871               	movf	i2c_read@data,w
  3074     04B9                     l121:
  3075     04B9  0008               	return
  3076     04BA                     __end_of_i2c_read:
  3077                           
  3078                           	psect	text24
  3079     034E                     __ptext24:	
  3080 ;; *************** function _i2c_wait_for_idle *****************
  3081 ;; Defined at:
  3082 ;;		line 16 in file "i2c.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0
  3099 ;;      Totals:         0       0       0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_i2c_start
  3106 ;;		_i2c_stop
  3107 ;;		_i2c_read
  3108 ;;		_i2c_write
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     034E                     _i2c_wait_for_idle:	
  3113                           ;psect for function _i2c_wait_for_idle
  3114                           
  3115     034E                     l1162:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  3118                           
  3119     034E                     l104:	
  3120                           ;i2c.c: 20:     while (R_nW || (SSPCON2 & 0x1F));
  3121                           
  3122     034E  1683               	bsf	3,5	;RP0=1, select bank1
  3123     034F  1303               	bcf	3,6	;RP1=0, select bank1
  3124     0350  1914               	btfsc	20,2	;volatile
  3125     0351  2B53               	goto	u521
  3126     0352  2B54               	goto	u520
  3127     0353                     u521:
  3128     0353  2B4E               	goto	l104
  3129     0354                     u520:
  3130     0354                     l1164:
  3131     0354  0811               	movf	17,w	;volatile
  3132     0355  391F               	andlw	31
  3133     0356  1D03               	btfss	3,2
  3134     0357  2B59               	goto	u531
  3135     0358  2B5A               	goto	u530
  3136     0359                     u531:
  3137     0359  2B4E               	goto	l104
  3138     035A                     u530:
  3139     035A                     l107:
  3140     035A  0008               	return
  3141     035B                     __end_of_i2c_wait_for_idle:
  3142                           
  3143                           	psect	text25
  3144     059A                     __ptext25:	
  3145 ;; *************** function _displayspeed *****************
  3146 ;; Defined at:
  3147 ;;		line 67 in file "app.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  speed           1    wreg     PTR const unsigned char 
  3150 ;;		 -> speed(2), 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  speed           1   12[COMMON] PTR const unsigned char 
  3153 ;;		 -> speed(2), 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3163 ;;      Params:         0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0
  3165 ;;      Temps:          2       0       0       0       0
  3166 ;;      Totals:         3       0       0       0       0
  3167 ;;Total ram usage:        3 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 2
  3170 ;; This function calls:
  3171 ;;		___awdiv
  3172 ;;		___awmod
  3173 ;;		_clcd_putch
  3174 ;; This function is called by:
  3175 ;;		_display_dashboard
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179     059A                     _displayspeed:	
  3180                           ;psect for function _displayspeed
  3181                           
  3182                           
  3183                           ;incstack = 0
  3184                           ; Regs used in _displayspeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3185                           ;displayspeed@speed stored from wreg
  3186     059A  00FC               	movwf	displayspeed@speed
  3187     059B                     l1440:
  3188                           
  3189                           ;app.c: 67: void displayspeed(const char *speed);app.c: 68: {;app.c: 70:     clcd_putch(
      +                          (*speed / 10)+'0' ,(0xC0 + 14));
  3190     059B  30CE               	movlw	206
  3191     059C  00F8               	movwf	clcd_putch@addr
  3192     059D  300A               	movlw	10
  3193     059E  00F0               	movwf	___awdiv@divisor
  3194     059F  3000               	movlw	0
  3195     05A0  00F1               	movwf	___awdiv@divisor+1
  3196     05A1  087C               	movf	displayspeed@speed,w
  3197     05A2  0084               	movwf	4
  3198     05A3  1383               	bcf	3,7	;select IRP bank0
  3199     05A4  0800               	movf	0,w
  3200     05A5  00FA               	movwf	??_displayspeed
  3201     05A6  01FB               	clrf	??_displayspeed+1
  3202     05A7  087A               	movf	??_displayspeed,w
  3203     05A8  00F2               	movwf	___awdiv@dividend
  3204     05A9  087B               	movf	??_displayspeed+1,w
  3205     05AA  00F3               	movwf	___awdiv@dividend+1
  3206     05AB  120A  118A  277F  120A  118A  	fcall	___awdiv
  3207     05B0  0870               	movf	?___awdiv,w
  3208     05B1  3E30               	addlw	48
  3209     05B2  120A  118A  2369  120A  118A  	fcall	_clcd_putch
  3210                           
  3211                           ;app.c: 71:     clcd_putch((*speed % 10)+'0' ,(0xC0 + 15));
  3212     05B7  30CF               	movlw	207
  3213     05B8  00F8               	movwf	clcd_putch@addr
  3214     05B9  300A               	movlw	10
  3215     05BA  00F0               	movwf	___awmod@divisor
  3216     05BB  3000               	movlw	0
  3217     05BC  00F1               	movwf	___awmod@divisor+1
  3218     05BD  087C               	movf	displayspeed@speed,w
  3219     05BE  0084               	movwf	4
  3220     05BF  1383               	bcf	3,7	;select IRP bank0
  3221     05C0  0800               	movf	0,w
  3222     05C1  00FA               	movwf	??_displayspeed
  3223     05C2  01FB               	clrf	??_displayspeed+1
  3224     05C3  087A               	movf	??_displayspeed,w
  3225     05C4  00F2               	movwf	___awmod@dividend
  3226     05C5  087B               	movf	??_displayspeed+1,w
  3227     05C6  00F3               	movwf	___awmod@dividend+1
  3228     05C7  120A  118A  26C0  120A  118A  	fcall	___awmod
  3229     05CC  0870               	movf	?___awmod,w
  3230     05CD  3E30               	addlw	48
  3231     05CE  120A  118A  2369  120A  118A  	fcall	_clcd_putch
  3232     05D3                     l221:
  3233     05D3  0008               	return
  3234     05D4                     __end_of_displayspeed:
  3235                           
  3236                           	psect	text26
  3237     0369                     __ptext26:	
  3238 ;; *************** function _clcd_putch *****************
  3239 ;; Defined at:
  3240 ;;		line 49 in file "clcd.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  data            1    wreg     const unsigned char 
  3243 ;;  addr            1    8[COMMON] unsigned char 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  data            1    9[COMMON] const unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         1       0       0       0       0
  3256 ;;      Locals:         1       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0
  3258 ;;      Totals:         2       0       0       0       0
  3259 ;;Total ram usage:        2 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 1
  3262 ;; This function calls:
  3263 ;;		_clcd_write
  3264 ;; This function is called by:
  3265 ;;		_displayspeed
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269     0369                     _clcd_putch:	
  3270                           ;psect for function _clcd_putch
  3271                           
  3272                           
  3273                           ;incstack = 0
  3274                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  3275                           ;clcd_putch@data stored from wreg
  3276     0369  00F9               	movwf	clcd_putch@data
  3277     036A                     l1232:
  3278                           
  3279                           ;clcd.c: 49: void clcd_putch(const char data, unsigned char addr);clcd.c: 50: {;clcd.c: 
      +                          51:     clcd_write(addr, 0);
  3280     036A  01F0               	clrf	clcd_write@mode
  3281     036B  0878               	movf	clcd_putch@addr,w
  3282     036C  120A  118A  2459  120A  118A  	fcall	_clcd_write
  3283                           
  3284                           ;clcd.c: 52:     clcd_write(data, 1);
  3285     0371  01F0               	clrf	clcd_write@mode
  3286     0372  0AF0               	incf	clcd_write@mode,f
  3287     0373  0879               	movf	clcd_putch@data,w
  3288     0374  120A  118A  2459  120A  118A  	fcall	_clcd_write
  3289     0379                     l26:
  3290     0379  0008               	return
  3291     037A                     __end_of_clcd_putch:
  3292                           
  3293                           	psect	text27
  3294     06C0                     __ptext27:	
  3295 ;; *************** function ___awmod *****************
  3296 ;; Defined at:
  3297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  divisor         2    0[COMMON] int 
  3300 ;;  dividend        2    2[COMMON] int 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  sign            1    5[COMMON] unsigned char 
  3303 ;;  counter         1    4[COMMON] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  2    0[COMMON] int 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, btemp+1
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         4       0       0       0       0
  3314 ;;      Locals:         2       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0
  3316 ;;      Totals:         6       0       0       0       0
  3317 ;;Total ram usage:        6 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_displayspeed
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326     06C0                     ___awmod:	
  3327                           ;psect for function ___awmod
  3328                           
  3329     06C0                     l1334:	
  3330                           ;incstack = 0
  3331                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3332                           
  3333     06C0  01F5               	clrf	___awmod@sign
  3334     06C1                     l1336:
  3335     06C1  1FF3               	btfss	___awmod@dividend+1,7
  3336     06C2  2EC4               	goto	u781
  3337     06C3  2EC5               	goto	u780
  3338     06C4                     u781:
  3339     06C4  2ECC               	goto	l1342
  3340     06C5                     u780:
  3341     06C5                     l1338:
  3342     06C5  09F2               	comf	___awmod@dividend,f
  3343     06C6  09F3               	comf	___awmod@dividend+1,f
  3344     06C7  0AF2               	incf	___awmod@dividend,f
  3345     06C8  1903               	skipnz
  3346     06C9  0AF3               	incf	___awmod@dividend+1,f
  3347     06CA                     l1340:
  3348     06CA  01F5               	clrf	___awmod@sign
  3349     06CB  0AF5               	incf	___awmod@sign,f
  3350     06CC                     l1342:
  3351     06CC  1FF1               	btfss	___awmod@divisor+1,7
  3352     06CD  2ECF               	goto	u791
  3353     06CE  2ED0               	goto	u790
  3354     06CF                     u791:
  3355     06CF  2ED5               	goto	l1346
  3356     06D0                     u790:
  3357     06D0                     l1344:
  3358     06D0  09F0               	comf	___awmod@divisor,f
  3359     06D1  09F1               	comf	___awmod@divisor+1,f
  3360     06D2  0AF0               	incf	___awmod@divisor,f
  3361     06D3  1903               	skipnz
  3362     06D4  0AF1               	incf	___awmod@divisor+1,f
  3363     06D5                     l1346:
  3364     06D5  0870               	movf	___awmod@divisor,w
  3365     06D6  0471               	iorwf	___awmod@divisor+1,w
  3366     06D7  1903               	btfsc	3,2
  3367     06D8  2EDA               	goto	u801
  3368     06D9  2EDB               	goto	u800
  3369     06DA                     u801:
  3370     06DA  2F0A               	goto	l1364
  3371     06DB                     u800:
  3372     06DB                     l1348:
  3373     06DB  01F4               	clrf	___awmod@counter
  3374     06DC  0AF4               	incf	___awmod@counter,f
  3375     06DD  2EE9               	goto	l1354
  3376     06DE                     l1350:
  3377     06DE  3001               	movlw	1
  3378     06DF                     u815:
  3379     06DF  1003               	clrc
  3380     06E0  0DF0               	rlf	___awmod@divisor,f
  3381     06E1  0DF1               	rlf	___awmod@divisor+1,f
  3382     06E2  3EFF               	addlw	-1
  3383     06E3  1D03               	skipz
  3384     06E4  2EDF               	goto	u815
  3385     06E5                     l1352:
  3386     06E5  3001               	movlw	1
  3387     06E6  00FF               	movwf	btemp+1
  3388     06E7  087F               	movf	btemp+1,w
  3389     06E8  07F4               	addwf	___awmod@counter,f
  3390     06E9                     l1354:
  3391     06E9  1FF1               	btfss	___awmod@divisor+1,7
  3392     06EA  2EEC               	goto	u821
  3393     06EB  2EED               	goto	u820
  3394     06EC                     u821:
  3395     06EC  2EDE               	goto	l1350
  3396     06ED                     u820:
  3397     06ED                     l1356:
  3398     06ED  0871               	movf	___awmod@divisor+1,w
  3399     06EE  0273               	subwf	___awmod@dividend+1,w
  3400     06EF  1D03               	skipz
  3401     06F0  2EF3               	goto	u835
  3402     06F1  0870               	movf	___awmod@divisor,w
  3403     06F2  0272               	subwf	___awmod@dividend,w
  3404     06F3                     u835:
  3405     06F3  1C03               	skipc
  3406     06F4  2EF6               	goto	u831
  3407     06F5  2EF7               	goto	u830
  3408     06F6                     u831:
  3409     06F6  2EFD               	goto	l1360
  3410     06F7                     u830:
  3411     06F7                     l1358:
  3412     06F7  0870               	movf	___awmod@divisor,w
  3413     06F8  02F2               	subwf	___awmod@dividend,f
  3414     06F9  0871               	movf	___awmod@divisor+1,w
  3415     06FA  1C03               	skipc
  3416     06FB  03F3               	decf	___awmod@dividend+1,f
  3417     06FC  02F3               	subwf	___awmod@dividend+1,f
  3418     06FD                     l1360:
  3419     06FD  3001               	movlw	1
  3420     06FE                     u845:
  3421     06FE  1003               	clrc
  3422     06FF  0CF1               	rrf	___awmod@divisor+1,f
  3423     0700  0CF0               	rrf	___awmod@divisor,f
  3424     0701  3EFF               	addlw	-1
  3425     0702  1D03               	skipz
  3426     0703  2EFE               	goto	u845
  3427     0704                     l1362:
  3428     0704  3001               	movlw	1
  3429     0705  02F4               	subwf	___awmod@counter,f
  3430     0706  1D03               	btfss	3,2
  3431     0707  2F09               	goto	u851
  3432     0708  2F0A               	goto	u850
  3433     0709                     u851:
  3434     0709  2EED               	goto	l1356
  3435     070A                     u850:
  3436     070A                     l1364:
  3437     070A  0875               	movf	___awmod@sign,w
  3438     070B  1903               	btfsc	3,2
  3439     070C  2F0E               	goto	u861
  3440     070D  2F0F               	goto	u860
  3441     070E                     u861:
  3442     070E  2F14               	goto	l1368
  3443     070F                     u860:
  3444     070F                     l1366:
  3445     070F  09F2               	comf	___awmod@dividend,f
  3446     0710  09F3               	comf	___awmod@dividend+1,f
  3447     0711  0AF2               	incf	___awmod@dividend,f
  3448     0712  1903               	skipnz
  3449     0713  0AF3               	incf	___awmod@dividend+1,f
  3450     0714                     l1368:
  3451     0714  0873               	movf	___awmod@dividend+1,w
  3452     0715  00F1               	movwf	?___awmod+1
  3453     0716  0872               	movf	___awmod@dividend,w
  3454     0717  00F0               	movwf	?___awmod
  3455     0718                     l476:
  3456     0718  0008               	return
  3457     0719                     __end_of___awmod:
  3458                           
  3459                           	psect	text28
  3460     077F                     __ptext28:	
  3461 ;; *************** function ___awdiv *****************
  3462 ;; Defined at:
  3463 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  divisor         2    0[COMMON] int 
  3466 ;;  dividend        2    2[COMMON] int 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  quotient        2    6[COMMON] int 
  3469 ;;  sign            1    5[COMMON] unsigned char 
  3470 ;;  counter         1    4[COMMON] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2    0[COMMON] int 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, btemp+1
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3480 ;;      Params:         4       0       0       0       0
  3481 ;;      Locals:         4       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0
  3483 ;;      Totals:         8       0       0       0       0
  3484 ;;Total ram usage:        8 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_displayspeed
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493     077F                     ___awdiv:	
  3494                           ;psect for function ___awdiv
  3495                           
  3496     077F                     l1290:	
  3497                           ;incstack = 0
  3498                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3499                           
  3500     077F  01F5               	clrf	___awdiv@sign
  3501     0780                     l1292:
  3502     0780  1FF1               	btfss	___awdiv@divisor+1,7
  3503     0781  2F83               	goto	u681
  3504     0782  2F84               	goto	u680
  3505     0783                     u681:
  3506     0783  2F8B               	goto	l1298
  3507     0784                     u680:
  3508     0784                     l1294:
  3509     0784  09F0               	comf	___awdiv@divisor,f
  3510     0785  09F1               	comf	___awdiv@divisor+1,f
  3511     0786  0AF0               	incf	___awdiv@divisor,f
  3512     0787  1903               	skipnz
  3513     0788  0AF1               	incf	___awdiv@divisor+1,f
  3514     0789                     l1296:
  3515     0789  01F5               	clrf	___awdiv@sign
  3516     078A  0AF5               	incf	___awdiv@sign,f
  3517     078B                     l1298:
  3518     078B  1FF3               	btfss	___awdiv@dividend+1,7
  3519     078C  2F8E               	goto	u691
  3520     078D  2F8F               	goto	u690
  3521     078E                     u691:
  3522     078E  2F98               	goto	l1304
  3523     078F                     u690:
  3524     078F                     l1300:
  3525     078F  09F2               	comf	___awdiv@dividend,f
  3526     0790  09F3               	comf	___awdiv@dividend+1,f
  3527     0791  0AF2               	incf	___awdiv@dividend,f
  3528     0792  1903               	skipnz
  3529     0793  0AF3               	incf	___awdiv@dividend+1,f
  3530     0794                     l1302:
  3531     0794  3001               	movlw	1
  3532     0795  00FF               	movwf	btemp+1
  3533     0796  087F               	movf	btemp+1,w
  3534     0797  06F5               	xorwf	___awdiv@sign,f
  3535     0798                     l1304:
  3536     0798  01F6               	clrf	___awdiv@quotient
  3537     0799  01F7               	clrf	___awdiv@quotient+1
  3538     079A                     l1306:
  3539     079A  0870               	movf	___awdiv@divisor,w
  3540     079B  0471               	iorwf	___awdiv@divisor+1,w
  3541     079C  1903               	btfsc	3,2
  3542     079D  2F9F               	goto	u701
  3543     079E  2FA0               	goto	u700
  3544     079F                     u701:
  3545     079F  2FD7               	goto	l1326
  3546     07A0                     u700:
  3547     07A0                     l1308:
  3548     07A0  01F4               	clrf	___awdiv@counter
  3549     07A1  0AF4               	incf	___awdiv@counter,f
  3550     07A2  2FAE               	goto	l1314
  3551     07A3                     l1310:
  3552     07A3  3001               	movlw	1
  3553     07A4                     u715:
  3554     07A4  1003               	clrc
  3555     07A5  0DF0               	rlf	___awdiv@divisor,f
  3556     07A6  0DF1               	rlf	___awdiv@divisor+1,f
  3557     07A7  3EFF               	addlw	-1
  3558     07A8  1D03               	skipz
  3559     07A9  2FA4               	goto	u715
  3560     07AA                     l1312:
  3561     07AA  3001               	movlw	1
  3562     07AB  00FF               	movwf	btemp+1
  3563     07AC  087F               	movf	btemp+1,w
  3564     07AD  07F4               	addwf	___awdiv@counter,f
  3565     07AE                     l1314:
  3566     07AE  1FF1               	btfss	___awdiv@divisor+1,7
  3567     07AF  2FB1               	goto	u721
  3568     07B0  2FB2               	goto	u720
  3569     07B1                     u721:
  3570     07B1  2FA3               	goto	l1310
  3571     07B2                     u720:
  3572     07B2                     l1316:
  3573     07B2  3001               	movlw	1
  3574     07B3                     u735:
  3575     07B3  1003               	clrc
  3576     07B4  0DF6               	rlf	___awdiv@quotient,f
  3577     07B5  0DF7               	rlf	___awdiv@quotient+1,f
  3578     07B6  3EFF               	addlw	-1
  3579     07B7  1D03               	skipz
  3580     07B8  2FB3               	goto	u735
  3581     07B9  0871               	movf	___awdiv@divisor+1,w
  3582     07BA  0273               	subwf	___awdiv@dividend+1,w
  3583     07BB  1D03               	skipz
  3584     07BC  2FBF               	goto	u745
  3585     07BD  0870               	movf	___awdiv@divisor,w
  3586     07BE  0272               	subwf	___awdiv@dividend,w
  3587     07BF                     u745:
  3588     07BF  1C03               	skipc
  3589     07C0  2FC2               	goto	u741
  3590     07C1  2FC3               	goto	u740
  3591     07C2                     u741:
  3592     07C2  2FCA               	goto	l1322
  3593     07C3                     u740:
  3594     07C3                     l1318:
  3595     07C3  0870               	movf	___awdiv@divisor,w
  3596     07C4  02F2               	subwf	___awdiv@dividend,f
  3597     07C5  0871               	movf	___awdiv@divisor+1,w
  3598     07C6  1C03               	skipc
  3599     07C7  03F3               	decf	___awdiv@dividend+1,f
  3600     07C8  02F3               	subwf	___awdiv@dividend+1,f
  3601     07C9                     l1320:
  3602     07C9  1476               	bsf	___awdiv@quotient,0
  3603     07CA                     l1322:
  3604     07CA  3001               	movlw	1
  3605     07CB                     u755:
  3606     07CB  1003               	clrc
  3607     07CC  0CF1               	rrf	___awdiv@divisor+1,f
  3608     07CD  0CF0               	rrf	___awdiv@divisor,f
  3609     07CE  3EFF               	addlw	-1
  3610     07CF  1D03               	skipz
  3611     07D0  2FCB               	goto	u755
  3612     07D1                     l1324:
  3613     07D1  3001               	movlw	1
  3614     07D2  02F4               	subwf	___awdiv@counter,f
  3615     07D3  1D03               	btfss	3,2
  3616     07D4  2FD6               	goto	u761
  3617     07D5  2FD7               	goto	u760
  3618     07D6                     u761:
  3619     07D6  2FB2               	goto	l1316
  3620     07D7                     u760:
  3621     07D7                     l1326:
  3622     07D7  0875               	movf	___awdiv@sign,w
  3623     07D8  1903               	btfsc	3,2
  3624     07D9  2FDB               	goto	u771
  3625     07DA  2FDC               	goto	u770
  3626     07DB                     u771:
  3627     07DB  2FE1               	goto	l1330
  3628     07DC                     u770:
  3629     07DC                     l1328:
  3630     07DC  09F6               	comf	___awdiv@quotient,f
  3631     07DD  09F7               	comf	___awdiv@quotient+1,f
  3632     07DE  0AF6               	incf	___awdiv@quotient,f
  3633     07DF  1903               	skipnz
  3634     07E0  0AF7               	incf	___awdiv@quotient+1,f
  3635     07E1                     l1330:
  3636     07E1  0877               	movf	___awdiv@quotient+1,w
  3637     07E2  00F1               	movwf	?___awdiv+1
  3638     07E3  0876               	movf	___awdiv@quotient,w
  3639     07E4  00F0               	movwf	?___awdiv
  3640     07E5                     l463:
  3641     07E5  0008               	return
  3642     07E6                     __end_of___awdiv:
  3643                           
  3644                           	psect	text29
  3645     03E0                     __ptext29:	
  3646 ;; *************** function _displayheader *****************
  3647 ;; Defined at:
  3648 ;;		line 11 in file "app.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  header         17    0[BANK0 ] unsigned char [17]
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         0       0       0       0       0
  3663 ;;      Locals:         0      17       0       0       0
  3664 ;;      Temps:          4       0       0       0       0
  3665 ;;      Totals:         4      17       0       0       0
  3666 ;;Total ram usage:       21 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 2
  3669 ;; This function calls:
  3670 ;;		_clcd_print
  3671 ;; This function is called by:
  3672 ;;		_display_dashboard
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676     03E0                     _displayheader:	
  3677                           ;psect for function _displayheader
  3678                           
  3679     03E0                     l1430:	
  3680                           ;incstack = 0
  3681                           ; Regs used in _displayheader: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3682                           
  3683                           
  3684                           ;app.c: 15:     char header[] = "  TIME     E  SP";
  3685     03E0  3032               	movlw	displayheader@header& (0+255)
  3686     03E1  0084               	movwf	4
  3687     03E2  3020               	movlw	low displayheader@F1007
  3688     03E3  00F6               	movwf	??_displayheader
  3689     03E4  0804               	movf	4,w
  3690     03E5  00F7               	movwf	??_displayheader+1
  3691     03E6  3011               	movlw	17
  3692     03E7  00F8               	movwf	??_displayheader+2
  3693     03E8                     u930:
  3694     03E8  0876               	movf	??_displayheader,w
  3695     03E9  0084               	movwf	4
  3696     03EA  1383               	bcf	3,7	;select IRP bank0
  3697     03EB  0800               	movf	0,w
  3698     03EC  00F9               	movwf	??_displayheader+3
  3699     03ED  0AF6               	incf	??_displayheader,f
  3700     03EE  0877               	movf	??_displayheader+1,w
  3701     03EF  0084               	movwf	4
  3702     03F0  0879               	movf	??_displayheader+3,w
  3703     03F1  0080               	movwf	0
  3704     03F2  0AF7               	incf	??_displayheader+1,f
  3705     03F3  0BF8               	decfsz	??_displayheader+2,f
  3706     03F4  2BE8               	goto	u930
  3707     03F5                     l1432:
  3708                           
  3709                           ;app.c: 17:     clcd_print(header, (0x80 + 0));
  3710     03F5  3080               	movlw	128
  3711     03F6  00F4               	movwf	clcd_print@addr
  3712     03F7  3032               	movlw	(low (displayheader@header| 0))& (0+255)
  3713     03F8  120A  118A  2479  120A  118A  	fcall	_clcd_print
  3714     03FD                     l209:
  3715     03FD  0008               	return
  3716     03FE                     __end_of_displayheader:
  3717                           
  3718                           	psect	text30
  3719     0323                     __ptext30:	
  3720 ;; *************** function _displayevent *****************
  3721 ;; Defined at:
  3722 ;;		line 56 in file "app.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  event           1    wreg     PTR const unsigned char 
  3725 ;;		 -> event(2), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  event           1    6[COMMON] PTR const unsigned char 
  3728 ;;		 -> event(2), 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         1       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0
  3741 ;;      Totals:         1       0       0       0       0
  3742 ;;Total ram usage:        1 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 2
  3745 ;; This function calls:
  3746 ;;		_clcd_print
  3747 ;; This function is called by:
  3748 ;;		_display_dashboard
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752     0323                     _displayevent:	
  3753                           ;psect for function _displayevent
  3754                           
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _displayevent: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3758                           ;displayevent@event stored from wreg
  3759     0323  00F6               	movwf	displayevent@event
  3760     0324                     l1438:
  3761                           
  3762                           ;app.c: 56: void displayevent(const char* event);app.c: 57: {;app.c: 59:     clcd_print(
      +                          event, (0xC0 + 11));
  3763     0324  30CB               	movlw	203
  3764     0325  00F4               	movwf	clcd_print@addr
  3765     0326  0876               	movf	displayevent@event,w
  3766     0327  120A  118A  2479  120A  118A  	fcall	_clcd_print
  3767     032C                     l218:
  3768     032C  0008               	return
  3769     032D                     __end_of_displayevent:
  3770                           
  3771                           	psect	text31
  3772     0479                     __ptext31:	
  3773 ;; *************** function _clcd_print *****************
  3774 ;; Defined at:
  3775 ;;		line 55 in file "clcd.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  str             1    wreg     PTR const unsigned char 
  3778 ;;		 -> time(9), displayheader@header(17), event(2), 
  3779 ;;  addr            1    4[COMMON] unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  str             1    5[COMMON] PTR const unsigned char 
  3782 ;;		 -> time(9), displayheader@header(17), event(2), 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3792 ;;      Params:         1       0       0       0       0
  3793 ;;      Locals:         1       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0
  3795 ;;      Totals:         2       0       0       0       0
  3796 ;;Total ram usage:        2 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 1
  3799 ;; This function calls:
  3800 ;;		_clcd_write
  3801 ;; This function is called by:
  3802 ;;		_displayheader
  3803 ;;		_displaytime
  3804 ;;		_displayevent
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808     0479                     _clcd_print:	
  3809                           ;psect for function _clcd_print
  3810                           
  3811                           
  3812                           ;incstack = 0
  3813                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3814                           ;clcd_print@str stored from wreg
  3815     0479  00F5               	movwf	clcd_print@str
  3816     047A                     l1234:
  3817                           
  3818                           ;clcd.c: 55: void clcd_print(const char *str, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
  3819     047A  01F0               	clrf	clcd_write@mode
  3820     047B  0874               	movf	clcd_print@addr,w
  3821     047C  120A  118A  2459  120A  118A  	fcall	_clcd_write
  3822                           
  3823                           ;clcd.c: 59:     while (*str != '\0')
  3824     0481  2C90               	goto	l1240
  3825     0482                     l1236:
  3826                           
  3827                           ;clcd.c: 60:     {;clcd.c: 61:         clcd_write(*str, 1);
  3828     0482  01F0               	clrf	clcd_write@mode
  3829     0483  0AF0               	incf	clcd_write@mode,f
  3830     0484  0875               	movf	clcd_print@str,w
  3831     0485  0084               	movwf	4
  3832     0486  0800               	movf	0,w
  3833     0487  120A  118A  2459  120A  118A  	fcall	_clcd_write
  3834     048C                     l1238:
  3835                           
  3836                           ;clcd.c: 62:         str++;
  3837     048C  3001               	movlw	1
  3838     048D  00FF               	movwf	btemp+1
  3839     048E  087F               	movf	btemp+1,w
  3840     048F  07F5               	addwf	clcd_print@str,f
  3841     0490                     l1240:
  3842                           
  3843                           ;clcd.c: 59:     while (*str != '\0')
  3844     0490  0875               	movf	clcd_print@str,w
  3845     0491  0084               	movwf	4
  3846     0492  1383               	bcf	3,7	;select IRP bank0
  3847     0493  0800               	movf	0,w
  3848     0494  1D03               	btfss	3,2
  3849     0495  2C97               	goto	u571
  3850     0496  2C98               	goto	u570
  3851     0497                     u571:
  3852     0497  2C82               	goto	l1236
  3853     0498                     u570:
  3854     0498                     l32:
  3855     0498  0008               	return
  3856     0499                     __end_of_clcd_print:
  3857                           
  3858                           	psect	text32
  3859     0459                     __ptext32:	
  3860 ;; *************** function _clcd_write *****************
  3861 ;; Defined at:
  3862 ;;		line 4 in file "clcd.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  byte            1    wreg     unsigned char 
  3865 ;;  mode            1    0[COMMON] unsigned char 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  byte            1    3[COMMON] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3877 ;;      Params:         1       0       0       0       0
  3878 ;;      Locals:         1       0       0       0       0
  3879 ;;      Temps:          2       0       0       0       0
  3880 ;;      Totals:         4       0       0       0       0
  3881 ;;Total ram usage:        4 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_init_display_controller
  3887 ;;		_clcd_putch
  3888 ;;		_clcd_print
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892     0459                     _clcd_write:	
  3893                           ;psect for function _clcd_write
  3894                           
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in _clcd_write: [wreg]
  3898                           ;clcd_write@byte stored from wreg
  3899     0459  00F3               	movwf	clcd_write@byte
  3900     045A                     l1198:
  3901                           
  3902                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  3903     045A  1870               	btfsc	clcd_write@mode,0
  3904     045B  2C5D               	goto	u551
  3905     045C  2C61               	goto	u550
  3906     045D                     u551:
  3907     045D  1283               	bcf	3,5	;RP0=0, select bank0
  3908     045E  1303               	bcf	3,6	;RP1=0, select bank0
  3909     045F  1509               	bsf	9,2	;volatile
  3910     0460  2C64               	goto	u564
  3911     0461                     u550:
  3912     0461  1283               	bcf	3,5	;RP0=0, select bank0
  3913     0462  1303               	bcf	3,6	;RP1=0, select bank0
  3914     0463  1109               	bcf	9,2	;volatile
  3915     0464                     u564:
  3916     0464                     l1200:
  3917                           
  3918                           ;clcd.c: 7:     PORTD = byte;
  3919     0464  0873               	movf	clcd_write@byte,w
  3920     0465  0088               	movwf	8	;volatile
  3921     0466                     l1202:
  3922                           
  3923                           ;clcd.c: 9:     RE1 = 1;
  3924     0466  1489               	bsf	9,1	;volatile
  3925                           
  3926                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3927     0467  30A6               	movlw	166
  3928     0468  00F1               	movwf	??_clcd_write
  3929     0469                     u1097:
  3930     0469  0BF1               	decfsz	??_clcd_write,f
  3931     046A  2C69               	goto	u1097
  3932     046B  0000               	nop
  3933     046C                     l1204:
  3934                           
  3935                           ;clcd.c: 11:     RE1 = 0;
  3936     046C  1283               	bcf	3,5	;RP0=0, select bank0
  3937     046D  1303               	bcf	3,6	;RP1=0, select bank0
  3938     046E  1089               	bcf	9,1	;volatile
  3939                           
  3940                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3941     046F  301B               	movlw	27
  3942     0470  00F2               	movwf	??_clcd_write+1
  3943     0471  309E               	movlw	158
  3944     0472  00F1               	movwf	??_clcd_write
  3945     0473                     u1107:
  3946     0473  0BF1               	decfsz	??_clcd_write,f
  3947     0474  2C73               	goto	u1107
  3948     0475  0BF2               	decfsz	??_clcd_write+1,f
  3949     0476  2C73               	goto	u1107
  3950     0477  0000               	nop
  3951     0478                     l17:
  3952     0478  0008               	return
  3953     0479                     __end_of_clcd_write:
  3954     007E                     btemp	set	126	;btemp
  3955     007E                     wtemp0	set	126
  3956                           
  3957                           	psect	config
  3958                           
  3959                           ;Config register CONFIG @ 0x2007
  3960                           ;	Oscillator Selection bits
  3961                           ;	FOSC = 0x3, unprogrammed default
  3962                           ;	Watchdog Timer Enable bit
  3963                           ;	WDTE = OFF, WDT disabled
  3964                           ;	Power-up Timer Enable bit
  3965                           ;	PWRTE = 0x1, unprogrammed default
  3966                           ;	Brown-out Reset Enable bit
  3967                           ;	BOREN = 0x1, unprogrammed default
  3968                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3969                           ;	LVP = 0x1, unprogrammed default
  3970                           ;	Data EEPROM Memory Code Protection bit
  3971                           ;	CPD = 0x1, unprogrammed default
  3972                           ;	Flash Program Memory Write Enable bits
  3973                           ;	WRT = 0x3, unprogrammed default
  3974                           ;	In-Circuit Debugger Mode bit
  3975                           ;	DEBUG = 0x1, unprogrammed default
  3976                           ;	Flash Program Memory Code Protection bit
  3977                           ;	CP = 0x1, unprogrammed default
  3978     2007                     	org	8199
  3979     2007  3FFB               	dw	16379

Data Sizes:
    Strings     3
    Constant    0
    Data        18
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    display_dashboard@speed	PTR const unsigned char  size(1) Largest target is 2
		 -> speed(BANK0[2]), 

    display_dashboard@event	PTR const unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    displayspeed@speed	PTR const unsigned char  size(1) Largest target is 2
		 -> speed(BANK0[2]), 

    displayevent@event	PTR const unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 2
		 -> event(BANK0[2]), 

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> time(BANK0[9]), displayheader@header(BANK0[17]), event(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_display_dashboard
    _init_i2c->___lldiv
    _init_ds1307->_read_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _getdata->___lwdiv
    _display_dashboard->_displayspeed
    _displaytime->_clcd_print
    _gettime->_read_ds1307
    _read_ds1307->_i2c_read
    _displayspeed->_clcd_putch
    _clcd_putch->___awdiv
    _displayheader->_clcd_print
    _displayevent->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _main->_display_dashboard
    _init_config->_init_i2c
    _display_dashboard->_displayheader

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7975
                  _display_dashboard
                            _getdata
                        _init_config
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               3     2      1     184
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1516
                           _init_adc
                          _init_clcd
                _init_digital_keypad
                        _init_ds1307
                           _init_i2c
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     300
                                              4 COMMON     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     142
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getdata                                              0     0      0     359
                            ___lwdiv
                           _read_adc
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (2) _read_digital_keypad                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    2     1      1    5916
                                             13 COMMON     1     0      1
                                             17 BANK0      1     1      0
                       _displayevent
                      _displayheader
                       _displayspeed
                        _displaytime
 ---------------------------------------------------------------------------------
 (2) _displaytime                                          0     0      0    1310
                         _clcd_print
                            _gettime
 ---------------------------------------------------------------------------------
 (3) _gettime                                              1     1      0     112
                                              4 COMMON     1     1      0
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0     112
                                              2 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             2     2      0      45
                                              0 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _displayspeed                                         3     3      0    1977
                                             10 COMMON     3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (3) _clcd_putch                                           2     1      1    1000
                                              8 COMMON     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _displayheader                                       21    21      0    1223
                                              6 COMMON     4     4      0
                                              0 BANK0     17    17      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _displayevent                                         1     1      0    1253
                                              6 COMMON     1     1      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (3) _clcd_print                                           2     1      1    1198
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_dashboard
     _displayevent
       _clcd_print
         _clcd_write
     _displayheader
       _clcd_print
     _displayspeed
       ___awdiv
       ___awmod
       _clcd_putch
         ___awdiv (ARG)
         ___awmod (ARG)
         _clcd_write (ARG)
     _displaytime
       _clcd_print
       _gettime
         _read_ds1307
           _i2c_read
             _i2c_wait_for_idle
           _i2c_rep_start
             _i2c_start
               _i2c_wait_for_idle
             _i2c_stop
               _i2c_wait_for_idle
           _i2c_start
           _i2c_stop
           _i2c_write
             _i2c_wait_for_idle
   _getdata
     ___lwdiv
     _read_adc
     _read_digital_keypad
   _init_config
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
       ___lldiv
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 01 14:07:37 2024

                              pc 0002                   clcd_print@addr 0074                               l20 06BF  
                             l23 034D                               l32 0498                               l17 0478  
                             l26 0379                               l45 0507                               l39 0301  
                             l72 041B                               l66 03B0                               l69 0532  
                             _GO 00FA                     ___awdiv@sign 0075                     ?_displaytime 0070  
                             fsr 0004                              l101 0564                              l110 0319  
                            l104 034E                              l120 04B7                              l121 04B9  
                            l113 0337                              l107 035A                              l116 0322  
                            l124 0342                              l212 0668                              l221 05D3  
                            l142 037D                              l119 04B4                              l215 0368  
                            l224 03DF                              l209 03FD                              l145 038B  
                            l218 032C                              l139 0308                              l180 0599  
                            l176 04DD                              l346 077E                              l463 07E5  
                            l476 0718                              l582 0617                              l764 0458  
                            _RE1 0049                              _RE2 004A                              u520 0354  
                            _PEN 048A                              u521 0353                              u530 035A  
                            u610 0729                              u531 0359                              u611 0728  
                            u700 07A0                              u540 04B0                              u701 079F  
                            u541 04AF                              u605 065A                              u550 0461  
                            u630 073D                              u551 045D                              u631 073C  
                            u720 07B2                              u800 06DB                              u721 07B1  
                            u801 06DA                              u625 072E                              u570 0498  
                            u650 0758                              u571 0497                              u715 07A4  
                            u651 0757                              u564 0464                              u740 07C3  
                            u820 06ED                              u900 0504                              _SEN 0488  
                            u741 07C2                              u821 06EC                              u901 0503  
                            u645 073F                              u830 06F7                              u670 0776  
                            u910 0544                              u735 07B3                              u831 06F6  
                            u815 06DF                              u671 0775                              u655 0754  
                            u760 07D7                              u680 0784                              u920 0381  
                            u761 07D6                              u745 07BF                              u681 0783  
                            u585 0636                              u921 0380                              u665 0768  
                            u930 03E8                              u770 07DC                              u690 078F  
                            u850 070A                              u771 07DB                              u755 07CB  
                            u691 078E                              u851 0709                              u835 06F3  
                            u595 0648                              u915 053F                              u860 070F  
                            u780 06C5                              u940 05DC                              u861 070E  
                            u845 06FE                              u781 06C4                              u941 05DB  
                            u790 06D0                              u870 04E4                              u791 06CF  
                            u871 04E3                              u960 05EE                              u880 04F4  
                            u961 05ED                              u881 04F3                              u890 04F9  
                            u955 05E0                              u891 04F8                              u980 05FF  
                            u981 05FE                              u975 05EF                              u985 05FB  
                            u995 0607                    ?_displayevent 0070                              _key 0047  
                 clcd_putch@addr 0078                              fsr0 0004                   clcd_putch@data 0079  
                            indf 0000                    ?_displayspeed 0070                     ___awmod@sign 0075  
                           l1200 0464                             l1202 0466                             l1204 046C  
                           l1300 078F                             l1220 068D                             l1212 0669  
                           l1310 07A3                             l1302 0794                             l1206 0509  
                           l1230 06B3                             l1222 0694                             l1214 0671  
                           l1240 0490                             l1320 07C9                             l1312 07AA  
                           l1304 0798                             l1232 036A                             l1208 0531  
                           l1224 0697                             l1216 0678                             l1234 047A  
                           l1330 07E1                             l1322 07CA                             l1314 07AE  
                           l1306 079A                             l1162 034E                             l1170 031A  
                           l1250 0643                             l1402 04FB                             l1226 069E  
                           l1218 0688                             l1242 03FF                             l1410 039E  
                           l1236 0482                             l1324 07D1                             l1316 07B2  
                           l1308 07A0                             l1340 06CA                             l1164 0354  
                           l1172 031F                             l1260 0663                             l1252 0645  
                           l1244 0618                             l1404 0504                             l1228 06AA  
                           l1412 03A5                             l1420 0561                             l1500 0429  
                           l1238 048C                             l1430 03E0                             l1318 07C3  
                           l1326 07D7                             l1350 06DE                             l1342 06CC  
                           l1334 06C0                             l1190 04AB                             l1166 0311  
                           l1182 032D                             l1174 0339                             l1262 0667  
                           l1254 0651                             l1246 0633                             l1406 0506  
                           l1422 0302                             l1414 03A8                             l1270 0735  
                           l1432 03F5                             l1328 07DC                             l1360 06FD  
                           l1352 06E5                             l1344 06D0                             l1336 06C1  
                           l1440 059B                             l1192 04B0                             l1184 049A  
                           l1168 0316                             l1176 033E                             l1256 0655  
                           l1248 063F                             l1424 037A                             l1280 0766  
                           l1272 0739                             l1264 0719                             l1416 0533  
          ??_read_digital_keypad 0070                             l1290 077F                             l1362 0704  
                           l1354 06E9                             l1346 06D5                             l1338 06C5  
                           l1194 04B8                             l1186 049F                             l1178 0342  
                           l1258 0657                             l1434 035B                             l1450 05E6  
                           l1442 05D4                             l1426 0381                             l1282 0767  
                           l1274 073D                             l1266 0729                             l1418 0536  
                           l1292 0780                             l1356 06ED                             l1348 06DB  
                           l1364 070A                             l1188 04A7                             l1436 0360  
                           l1460 0606                             l1452 05EA                             l1444 05D6  
                           l1372 0343                             l1380 02FC                             l1284 0770  
                           l1276 0746                             l1268 072C                             l1198 045A  
                           l1438 0324                             l1294 0784                             l1366 070F  
                           l1358 06F7                             l1462 060D                             l1454 05EE  
                           l1446 05DC                             l1390 04E9                             l1382 04DF  
                           l1374 0346                             l1278 0758                             l1286 0776  
                           l1470 04BF                             l1296 0789                             l1368 0714  
                           l1456 05FF                             l1448 05DF                             l1464 0613  
                           l1392 04F4                             l1384 04E4                             l1480 0570  
                           l1376 0347                             l1472 04C4                             l1298 078B  
                           l1458 0605                             l1394 04F9                             l1482 0583  
                           l1378 0348                             l1474 04C9                             l1490 043E  
                           l1484 058C                             l1476 04D8                             l1468 04BA  
                           l1492 0446                             l1494 03C7                             l1486 0590  
                           l1478 0565                             l1488 043B                             l1496 041C  
                           l1498 0421                             _ADFM 04FF                             _ADON 00F8  
                           STR_1 0009                             u1000 0613                             u1001 0612  
                           u1010 058C                             u1011 058B                             u1020 0458  
                           u1021 0457                             u1107 0473                             u1037 066D  
                           u1047 067C                             u1057 068A                             u1067 06A0  
                           u1077 06AE                             u1087 06BC                             u1097 0469  
                           _RCEN 048B                   ?_displayheader 0070                             _R_nW 04A2  
                           _main 041C                             _time 0048                             btemp 007E  
                           start 0000                   clcd_write@byte 0073                   clcd_write@mode 0070  
                  _i2c_rep_start 032D                displayspeed@speed 007C                     ?_init_ds1307 0070  
                          ?_main 0070                     ?_read_ds1307 0070                            _ACKEN 048C  
                          _ACKDT 048D                  __end_of___awdiv 07E6                  __end_of___awmod 0719  
                __end_of___lldiv 077F                      i2c_read@ack 0070                   ??_displayevent 0076  
                ___awdiv@divisor 0070                  __end_of___lwdiv 0618                     ?_init_config 0070  
                 ??_displayspeed 007A                  ___awdiv@counter 0074                            _PORTB 0006  
                          _PORTD 0008                            _SSPM3 00A3                            _TRISB 0086  
                          _TRISD 0088                            _SSPEN 00A5                            _nDONE 00FA  
                __end_of_getdata 059A                  __end_of_gettime 0669                            _event 0053  
                          _speed 0051                            pclath 000A                            status 0003  
                          wtemp0 007E                 init_ds1307@dummy 0074                  __initialization 07E6  
                 ?_i2c_rep_start 0070                     __end_of_main 043A                 __end_of_i2c_read 04BA  
               __end_of_i2c_stop 0323                           ??_main 007E              displayheader@header 0032  
                ??_displayheader 0076                           _ADRESH 001E                           _ADRESL 009E  
               ___awdiv@dividend 0072                     i2c_read@data 0071                     _write_ds1307 03FE  
                         _SSPADD 0093                           _TRISE1 0449                           _TRISE2 044A  
                         _SSPBUF 0013      __end_of_init_digital_keypad 0302          _init_display_controller 0669  
                      ??___awdiv 0074                        ??___awmod 0074                        ??___lldiv 0078  
                      ??___lwdiv 0074                 __end_of_init_i2c 0565                 __end_of_init_adc 0309  
               __end_of_read_adc 038C                 ___awdiv@quotient 0076                  ___awmod@divisor 0070  
                ___awmod@counter 0074                        ??_getdata 0077                           _strcpy 043A  
                      ??_gettime 0074          __end_of__initialization 07FC             __end_of_displayevent 032D  
                ??_i2c_rep_start 0070             __end_of_displayspeed 05D4                   __pcstackCOMMON 0070  
                   __pidataBANK0 038C                __end_of_i2c_start 031A                __end_of_i2c_write 0343  
              _i2c_wait_for_idle 034E               ?_i2c_wait_for_idle 0070                       __pbssBANK0 0044  
                      ?_i2c_read 0070                        ?_i2c_stop 0070        ??_init_display_controller 0074  
                     _clcd_print 0479              ??_i2c_wait_for_idle 0070                       _clcd_putch 0369  
                     _clcd_write 0459                       __pmaintext 041C                  read_ds1307@addr 0072  
                read_ds1307@data 0073                          _ACKSTAT 048E                          ?_strcpy 0070  
    __end_of_read_digital_keypad 0508        __end_of_i2c_wait_for_idle 035B                     init_i2c@baud 0032  
                        _SSPCON2 0091                       __stringtab 0003                       ??_i2c_read 0070  
                     ??_i2c_stop 0070                        ?_init_i2c 0032                        ?_init_adc 0070  
                      ?_read_adc 0070                          ___awdiv 077F                          ___awmod 06C0  
                        ___lldiv 0719                          ___lwdiv 05D4                          __ptext1 043A  
                        __ptext2 04BA                          __ptext3 0533                          __ptext4 0719  
                        __ptext5 039E                          __ptext6 03FE                          __ptext7 02FC  
                        __ptext8 0343                          __ptext9 0669                          _getdata 0565  
                        _gettime 0618  __end_of_init_display_controller 06C0                __end_of_init_clcd 034E  
               ___awmod@dividend 0072           display_dashboard@event 0043           display_dashboard@speed 007D  
                        clrloop0 030A             end_of_initialization 07FC                       ??_init_i2c 0036  
                     ??_init_adc 0070                       ??_read_adc 0072                      ?_clcd_print 0074  
                    ?_clcd_putch 0078                  ___lldiv@divisor 0070                      ?_clcd_write 0070  
                ___lldiv@counter 007D                     _displayevent 0323                    i2c_write@data 0070  
                   _displayspeed 059A                    clcd_print@str 0075            __end_of_displayheader 03FE  
                  ??_displaytime 0076                   __end_of_strcpy 0459              start_initialization 07E6  
             displayheader@F1007 0020                        _i2c_start 0311                        _i2c_write 0338  
          __end_of_i2c_rep_start 0338                       init_fetch0 03B1                    ??_init_ds1307 0074  
                    __pdataBANK0 0020                    ??_read_ds1307 0072                         ??_strcpy 0071  
                  ??_init_config 007E              __end_of_displaytime 0369                        ___latbits 0002  
                  __pcstackBANK0 0032                       ?_i2c_start 0070                       ?_i2c_write 0070  
               ___lwdiv@dividend 0072                         ?___awdiv 0070                         ?___awmod 0070  
              _display_dashboard 03C4                         ?___lldiv 0070                         ?___lwdiv 0070  
                      _clocktime 0044               ?_display_dashboard 007D                        __pstrings 0003  
                       ?_getdata 0070                         ?_gettime 0070              __end_of_init_ds1307 03B1  
            read_adc@adc_reg_val 0072              ??_display_dashboard 007E              __end_of_read_ds1307 0533  
               ___lwdiv@quotient 0074                        _init_clcd 0343              __end_of_init_config 04DE  
                  ?_write_ds1307 0071         ?_init_display_controller 0070                        clear_ram0 0309  
                   ??_clcd_print 0075                     ??_clcd_putch 0079                     ??_clcd_write 0071  
      __end_of_display_dashboard 03E0                      _displaytime 035B                      __stringbase 0008  
                    ??_i2c_start 0070               __end_of_clcd_print 0499                      ??_i2c_write 0070  
             __end_of_clcd_putch 037A               __end_of_clcd_write 0479                       ?_init_clcd 0070  
                 ??_write_ds1307 0072              _init_digital_keypad 02FC                         _i2c_read 0499  
                       _i2c_stop 031A             ?_init_digital_keypad 0070                      _init_ds1307 039E  
             __end_of__stringtab 0009                      _read_ds1307 0508                      _init_config 04BA  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0076                         __ptext10 0302  
                       __ptext11 0565                         __ptext20 032D                         __ptext12 04DE  
                       __ptext21 031A                         __ptext13 037A                         __ptext30 0323  
                       __ptext22 0311                         __ptext14 05D4                         __ptext31 0479  
                       __ptext23 0499                         __ptext15 03C4                         __ptext32 0459  
                       __ptext24 034E                         __ptext16 035B                         __ptext25 059A  
                       __ptext17 0618                         __ptext26 0369                         __ptext18 0508  
                       __ptext27 06C0                         __ptext19 0338                         __ptext28 077F  
                       __ptext29 03E0                       strcpy@from 0070                         _init_i2c 0533  
                       _init_adc 0302                         _read_adc 037A          read_digital_keypad@mode 0071  
        read_digital_keypad@once 0031            ??_init_digital_keypad 0070                         init_ram0 03B5  
                    ??_init_clcd 0076                 ___lldiv@dividend 0074                displayevent@event 0076  
                      stringcode 0003             __end_of_write_ds1307 041C              _read_digital_keypad 04DE  
               ___lldiv@quotient 0079                         strcpy@cp 0072                         strcpy@to 0071  
                       stringdir 0003                         stringtab 0003             ?_read_digital_keypad 0070  
               write_ds1307@addr 0072                 write_ds1307@data 0071                    _displayheader 03E0  
